query Namespaces(
  $namespace: String!
  $filterBy: String
  $sortBy: String
  $itemsPerPage: String
  $page: String
) {
  handleGetNamespaces(
    filterBy: $filterBy
    sortBy: $sortBy
    itemsPerPage: $itemsPerPage
    page: $page
  )
    @rest(
      path: "namespace?filterBy={args.filterBy}&sortBy={args.sortBy}&itemsPerPage={args.itemsPerPage}&page={args.page}"
    ) {
    listMeta @type(name: "types_ListMeta") {
      ...ListMeta
    }
    namespaces {
      typeMeta @type(name: "types_TypeMeta") {
        ...TypeMeta
      }
      objectMeta @type(name: "types_ObjectMeta") {
        ...ObjectMeta
      }
      phase
    }
  }
}

query Namespace($name: String!) {
  handleGetNamespaceDetail(name: $name) @rest(path: "namespace/{args.name}") {
    typeMeta @type(name: "types_TypeMeta") {
      ...TypeMeta
    }
    objectMeta @type(name: "types_ObjectMeta") {
      ...ObjectMeta
    }
    resourceQuotaList {
      items {
        typeMeta @type(name: "types_TypeMeta") {
          ...TypeMeta
        }
        objectMeta @type(name: "types_ObjectMeta") {
          ...ObjectMeta
        }
        scopes
        statusList
      }
    }
    resourceLimits {
      default
      defaultRequest
      max
      maxLimitRequestRatio
      min
      resourceName
      resourceType
    }
    phase
    errors
  }
}

query NamespaceEvents(
  $name: String!
  $filterBy: String
  $sortBy: String
  $itemsPerPage: String
  $page: String
) {
  handleGetNamespaceEvents(
    name: $name
    filterBy: $filterBy
    sortBy: $sortBy
    itemsPerPage: $itemsPerPage
    page: $page
  )
    @rest(
      type: "common_EventList"
      path: "namespace/{args.name}/event?filterBy={args.filterBy}&sortBy={args.sortBy}&itemsPerPage={args.itemsPerPage}&page={args.page}"
    ) {
    ...EventList
  }
}
