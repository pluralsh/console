query Nodes(
  $namespace: String!
  $filterBy: String
  $sortBy: String
  $itemsPerPage: String
  $page: String
) {
  handleGetNodeList(
    filterBy: $filterBy
    sortBy: $sortBy
    itemsPerPage: $itemsPerPage
    page: $page
  )
    @rest(
      path: "node?filterBy={args.filterBy}&sortBy={args.sortBy}&itemsPerPage={args.itemsPerPage}&page={args.page}"
    ) {
    errors
    listMeta @type(name: "types_ListMeta") {
      ...ListMeta
    }
    nodes {
      typeMeta @type(name: "types_TypeMeta") {
        ...TypeMeta
      }
      objectMeta @type(name: "types_ObjectMeta") {
        ...ObjectMeta
      }
      allocatedResources @type(name: "node_NodeAllocatedResources") {
        ...NodeAllocatedResources
      }
      ready
    }
  }
}

query Node($name: String!) {
  handleGetNodeDetail(name: $name) @rest(path: "node/{args.name}") {
    typeMeta @type(name: "types_TypeMeta") {
      ...TypeMeta
    }
    objectMeta @type(name: "types_ObjectMeta") {
      ...ObjectMeta
    }
    conditions @type(name: "common_Condition") {
      ...Condition
    }
    allocatedResources @type(name: "node_NodeAllocatedResources") {
      ...NodeAllocatedResources
    }
    nodeInfo {
      architecture
      bootID
      containerRuntimeVersion
      kernelVersion
      kubeletVersion
      kubeProxyVersion
      machineID
      operatingSystem
      osImage
      systemUUID
    }
    addresses {
      type
      address
    }
    taints {
      key
      value
      effect
    }
    providerID
    containerImages
    podCIDR
    phase
    unschedulable
    ready
    errors
  }
}

query NodePods(
  $namespace: String!
  $name: String!
  $filterBy: String
  $sortBy: String
  $itemsPerPage: String
  $page: String
) {
  handleGetNodePods(
    name: $name
    filterBy: $filterBy
    sortBy: $sortBy
    itemsPerPage: $itemsPerPage
    page: $page
  )
    @rest(
      type: "pod_PodList"
      path: "node/{args.name}/pod?filterBy={args.filterBy}&sortBy={args.sortBy}&itemsPerPage={args.itemsPerPage}&page={args.page}"
    ) {
    ...PodList
  }
}

query NodeEvents(
  $name: String!
  $filterBy: String
  $sortBy: String
  $itemsPerPage: String
  $page: String
) {
  handleGetNodeEvents(
    name: $name
    filterBy: $filterBy
    sortBy: $sortBy
    itemsPerPage: $itemsPerPage
    page: $page
  )
    @rest(
      type: "common_EventList"
      path: "node/{args.name}/event?filterBy={args.filterBy}&sortBy={args.sortBy}&itemsPerPage={args.itemsPerPage}&page={args.page}"
    ) {
    ...EventList
  }
}
