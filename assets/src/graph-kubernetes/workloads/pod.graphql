query Pods(
  $namespace: String!
  $filterBy: String
  $sortBy: String
  $itemsPerPage: String
  $page: String
) {
  handleGetPods(
    namespace: $namespace
    filterBy: $filterBy
    sortBy: $sortBy
    itemsPerPage: $itemsPerPage
    page: $page
  )
    @rest(
      type: "pod_PodList"
      path: "pod/{args.namespace}?filterBy={args.filterBy}&sortBy={args.sortBy}&itemsPerPage={args.itemsPerPage}&page={args.page}"
    ) {
    ...PodList
  }
}

query Pod($name: String!, $namespace: String!) {
  handleGetPodDetail(namespace: $namespace, pod: $name)
    @rest(path: "pod/{args.namespace}/{args.pod}") {
    typeMeta @type(name: "types_TypeMeta") {
      ...TypeMeta
    }
    objectMeta @type(name: "types_ObjectMeta") {
      ...ObjectMeta
    }
    nodeName
    restartCount
    serviceAccountName
    podIP
    podPhase
    qosClass
    conditions @type(name: "common_Condition") {
      ...Condition
    }
    containers @type(name: "pod_Container") {
      ...Container
    }
    initContainers @type(name: "pod_Container") {
      ...Container
    }
    imagePullSecrets {
      name
    }
    persistentVolumeClaimList
      @type(name: "persistentvolumeclaim_PersistentVolumeClaimList") {
      ...PersistentVolumeClaimList
    }
    controller @type(name: "controller_ResourceOwner") {
      ...ResourceOwner
    }
    securityContext @type(name: "v1_PodSecurityContext") {
      ...PodSecurityContext
    }
  }
}

query PodEvents(
  $name: String!
  $namespace: String!
  $filterBy: String
  $sortBy: String
  $itemsPerPage: String
  $page: String
) {
  handleGetPodEvents(
    pod: $name
    namespace: $namespace
    filterBy: $filterBy
    sortBy: $sortBy
    itemsPerPage: $itemsPerPage
    page: $page
  )
    @rest(
      type: "common_EventList"
      path: "pod/{args.namespace}/{args.pod}/event?filterBy={args.filterBy}&sortBy={args.sortBy}&itemsPerPage={args.itemsPerPage}&page={args.page}"
    ) {
    ...EventList
  }
}
