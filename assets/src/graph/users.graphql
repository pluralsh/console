fragment User on User {
  id
  pluralId
  name
  email
  emailSettings {
    digest
  }
  profile
  backgroundColor
  readTimestamp
  roles {
    admin
  }
  personas {
    ...Persona
  }
}

fragment Invite on Invite {
  secureId
}

fragment RoleBinding on RoleBinding {
  id
  user {
    ...User
  }
  group {
    ...Group
  }
}

fragment Role on Role {
  id
  name
  description
  repositories
  permissions
  roleBindings {
    ...RoleBinding
  }
}

fragment AvailableFeatures on AvailableFeatures {
  audits
  cd
  databaseManagement
  userManagement
  vpn
}

fragment Manifest on PluralManifest {
  network {
    pluralDns
    subdomain
  }
  cluster
  bucketPrefix
}

fragment Account on Account {
  grandfatheredUntil
  delinquentAt
  availableFeatures {
    audits
    userManagement
    databaseManagement
    vpn
  }
  subscription {
    id
    plan {
      id
      name
      period
    }
  }
}

query Subscription {
  account {
    ...Account
  }
}

query Me {
  me {
    ...User
    boundRoles {
      ...Role
    }
    unreadNotifications
  }
  externalToken
  clusterInfo {
    version
    platform
    gitCommit
  }
  configuration {
    vpnEnabled
    gitCommit
    isDemoProject
    isSandbox
    pluralLogin
    byok
    externalOidc
    cloud
    installed
    manifest {
      ...Manifest
    }
    gitStatus {
      cloned
      output
    }
    features {
      ...AvailableFeatures
    }
  }
}

query Users($q: String, $after: String) {
  users(q: $q, first: 20, after: $after) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...User
      }
    }
  }
}

query SearchUsers($q: String, $cursor: String) {
  users(q: $q, after: $cursor, first: 5) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...User
      }
    }
  }
}

mutation UpdateUser($attributes: UserAttributes!) {
  updateUser(attributes: $attributes) {
    ...User
  }
}

mutation Logout {
  logout {
    ...User
  }
}

fragment RefreshToken on RefreshToken {
  id
  token
  insertedAt
  updatedAt
}

query Refresh($token: String!) {
  refresh(token: $token) {
    ...User
    jwt
  }
}
