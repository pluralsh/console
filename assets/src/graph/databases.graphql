# fragment PostgresDatabaseMeta on Metadata {
#   name
#   namespace
#   labels {
#     name
#     value
#   }
#   annotations {
#     name
#     value
#   }
# }

# fragment PostgresSettings on PostgresSettings {
#   version
# }

fragment ResourceSpec on ResourceSpec {
  cpu
  memory
}

fragment Resources on Resources {
  limits {
    ...ResourceSpec
  }
  requests {
    ...ResourceSpec
  }
}

# fragment PostgresqlSpec on PostgresqlSpec {
#   databases
#   numberOfInstances
#   pods {
#     ...Pod
#   }
#   postgresql {
#     ...PostgresSettings
#   }
#   resources {
#     ...Resources
#   }
#   teamId
#   users
# }

fragment PostgresqlStatus on PostgresqlStatus {
  clusterStatus
}

fragment DatabaseTableRow on Postgresql {
  instances {
    uid
  }
  metadata {
    name
    namespace
    creationTimestamp
  }
  spec {
    numberOfInstances
    databases
    postgresql {
      version
    }
    resources {
      ...Resources
    }
    databases
    volume {
      size
    }
  }
  status {
    clusterStatus
  }
}

mutation RestorePostgres(
  $clone: CloneAttributes
  $name: String!
  $namespace: String!
  $timestamp: DateTime!
) {
  restorePostgres(
    clone: $clone
    name: $name
    namespace: $namespace
    timestamp: $timestamp
  ) {
    status {
      ...PostgresqlStatus
    }
    # ...PostgresDB
  }
}

fragment NamespaceMeta on Namespace {
  metadata {
    ...MetadataFragment
  }
}

fragment DatabaseTableApp on Application {
  name
  spec {
    descriptor {
      icons
    }
  }
}

query PostgresDatabases {
  postgresDatabases {
    ...DatabaseTableRow
  }
  applications {
    ...DatabaseTableApp
  }
}

query PostgresDatabase($name: String!, $namespace: String!) {
  postgresDatabase(name: $name, namespace: $namespace) {
    ...DatabaseTableRow
  }
}
