fragment ManagedNamespace on ManagedNamespace {
  id
  name
  insertedAt
  updatedAt
  deletedAt
  description
  labels
  annotations
  pullSecrets
  cascade {
    delete
    detach
  }
  target {
    distro
    tags
  }
  project {
    ...ProjectTiny
  }
  service {
    ...ServiceTemplateWithoutConfiguration
  }
}

fragment ServiceTemplate on ServiceTemplate {
  configuration {
    name
    value
  }
  contexts
  git {
    folder
    ref
  }
  helm {
    chart
    repository {
      name
      namespace
    }
    set {
      name
      value
    }
    valuesFiles
    version
  }
  kustomize {
    path
  }
  name
  namespace
  repository {
    ...GitRepository
  }
  repositoryId
  syncConfig {
    createNamespace
    namespaceMetadata {
      annotations
      labels
    }
  }
  templated
}

query ManagedNamespaces($first: Int, $after: String, $projectId: ID) {
  managedNamespaces(first: $first, after: $after, projectId: $projectId) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...ManagedNamespace
      }
    }
  }
}

query GetManagedNamespaceName($namespaceId: ID!) {
  managedNamespace(id: $namespaceId) {
    name
  }
}

query GetManagedNamespace($namespaceId: ID!) {
  managedNamespace(id: $namespaceId) {
    ...ManagedNamespace
  }
}

query GetManagedNamespaceServices($namespaceId: ID!, $first: Int, $after: String) {
  managedNamespace(id: $namespaceId) {
    services(first: $first, after: $after) {
      pageInfo {
        ...PageInfo
      }
      edges {
        node {
          ...ServiceDeploymentsRow
        }
      }
    }
  }
}

