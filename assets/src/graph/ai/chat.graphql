fragment AiPin on AiPin {
  id
  name
  insight {
    id
    ...AiInsight
  }
  thread {
    ...ChatThreadTiny
  }
  insertedAt
  updatedAt
}

fragment Chat on Chat {
  id
  content
  role
  seq
  type
  confirm
  confirmedAt
  attributes {
    file {
      name
    }
    tool {
      name
      arguments
    }
    prCall {
      context
      branch
    }
  }
  pullRequest {
    ...PullRequest
  }
  prAutomation {
    ...PrAutomation
  }
  server {
    id
    name
  }
  insertedAt
  updatedAt
}

fragment ChatThreadTiny on ChatThread {
  id
  default
  summary
  insertedAt
  updatedAt
  lastMessageAt
  settings {
    ...ChatThreadSettings
  }
  insight {
    ...AiInsightSummary
  }
  flow {
    id
    name
    icon
  }
  session {
    ...AgentSession
  }
}

fragment ChatThreadDetails on ChatThread {
  ...ChatThreadTiny
  insight {
    ...AiInsight
  }
  tools {
    ...McpServerTool
  }
}

fragment ChatThreadMessages on ChatThread {
  id
  chats(
    first: $first
    last: $last
    after: $after
    before: $before
    reverse: $reverse
  ) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...Chat
      }
    }
  }
}

fragment ChatThreadSettings on ChatThreadSettings {
  memory
}

fragment CloudConnectionTiny on CloudConnection {
  id
  name
  provider
}

fragment AgentSession on AgentSession {
  id
  type
  done
  planConfirmed
  thread {
    id
    summary
    insertedAt
    lastMessageAt
  }
  connection {
    id
    name
    provider
  }
  cluster {
    id
  }
  pullRequest {
    id
  }
}

fragment ServiceDeploymentChat on ServiceDeployment {
  ...ServiceDeploymentTiny
  protect
  insight {
    ...AiInsightSummary
  }
}

fragment StackChat on InfrastructureStack {
  ...StackTiny
  insight {
    ...AiInsightSummary
  }
}

fragment AiDelta on AiDelta {
  seq
  message
  role
  content
  tool {
    id
    name
  }
}

query AIPins($first: Int = 100, $last: Int, $after: String, $before: String) {
  aiPins(first: $first, last: $last, after: $after, before: $before) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...AiPin
      }
    }
  }
}

query AIPin($insightId: ID, $threadId: ID) {
  aiPin(insightId: $insightId, threadId: $threadId) {
    ...AiPin
  }
}

query ChatThreads(
  $first: Int = 100
  $last: Int
  $after: String
  $before: String
  $q: String
) {
  chatThreads(
    first: $first
    last: $last
    after: $after
    before: $before
    q: $q
  ) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...ChatThreadTiny
      }
    }
  }
}

query ChatAgentSession($id: ID!) {
  chatThread(id: $id) {
    id
    session {
      id
      done
      pullRequest {
        ...PullRequest
      }
      service {
        ...ServiceDeploymentChat
      }
      stack {
        ...StackChat
      }
      pullRequests(first: 100) {
        edges {
          node {
            ...PullRequest
          }
        }
      }
      serviceDeployments(first: 100) {
        edges {
          node {
            ...ServiceDeploymentTiny
          }
        }
      }
      stacks(first: 100) {
        edges {
          node {
            ...StackTiny
          }
        }
      }
    }
  }
}

query ChatThreadDetails($id: ID!) {
  chatThread(id: $id) {
    ...ChatThreadDetails
  }
}

query ChatThreadMessages(
  $id: ID!
  $first: Int = 25
  $last: Int
  $after: String
  $before: String
  $reverse: Boolean = true
) {
  chatThread(id: $id) {
    ...ChatThreadMessages
  }
}

query AgentSessions(
  $first: Int = 100
  $last: Int
  $after: String
  $before: String
) {
  agentSessions(first: $first, last: $last, after: $after, before: $before) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...AgentSession
      }
    }
  }
}

query CloudConnections(
  $first: Int = 100
  $last: Int
  $after: String
  $before: String
  $q: String
) {
  cloudConnections(
    first: $first
    last: $last
    after: $after
    before: $before
    q: $q
  ) {
    pageInfo {
      ...PageInfo
    }
    edges {
      node {
        ...CloudConnectionTiny
      }
    }
  }
}

mutation CreateAIPin($attributes: AiPinAttributes!) {
  createPin(attributes: $attributes) {
    ...AiPin
  }
}

mutation DeleteAIPin($id: ID!) {
  deletePin(id: $id) {
    ...AiPin
  }
}

mutation HybridChat($messages: [ChatMessage], $threadId: ID) {
  hybridChat(messages: $messages, threadId: $threadId) {
    ...Chat
  }
}

mutation ConfirmChat($id: ID!) {
  confirmChat(id: $id) {
    ...Chat
  }
}

mutation ConfirmChatPlan($threadId: ID!) {
  confirmPlan(threadId: $threadId) {
    ...Chat
  }
}

mutation DeleteChat($id: ID!) {
  deleteChat(id: $id) {
    ...Chat
  }
}

mutation CreateChatThread($attributes: ChatThreadAttributes!) {
  createThread(attributes: $attributes) {
    ...ChatThreadDetails
  }
}

mutation UpdateChatThread($id: ID!, $attributes: ChatThreadAttributes!) {
  updateThread(id: $id, attributes: $attributes) {
    ...ChatThreadDetails
  }
}

mutation DeleteChatThread($id: ID!) {
  deleteThread(id: $id) {
    ...ChatThreadTiny
  }
}

mutation CloneChatThread($id: ID!, $seq: Int) {
  cloneThread(id: $id, seq: $seq) {
    ...ChatThreadDetails
  }
}

mutation AddChatContext(
  $source: ContextSource!
  $sourceId: ID
  $threadId: ID!
) {
  addChatContext(source: $source, sourceId: $sourceId, threadId: $threadId) {
    ...Chat
  }
}

mutation CreateAgentSession($attributes: AgentSessionAttributes!) {
  createAgentSession(attributes: $attributes) {
    ...ChatThreadTiny
  }
}

subscription AIChatStream(
  $threadId: ID
  $insightId: ID
  $scopeId: String
  $recommendationId: ID
) {
  aiStream(
    threadId: $threadId
    insightId: $insightId
    scopeId: $scopeId
    recommendationId: $recommendationId
  ) {
    ...AiDelta
  }
}
