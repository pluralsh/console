fragment RefreshToken on RefreshToken {
  id
  token
  insertedAt
  updatedAt
}

fragment Account on Account {
  grandfatheredUntil
  delinquentAt
  availableFeatures {
    audits
    userManagement
    databaseManagement
  }
  subscription {
    id
    plan {
      id
      name
      period
    }
  }
}

query Subscription {
  account {
    ...Account
  }
}

query MeGroups {
  me {
    id
    groups {
      ...Group
    }
  }
}

query Me {
  me {
    ...User
    boundRoles {
      ...Role
    }
    unreadNotifications
  }
  clusterInfo {
    version
    platform
    gitCommit
  }
  configuration {
    gitCommit
    isDemoProject
    isSandbox
    pluralLogin
    byok
    externalOidc
    cloud
    installed
    consoleVersion
    sentryEnabled
    manifest {
      ...Manifest
    }
    gitStatus {
      cloned
      output
    }
    features {
      ...AvailableFeatures
    }
  }
}

query LoginInfo($redirect: String) {
  loginInfo(redirect: $redirect) {
    oidcUri
    external
    oidcName
  }
}

query Invite($id: String!) {
  invite(id: $id) {
    email
  }
}

query Refresh($token: String!) {
  refresh(token: $token) {
    ...User
    jwt
  }
}
query TemporaryToken {
  temporaryToken
}

mutation signIn($email: String!, $password: String!) {
  signIn(email: $email, password: $password) {
    ...User
    jwt
    refreshToken {
      ...RefreshToken
    }
  }
}

mutation OauthCallback($code: String!, $redirect: String, $state: String) {
  oauthCallback(code: $code, redirect: $redirect, state: $state) {
    jwt
    refreshToken {
      ...RefreshToken
    }
  }
}

mutation Logout {
  logout {
    ...User
  }
}

mutation SignUp($inviteId: String!, $attributes: UserAttributes!) {
  signup(inviteId: $inviteId, attributes: $attributes) {
    ...User
    jwt
    refreshToken {
      ...RefreshToken
    }
  }
}

mutation LoginLink($key: String!) {
  loginLink(key: $key) {
    ...User
    jwt
    refreshToken {
      ...RefreshToken
    }
  }
}
