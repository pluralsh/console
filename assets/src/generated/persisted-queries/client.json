{
   "format": "apollo-persisted-query-manifest",
   "version": 1,
   "operations": {
      "sha256:2d42fdb5ee1326b3b930fde636b9322bf409a2ab13f4861d8f8b38cbbc5bb294": {
         "type": "query",
         "name": "ChatThreads",
         "body": "query ChatThreads($first: Int = 100, $last: Int, $after: String, $before: String, $q: String) {\n  chatThreads(first: $first, last: $last, after: $after, before: $before, q: $q) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ChatThreadTiny\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ChatThreadTiny on ChatThread {\n  id\n  default\n  summary\n  insertedAt\n  updatedAt\n  lastMessageAt\n  settings {\n    ...ChatThreadSettings\n    __typename\n  }\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  flow {\n    id\n    name\n    icon\n    __typename\n  }\n  session {\n    ...AgentSession\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadSettings on ChatThreadSettings {\n  memory\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AgentSession on AgentSession {\n  id\n  type\n  done\n  planConfirmed\n  thread {\n    id\n    summary\n    insertedAt\n    lastMessageAt\n    __typename\n  }\n  connection {\n    id\n    name\n    provider\n    __typename\n  }\n  cluster {\n    id\n    __typename\n  }\n  pullRequest {\n    id\n    url\n    __typename\n  }\n  stack {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:06907e9cd29103c99de7b8b7f47b9461a82b6b038bace0edfe83c575bfa3e640": {
         "type": "query",
         "name": "ChatAgentSession",
         "body": "query ChatAgentSession($id: ID!) {\n  chatThread(id: $id) {\n    id\n    session {\n      id\n      done\n      pullRequest {\n        ...PullRequest\n        __typename\n      }\n      service {\n        ...ServiceDeploymentChat\n        __typename\n      }\n      stack {\n        ...StackChat\n        __typename\n      }\n      pullRequests(first: 100) {\n        edges {\n          node {\n            ...PullRequest\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      serviceDeployments(first: 100) {\n        edges {\n          node {\n            ...ServiceDeploymentTiny\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      stacks(first: 100) {\n        edges {\n          node {\n            ...StackTiny\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ServiceDeploymentChat on ServiceDeployment {\n  ...ServiceDeploymentTiny\n  protect\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment StackChat on InfrastructureStack {\n  ...StackTiny\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment StackTiny on InfrastructureStack {\n  id\n  insertedAt\n  updatedAt\n  deletedAt\n  name\n  type\n  repository {\n    url\n    pulledAt\n    __typename\n  }\n  paused\n  status\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:5861e1c0d294dab6f6e4b63a192a7aace36531ee81b53523bde22d5b2ec6b127": {
         "type": "query",
         "name": "ChatThreadDetails",
         "body": "query ChatThreadDetails($id: ID!) {\n  chatThread(id: $id) {\n    ...ChatThreadDetails\n    __typename\n  }\n}\n\nfragment ChatThreadDetails on ChatThread {\n  ...ChatThreadTiny\n  insight {\n    ...AiInsight\n    __typename\n  }\n  tools {\n    ...McpServerTool\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadTiny on ChatThread {\n  id\n  default\n  summary\n  insertedAt\n  updatedAt\n  lastMessageAt\n  settings {\n    ...ChatThreadSettings\n    __typename\n  }\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  flow {\n    id\n    name\n    icon\n    __typename\n  }\n  session {\n    ...AgentSession\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadSettings on ChatThreadSettings {\n  memory\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AgentSession on AgentSession {\n  id\n  type\n  done\n  planConfirmed\n  thread {\n    id\n    summary\n    insertedAt\n    lastMessageAt\n    __typename\n  }\n  connection {\n    id\n    name\n    provider\n    __typename\n  }\n  cluster {\n    id\n    __typename\n  }\n  pullRequest {\n    id\n    url\n    __typename\n  }\n  stack {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment McpServerTool on McpServerTool {\n  tool {\n    ...McpTool\n    __typename\n  }\n  server {\n    ...McpServer\n    __typename\n  }\n  __typename\n}\n\nfragment McpTool on McpTool {\n  name\n  description\n  inputSchema\n  __typename\n}\n\nfragment McpServer on McpServer {\n  id\n  name\n  url\n  confirm\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  authentication {\n    headers {\n      name\n      value\n      __typename\n    }\n    plural\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:606d29128cc935bfc8ebc1e755bab0c406b388905812b5f414005398e3f8cbac": {
         "type": "query",
         "name": "ChatThreadMessages",
         "body": "query ChatThreadMessages($id: ID!, $first: Int = 25, $last: Int, $after: String, $before: String, $reverse: Boolean = true) {\n  chatThread(id: $id) {\n    ...ChatThreadMessages\n    __typename\n  }\n}\n\nfragment ChatThreadMessages on ChatThread {\n  id\n  chats(\n    first: $first\n    last: $last\n    after: $after\n    before: $before\n    reverse: $reverse\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Chat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Chat on Chat {\n  id\n  content\n  role\n  seq\n  type\n  confirm\n  confirmedAt\n  attributes {\n    file {\n      name\n      __typename\n    }\n    tool {\n      name\n      arguments\n      __typename\n    }\n    prCall {\n      context\n      branch\n      __typename\n    }\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  prAutomation {\n    ...PrAutomation\n    __typename\n  }\n  server {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:6beb4796fc712755b9fb328a4d020e1f44e8d02ec27e1c287643f9166dd47aa5": {
         "type": "query",
         "name": "AgentSessions",
         "body": "query AgentSessions($first: Int = 100, $last: Int, $after: String, $before: String) {\n  agentSessions(first: $first, last: $last, after: $after, before: $before) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...AgentSession\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment AgentSession on AgentSession {\n  id\n  type\n  done\n  planConfirmed\n  thread {\n    id\n    summary\n    insertedAt\n    lastMessageAt\n    __typename\n  }\n  connection {\n    id\n    name\n    provider\n    __typename\n  }\n  cluster {\n    id\n    __typename\n  }\n  pullRequest {\n    id\n    url\n    __typename\n  }\n  stack {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a15e828835fdd9110a6fe56e7e23122229b935d00c9c341e2b97ec495eeab869": {
         "type": "query",
         "name": "CloudConnections",
         "body": "query CloudConnections($first: Int = 100, $last: Int, $after: String, $before: String, $q: String) {\n  cloudConnections(\n    first: $first\n    last: $last\n    after: $after\n    before: $before\n    q: $q\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...CloudConnectionTiny\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment CloudConnectionTiny on CloudConnection {\n  id\n  name\n  provider\n  __typename\n}"
      },
      "sha256:a76f82523b184201c86b69ce6b8402207b48d4c0aea25feb909f46f39a48cff6": {
         "type": "mutation",
         "name": "HybridChat",
         "body": "mutation HybridChat($messages: [ChatMessage], $threadId: ID) {\n  hybridChat(messages: $messages, threadId: $threadId) {\n    ...Chat\n    __typename\n  }\n}\n\nfragment Chat on Chat {\n  id\n  content\n  role\n  seq\n  type\n  confirm\n  confirmedAt\n  attributes {\n    file {\n      name\n      __typename\n    }\n    tool {\n      name\n      arguments\n      __typename\n    }\n    prCall {\n      context\n      branch\n      __typename\n    }\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  prAutomation {\n    ...PrAutomation\n    __typename\n  }\n  server {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:3a3dbd34e21a0ed249da076c50f243e2a8716fdff93c146891836bfab2d20c7e": {
         "type": "mutation",
         "name": "ConfirmChat",
         "body": "mutation ConfirmChat($id: ID!) {\n  confirmChat(id: $id) {\n    ...Chat\n    __typename\n  }\n}\n\nfragment Chat on Chat {\n  id\n  content\n  role\n  seq\n  type\n  confirm\n  confirmedAt\n  attributes {\n    file {\n      name\n      __typename\n    }\n    tool {\n      name\n      arguments\n      __typename\n    }\n    prCall {\n      context\n      branch\n      __typename\n    }\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  prAutomation {\n    ...PrAutomation\n    __typename\n  }\n  server {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:bd245c8e6a4a4e77df241a2ae5b3e022cabba411c519ddf2bda978a51188b9b5": {
         "type": "mutation",
         "name": "ConfirmChatPlan",
         "body": "mutation ConfirmChatPlan($threadId: ID!) {\n  confirmPlan(threadId: $threadId) {\n    ...Chat\n    __typename\n  }\n}\n\nfragment Chat on Chat {\n  id\n  content\n  role\n  seq\n  type\n  confirm\n  confirmedAt\n  attributes {\n    file {\n      name\n      __typename\n    }\n    tool {\n      name\n      arguments\n      __typename\n    }\n    prCall {\n      context\n      branch\n      __typename\n    }\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  prAutomation {\n    ...PrAutomation\n    __typename\n  }\n  server {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:95c7a2cae975dc0a0f0e420f56d543c30c016ddb2052391945e82a481af8d4d5": {
         "type": "mutation",
         "name": "DeleteChat",
         "body": "mutation DeleteChat($id: ID!) {\n  deleteChat(id: $id) {\n    ...Chat\n    __typename\n  }\n}\n\nfragment Chat on Chat {\n  id\n  content\n  role\n  seq\n  type\n  confirm\n  confirmedAt\n  attributes {\n    file {\n      name\n      __typename\n    }\n    tool {\n      name\n      arguments\n      __typename\n    }\n    prCall {\n      context\n      branch\n      __typename\n    }\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  prAutomation {\n    ...PrAutomation\n    __typename\n  }\n  server {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:eeb00e1408495b190ce6ab412367d01010a152fc7f3571614aae3095fef380e1": {
         "type": "mutation",
         "name": "CreateChatThread",
         "body": "mutation CreateChatThread($attributes: ChatThreadAttributes!) {\n  createThread(attributes: $attributes) {\n    ...ChatThreadDetails\n    __typename\n  }\n}\n\nfragment ChatThreadDetails on ChatThread {\n  ...ChatThreadTiny\n  insight {\n    ...AiInsight\n    __typename\n  }\n  tools {\n    ...McpServerTool\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadTiny on ChatThread {\n  id\n  default\n  summary\n  insertedAt\n  updatedAt\n  lastMessageAt\n  settings {\n    ...ChatThreadSettings\n    __typename\n  }\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  flow {\n    id\n    name\n    icon\n    __typename\n  }\n  session {\n    ...AgentSession\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadSettings on ChatThreadSettings {\n  memory\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AgentSession on AgentSession {\n  id\n  type\n  done\n  planConfirmed\n  thread {\n    id\n    summary\n    insertedAt\n    lastMessageAt\n    __typename\n  }\n  connection {\n    id\n    name\n    provider\n    __typename\n  }\n  cluster {\n    id\n    __typename\n  }\n  pullRequest {\n    id\n    url\n    __typename\n  }\n  stack {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment McpServerTool on McpServerTool {\n  tool {\n    ...McpTool\n    __typename\n  }\n  server {\n    ...McpServer\n    __typename\n  }\n  __typename\n}\n\nfragment McpTool on McpTool {\n  name\n  description\n  inputSchema\n  __typename\n}\n\nfragment McpServer on McpServer {\n  id\n  name\n  url\n  confirm\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  authentication {\n    headers {\n      name\n      value\n      __typename\n    }\n    plural\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:0e6a1540429edb4938b472dbbb0e5c6e708fd4e35555da4e45033650746747a7": {
         "type": "mutation",
         "name": "UpdateChatThread",
         "body": "mutation UpdateChatThread($id: ID!, $attributes: ChatThreadAttributes!) {\n  updateThread(id: $id, attributes: $attributes) {\n    ...ChatThreadDetails\n    __typename\n  }\n}\n\nfragment ChatThreadDetails on ChatThread {\n  ...ChatThreadTiny\n  insight {\n    ...AiInsight\n    __typename\n  }\n  tools {\n    ...McpServerTool\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadTiny on ChatThread {\n  id\n  default\n  summary\n  insertedAt\n  updatedAt\n  lastMessageAt\n  settings {\n    ...ChatThreadSettings\n    __typename\n  }\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  flow {\n    id\n    name\n    icon\n    __typename\n  }\n  session {\n    ...AgentSession\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadSettings on ChatThreadSettings {\n  memory\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AgentSession on AgentSession {\n  id\n  type\n  done\n  planConfirmed\n  thread {\n    id\n    summary\n    insertedAt\n    lastMessageAt\n    __typename\n  }\n  connection {\n    id\n    name\n    provider\n    __typename\n  }\n  cluster {\n    id\n    __typename\n  }\n  pullRequest {\n    id\n    url\n    __typename\n  }\n  stack {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment McpServerTool on McpServerTool {\n  tool {\n    ...McpTool\n    __typename\n  }\n  server {\n    ...McpServer\n    __typename\n  }\n  __typename\n}\n\nfragment McpTool on McpTool {\n  name\n  description\n  inputSchema\n  __typename\n}\n\nfragment McpServer on McpServer {\n  id\n  name\n  url\n  confirm\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  authentication {\n    headers {\n      name\n      value\n      __typename\n    }\n    plural\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:28d31999d988cee3e34b9dc1712af877c9f52470cea376c9df839c76628f9c17": {
         "type": "mutation",
         "name": "DeleteChatThread",
         "body": "mutation DeleteChatThread($id: ID!) {\n  deleteThread(id: $id) {\n    ...ChatThreadTiny\n    __typename\n  }\n}\n\nfragment ChatThreadTiny on ChatThread {\n  id\n  default\n  summary\n  insertedAt\n  updatedAt\n  lastMessageAt\n  settings {\n    ...ChatThreadSettings\n    __typename\n  }\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  flow {\n    id\n    name\n    icon\n    __typename\n  }\n  session {\n    ...AgentSession\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadSettings on ChatThreadSettings {\n  memory\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AgentSession on AgentSession {\n  id\n  type\n  done\n  planConfirmed\n  thread {\n    id\n    summary\n    insertedAt\n    lastMessageAt\n    __typename\n  }\n  connection {\n    id\n    name\n    provider\n    __typename\n  }\n  cluster {\n    id\n    __typename\n  }\n  pullRequest {\n    id\n    url\n    __typename\n  }\n  stack {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:71670ef909212f72ad8239caed6c5a29ea2cce81d625aa1165618f90feca0cbe": {
         "type": "mutation",
         "name": "CloneChatThread",
         "body": "mutation CloneChatThread($id: ID!, $seq: Int) {\n  cloneThread(id: $id, seq: $seq) {\n    ...ChatThreadDetails\n    __typename\n  }\n}\n\nfragment ChatThreadDetails on ChatThread {\n  ...ChatThreadTiny\n  insight {\n    ...AiInsight\n    __typename\n  }\n  tools {\n    ...McpServerTool\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadTiny on ChatThread {\n  id\n  default\n  summary\n  insertedAt\n  updatedAt\n  lastMessageAt\n  settings {\n    ...ChatThreadSettings\n    __typename\n  }\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  flow {\n    id\n    name\n    icon\n    __typename\n  }\n  session {\n    ...AgentSession\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadSettings on ChatThreadSettings {\n  memory\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AgentSession on AgentSession {\n  id\n  type\n  done\n  planConfirmed\n  thread {\n    id\n    summary\n    insertedAt\n    lastMessageAt\n    __typename\n  }\n  connection {\n    id\n    name\n    provider\n    __typename\n  }\n  cluster {\n    id\n    __typename\n  }\n  pullRequest {\n    id\n    url\n    __typename\n  }\n  stack {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment McpServerTool on McpServerTool {\n  tool {\n    ...McpTool\n    __typename\n  }\n  server {\n    ...McpServer\n    __typename\n  }\n  __typename\n}\n\nfragment McpTool on McpTool {\n  name\n  description\n  inputSchema\n  __typename\n}\n\nfragment McpServer on McpServer {\n  id\n  name\n  url\n  confirm\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  authentication {\n    headers {\n      name\n      value\n      __typename\n    }\n    plural\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:c651ced3197cbd4e81d488f508078c833ae588b23e9d53257d8ba1bc2ae0a5c6": {
         "type": "mutation",
         "name": "AddChatContext",
         "body": "mutation AddChatContext($source: ContextSource!, $sourceId: ID, $threadId: ID!) {\n  addChatContext(source: $source, sourceId: $sourceId, threadId: $threadId) {\n    ...Chat\n    __typename\n  }\n}\n\nfragment Chat on Chat {\n  id\n  content\n  role\n  seq\n  type\n  confirm\n  confirmedAt\n  attributes {\n    file {\n      name\n      __typename\n    }\n    tool {\n      name\n      arguments\n      __typename\n    }\n    prCall {\n      context\n      branch\n      __typename\n    }\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  prAutomation {\n    ...PrAutomation\n    __typename\n  }\n  server {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:00747e2daaaa99e8b2da7fecd7d795593f3178302b93531c17040d22abfe3ce9": {
         "type": "mutation",
         "name": "CreateAgentSession",
         "body": "mutation CreateAgentSession($attributes: AgentSessionAttributes!) {\n  createAgentSession(attributes: $attributes) {\n    ...ChatThreadTiny\n    __typename\n  }\n}\n\nfragment ChatThreadTiny on ChatThread {\n  id\n  default\n  summary\n  insertedAt\n  updatedAt\n  lastMessageAt\n  settings {\n    ...ChatThreadSettings\n    __typename\n  }\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  flow {\n    id\n    name\n    icon\n    __typename\n  }\n  session {\n    ...AgentSession\n    __typename\n  }\n  __typename\n}\n\nfragment ChatThreadSettings on ChatThreadSettings {\n  memory\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AgentSession on AgentSession {\n  id\n  type\n  done\n  planConfirmed\n  thread {\n    id\n    summary\n    insertedAt\n    lastMessageAt\n    __typename\n  }\n  connection {\n    id\n    name\n    provider\n    __typename\n  }\n  cluster {\n    id\n    __typename\n  }\n  pullRequest {\n    id\n    url\n    __typename\n  }\n  stack {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:858bef9e21d1a0eb5d9488c78ef5d0034e3ce985cf187fed77f7d0e1513cbcf8": {
         "type": "subscription",
         "name": "AIChatStream",
         "body": "subscription AIChatStream($threadId: ID, $insightId: ID, $scopeId: String, $recommendationId: ID) {\n  aiStream(\n    threadId: $threadId\n    insightId: $insightId\n    scopeId: $scopeId\n    recommendationId: $recommendationId\n  ) {\n    ...AiDelta\n    __typename\n  }\n}\n\nfragment AiDelta on AiDelta {\n  seq\n  message\n  role\n  content\n  tool {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:7b9522d4eab018582c6833b7f5d5ccc999aa479303f9fbd808324ece14432bf6": {
         "type": "query",
         "name": "AiInsight",
         "body": "query AiInsight($id: ID!) {\n  aiInsight(id: $id) {\n    ...AiInsight\n    __typename\n  }\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:ad1c31f5d52c132a98df80c30e768abdafd105bb901ab9f3f9c9d8c0f09bba4e": {
         "type": "query",
         "name": "AICompletion",
         "body": "query AICompletion($system: String!, $input: String, $chat: [ChatMessage], $scopeId: String) {\n  aiCompletion(system: $system, input: $input, chat: $chat, scopeId: $scopeId)\n}"
      },
      "sha256:873a2214d532929c3c35f00ddd459db7b74127efd96f0cb52a0b20ef5cb9d021": {
         "type": "query",
         "name": "AISuggestedFix",
         "body": "query AISuggestedFix($insightID: ID!) {\n  aiSuggestedFix(insightId: $insightID)\n}"
      },
      "sha256:3fb3541041e46c9604f3aaa8d5cdfa0c9268d2892f4a7c129836e4b17ec1899c": {
         "type": "query",
         "name": "ClusterInsightComponent",
         "body": "query ClusterInsightComponent($id: ID!) {\n  clusterInsightComponent(id: $id) {\n    ...ClusterInsightComponentDetail\n    __typename\n  }\n}\n\nfragment ClusterInsightComponentDetail on ClusterInsightComponent {\n  ...ClusterInsightComponent\n  resource {\n    raw\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterInsightComponent on ClusterInsightComponent {\n  id\n  kind\n  name\n  namespace\n  group\n  version\n  priority\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:d24637f3024d8a0a2bf11a4e13ce7171a7de487235da71831d84dc67fbd24083": {
         "type": "mutation",
         "name": "AiFixPr",
         "body": "mutation AiFixPr($insightId: ID!, $messages: [ChatMessage]) {\n  aiFixPr(insightId: $insightId, messages: $messages) {\n    ...PullRequest\n    __typename\n  }\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:e52eb1a7a242c21d42a2005db9a4bd1b410def2195ccd811788a8a98854b1ec8": {
         "type": "mutation",
         "name": "RefreshInsight",
         "body": "mutation RefreshInsight($id: ID!) {\n  refreshInsight(insightId: $id) {\n    ...AiInsight\n    __typename\n  }\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:2348762289442ebc57c1c6fe8d33089da8e9f2c021b87362a9649d47a4e99f76": {
         "type": "query",
         "name": "McpServers",
         "body": "query McpServers($first: Int = 100, $after: String, $q: String) {\n  mcpServers(first: $first, after: $after, q: $q) {\n    ...McpServerConnection\n    __typename\n  }\n}\n\nfragment McpServerConnection on McpServerConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...McpServer\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment McpServer on McpServer {\n  id\n  name\n  url\n  confirm\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  authentication {\n    headers {\n      name\n      value\n      __typename\n    }\n    plural\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:786af6b830cf2877eda33826b4cfac6c96031056b0c8ff5793bae2e39d4ee282": {
         "type": "query",
         "name": "McpServer",
         "body": "query McpServer($id: ID!) {\n  mcpServer(id: $id) {\n    ...McpServer\n    __typename\n  }\n}\n\nfragment McpServer on McpServer {\n  id\n  name\n  url\n  confirm\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  authentication {\n    headers {\n      name\n      value\n      __typename\n    }\n    plural\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:211c1135e7552453825306d53790ba5096fdd6601997ed98ffd570bef15f4112": {
         "type": "query",
         "name": "McpServerAudits",
         "body": "query McpServerAudits($id: ID!, $first: Int = 100, $after: String) {\n  mcpServer(id: $id) {\n    id\n    audits(first: $first, after: $after) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...McpServerAudit\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment McpServerAudit on McpServerAudit {\n  id\n  actor {\n    ...User\n    __typename\n  }\n  arguments\n  tool\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:9a6fe56eb9c64c47cdac132ab3031bbdb10d7a6b37bbe19e7ed3fddb78dcab9e": {
         "type": "query",
         "name": "GenerateMcpToken",
         "body": "query GenerateMcpToken {\n  mcpToken\n}"
      },
      "sha256:63ec8cf0d16906c99896b62f4b486416cb9e8b43c81711639024291306783e40": {
         "type": "mutation",
         "name": "UpsertMcpServer",
         "body": "mutation UpsertMcpServer($attributes: McpServerAttributes!) {\n  upsertMcpServer(attributes: $attributes) {\n    ...McpServer\n    __typename\n  }\n}\n\nfragment McpServer on McpServer {\n  id\n  name\n  url\n  confirm\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  authentication {\n    headers {\n      name\n      value\n      __typename\n    }\n    plural\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:e6c935ba44719b26082625fe66b294546d5da33c4a3f76d8d65724ca0931b3d3": {
         "type": "mutation",
         "name": "DeleteMcpServer",
         "body": "mutation DeleteMcpServer($id: ID!) {\n  deleteMcpServer(id: $id) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:fe78ec8b7d6c87b282f3f4d2e434146672cf9cf0af594e032b9f0da84866c66d": {
         "type": "query",
         "name": "Sentinels",
         "body": "query Sentinels($first: Int = 100, $after: String, $q: String, $status: SentinelRunStatus) {\n  sentinels(first: $first, after: $after, q: $q, status: $status) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Sentinel\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Sentinel on Sentinel {\n  id\n  name\n  description\n  status\n  lastRunAt\n  git {\n    ref\n    folder\n    __typename\n  }\n  repository {\n    id\n    url\n    httpsPath\n    __typename\n  }\n  checks {\n    ...SentinelCheck\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment SentinelCheck on SentinelCheck {\n  name\n  type\n  ruleFile\n  configuration {\n    ...SentinelCheckConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment SentinelCheckConfiguration on SentinelCheckConfiguration {\n  log {\n    namespaces\n    query\n    clusterId\n    facets {\n      ...LogFacet\n      __typename\n    }\n    __typename\n  }\n  kubernetes {\n    group\n    version\n    kind\n    name\n    namespace\n    __typename\n  }\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}"
      },
      "sha256:f81766d4a19f8566c56ce008275d8a7f86a1a82146b43ade7a0aaf2de13d8a12": {
         "type": "query",
         "name": "Sentinel",
         "body": "query Sentinel($id: ID, $name: String) {\n  sentinel(id: $id, name: $name) {\n    ...Sentinel\n    __typename\n  }\n}\n\nfragment Sentinel on Sentinel {\n  id\n  name\n  description\n  status\n  lastRunAt\n  git {\n    ref\n    folder\n    __typename\n  }\n  repository {\n    id\n    url\n    httpsPath\n    __typename\n  }\n  checks {\n    ...SentinelCheck\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment SentinelCheck on SentinelCheck {\n  name\n  type\n  ruleFile\n  configuration {\n    ...SentinelCheckConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment SentinelCheckConfiguration on SentinelCheckConfiguration {\n  log {\n    namespaces\n    query\n    clusterId\n    facets {\n      ...LogFacet\n      __typename\n    }\n    __typename\n  }\n  kubernetes {\n    group\n    version\n    kind\n    name\n    namespace\n    __typename\n  }\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}"
      },
      "sha256:c96b249abd17ba1b09f322bb1ae7a2866aa9148ed75308195181ad64f7322e80": {
         "type": "query",
         "name": "SentinelRuns",
         "body": "query SentinelRuns($id: ID, $name: String, $first: Int = 100, $after: String) {\n  sentinel(id: $id, name: $name) {\n    id\n    runs(first: $first, after: $after) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...SentinelRunTiny\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment SentinelRunTiny on SentinelRun {\n  id\n  status\n  insertedAt\n  __typename\n}"
      },
      "sha256:35b6ad4ed8059b12c7f72b74054759b4a5d6a7e9ccfc0fa0c03f68c1f004c6e2": {
         "type": "query",
         "name": "SentinelRun",
         "body": "query SentinelRun($id: ID!) {\n  sentinelRun(id: $id) {\n    ...SentinelRun\n    __typename\n  }\n}\n\nfragment SentinelRun on SentinelRun {\n  ...SentinelRunTiny\n  results {\n    ...SentinelRunResult\n    __typename\n  }\n  sentinel {\n    id\n    name\n    description\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment SentinelRunTiny on SentinelRun {\n  id\n  status\n  insertedAt\n  __typename\n}\n\nfragment SentinelRunResult on SentinelRunResult {\n  name\n  reason\n  status\n  successfulCount\n  failedCount\n  jobCount\n  __typename\n}"
      },
      "sha256:03258985dd02458157841e15424f44ea872745cbad0214c5b4f4f9d16b49c0fa": {
         "type": "query",
         "name": "SentinelStatistics",
         "body": "query SentinelStatistics($q: String) {\n  sentinelStatistics(q: $q) {\n    ...SentinelStatistic\n    __typename\n  }\n}\n\nfragment SentinelStatistic on SentinelStatistic {\n  status\n  count\n  __typename\n}"
      },
      "sha256:4178c12c8cf40a8ab7f30c7af08b57b28b0501a691c6171785ba52e4c0a32893": {
         "type": "mutation",
         "name": "RunSentinel",
         "body": "mutation RunSentinel($id: ID!) {\n  runSentinel(id: $id) {\n    ...SentinelRunTiny\n    __typename\n  }\n}\n\nfragment SentinelRunTiny on SentinelRun {\n  id\n  status\n  insertedAt\n  __typename\n}"
      },
      "sha256:e949305075ff2d8b05cc17e8c6f5398585d56545e5f661e31c30071564669970": {
         "type": "query",
         "name": "ClusterAlerts",
         "body": "query ClusterAlerts($clusterId: ID!, $after: String, $first: Int, $before: String, $last: Int) {\n  cluster(id: $clusterId) {\n    id\n    alerts(after: $after, first: $first, before: $before, last: $last) {\n      ...AlertConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment AlertConnection on AlertConnection {\n  edges {\n    node {\n      ...Alert\n      __typename\n    }\n    __typename\n  }\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  __typename\n}\n\nfragment Alert on Alert {\n  id\n  title\n  message\n  type\n  severity\n  state\n  fingerprint\n  url\n  annotations\n  tags {\n    id\n    name\n    value\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  resolution {\n    ...AlertResolution\n    __typename\n  }\n  updatedAt\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AlertResolution on AlertResolution {\n  resolution\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:14d0270560c5526a51cd046fb3d94a23260e007b0478737cf08e0309c2f8195c": {
         "type": "query",
         "name": "ServiceAlerts",
         "body": "query ServiceAlerts($serviceId: ID!, $after: String, $first: Int, $before: String, $last: Int) {\n  serviceDeployment(id: $serviceId) {\n    id\n    alerts(after: $after, first: $first, before: $before, last: $last) {\n      ...AlertConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment AlertConnection on AlertConnection {\n  edges {\n    node {\n      ...Alert\n      __typename\n    }\n    __typename\n  }\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  __typename\n}\n\nfragment Alert on Alert {\n  id\n  title\n  message\n  type\n  severity\n  state\n  fingerprint\n  url\n  annotations\n  tags {\n    id\n    name\n    value\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  resolution {\n    ...AlertResolution\n    __typename\n  }\n  updatedAt\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AlertResolution on AlertResolution {\n  resolution\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:149e8113beff3c0499b03f4dd755fa02bcfe18f16d5ac930d20a281144c15166": {
         "type": "mutation",
         "name": "UpsertAlertResolution",
         "body": "mutation UpsertAlertResolution($id: ID!, $attributes: AlertResolutionAttributes!) {\n  createAlertResolution(id: $id, attributes: $attributes) {\n    ...AlertResolution\n    __typename\n  }\n}\n\nfragment AlertResolution on AlertResolution {\n  resolution\n  __typename\n}"
      },
      "sha256:3f31c69681f5c7091685ab570f1ac999e3e75173ab7b2fde5ddba2c9574aa0e3": {
         "type": "query",
         "name": "Audits",
         "body": "query Audits($repo: String, $cursor: String) {\n  audits(repo: $repo, after: $cursor, first: 50) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Audit\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Audit on Audit {\n  id\n  type\n  action\n  repository\n  ip\n  city\n  country\n  latitude\n  longitude\n  actor {\n    ...User\n    __typename\n  }\n  insertedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:239037fa97da88644981988c01d085bf054d18c2059ed08194ca6110d05501e8": {
         "type": "query",
         "name": "AuditMetrics",
         "body": "query AuditMetrics {\n  auditMetrics {\n    country\n    count\n    __typename\n  }\n}"
      },
      "sha256:269847ab30ba729d533bef6de470c67886a22f6d00efdb105b46af93f6cca15e": {
         "type": "query",
         "name": "PrAutomations",
         "body": "query PrAutomations($first: Int = 100, $after: String, $catalogId: ID, $role: PrRole, $q: String) {\n  prAutomations(\n    first: $first\n    after: $after\n    catalogId: $catalogId\n    role: $role\n    q: $q\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...PrAutomation\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:ad4afa87e0f00845b35990758974c50a7970f04fd05a65a578b37ae2315cf8de": {
         "type": "mutation",
         "name": "CreatePrAutomation",
         "body": "mutation CreatePrAutomation($attributes: PrAutomationAttributes!) {\n  createPrAutomation(attributes: $attributes) {\n    ...PrAutomation\n    __typename\n  }\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:d4c0a58cd53b9f1032d3d2d887f3893cbb48ddaced46ab2a175d9988d39aa755": {
         "type": "mutation",
         "name": "UpdatePrAutomation",
         "body": "mutation UpdatePrAutomation($id: ID!, $attributes: PrAutomationAttributes!) {\n  updatePrAutomation(id: $id, attributes: $attributes) {\n    ...PrAutomation\n    __typename\n  }\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:ea2071b0849d061e16dd80da02aa208b712004f4de1fd7629f730db8c2c270ed": {
         "type": "mutation",
         "name": "DeletePrAutomation",
         "body": "mutation DeletePrAutomation($id: ID!) {\n  deletePrAutomation(id: $id) {\n    ...PrAutomation\n    __typename\n  }\n}\n\nfragment PrAutomation on PrAutomation {\n  id\n  name\n  icon\n  darkIcon\n  documentation\n  addon\n  identifier\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  service {\n    id\n    name\n    __typename\n  }\n  role\n  documentation\n  connection {\n    ...ScmConnection\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  confirmation {\n    ...PrConfirmation\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}\n\nfragment PrConfirmation on PrConfirmation {\n  checklist {\n    label\n    __typename\n  }\n  text\n  __typename\n}"
      },
      "sha256:d3167cbe5e2c477ca217b82ab3b58d1a6e0f36183e1d0fcb53afbc63084603c4": {
         "type": "query",
         "name": "ScmConnections",
         "body": "query ScmConnections($first: Int = 100, $after: String) {\n  scmConnections(first: $first, after: $after) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ScmConnection\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:abac252e8734697c00329bd8eaf846dd90023c05dc8ce63d010ec674368262ee": {
         "type": "query",
         "name": "ScmConnection",
         "body": "query ScmConnection($id: ID, $name: String) {\n  scmConnection(id: $id, name: $name) {\n    ...ScmConnection\n    __typename\n  }\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a9bdabf50eb47afd2a97842654255321197eed24edec509cc98fc894430aaed8": {
         "type": "mutation",
         "name": "CreateScmConnection",
         "body": "mutation CreateScmConnection($attributes: ScmConnectionAttributes!) {\n  createScmConnection(attributes: $attributes) {\n    ...ScmConnection\n    __typename\n  }\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:497b319e7522826d2d482f36eef1a75cb4291cb255ac9f4eb87680ed808dac60": {
         "type": "mutation",
         "name": "UpdateScmConnection",
         "body": "mutation UpdateScmConnection($id: ID!, $attributes: ScmConnectionAttributes!) {\n  updateScmConnection(id: $id, attributes: $attributes) {\n    ...ScmConnection\n    __typename\n  }\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:f546b0afc2e4322e71bd04eb48b5c0ef08b79c88bf118c46b682f43a86981eaf": {
         "type": "mutation",
         "name": "DeleteScmConnection",
         "body": "mutation DeleteScmConnection($id: ID!) {\n  deleteScmConnection(id: $id) {\n    ...ScmConnection\n    __typename\n  }\n}\n\nfragment ScmConnection on ScmConnection {\n  id\n  name\n  insertedAt\n  updatedAt\n  type\n  username\n  baseUrl\n  apiUrl\n  azure {\n    username\n    organization\n    project\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:ef3e4da1494f5a9f052793bf14790bbd33cd713e13e118da196c754c3dab6aa5": {
         "type": "mutation",
         "name": "SetupRenovate",
         "body": "mutation SetupRenovate($connectionId: ID!, $repos: [String]!, $name: String, $namespace: String) {\n  setupRenovate(\n    connectionId: $connectionId\n    repos: $repos\n    name: $name\n    namespace: $namespace\n  ) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:dbc997e3ed36ae1c8725a895d0b2b8c341826952c967cccd0036f4afddfeeab5": {
         "type": "query",
         "name": "ScmWebhooks",
         "body": "query ScmWebhooks($after: String, $before: String, $first: Int, $last: Int) {\n  scmWebhooks(after: $after, before: $before, first: $first, last: $last) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ScmWebhook\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ScmWebhook on ScmWebhook {\n  id\n  name\n  owner\n  type\n  url\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:ec29e5ed139959e85e1ae1e88c5b4cdd238b188d83f4342b5d412c908258165a": {
         "type": "mutation",
         "name": "CreateScmWebhook",
         "body": "mutation CreateScmWebhook($connectionId: ID!, $owner: String!) {\n  createScmWebhook(connectionId: $connectionId, owner: $owner) {\n    ...ScmWebhook\n    __typename\n  }\n}\n\nfragment ScmWebhook on ScmWebhook {\n  id\n  name\n  owner\n  type\n  url\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:5aac225104e93fec5f4f44534116b9abf5526a4df79707ef13c2d5d900cbb2f3": {
         "type": "mutation",
         "name": "DeleteScmWebhook",
         "body": "mutation DeleteScmWebhook($id: ID!) {\n  deleteScmWebhook(id: $id) {\n    ...ScmWebhook\n    __typename\n  }\n}\n\nfragment ScmWebhook on ScmWebhook {\n  id\n  name\n  owner\n  type\n  url\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:012fb1a26f1ab357c8f2679ef722122b78bfb4803c3164742ee49089d61b5fe2": {
         "type": "mutation",
         "name": "CreateScmWebhookPointer",
         "body": "mutation CreateScmWebhookPointer($attributes: ScmWebhookAttributes!) {\n  createScmWebhookPointer(attributes: $attributes) {\n    ...ScmWebhook\n    __typename\n  }\n}\n\nfragment ScmWebhook on ScmWebhook {\n  id\n  name\n  owner\n  type\n  url\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:7b66d6c52170af417a3ca0dce8f61a7a6967f767144cacec43336cdfb7d1e4da": {
         "type": "mutation",
         "name": "RegisterGitHubApp",
         "body": "mutation RegisterGitHubApp($installationId: String!, $name: String!) {\n  registerGithubApp(installationId: $installationId, name: $name) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:988ccffca43dd7f6a0d38dc29d76ea7b85bb4b829d0df9f1ae79511ca4472221": {
         "type": "query",
         "name": "ObjectStores",
         "body": "query ObjectStores($after: String, $first: Int = 100, $before: String, $last: Int) {\n  objectStores(after: $after, first: $first, before: $before, last: $last) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ObjectStore\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ObjectStore on ObjectStore {\n  id\n  name\n  s3 {\n    bucket\n    region\n    endpoint\n    accessKeyId\n    __typename\n  }\n  azure {\n    container\n    storageAccount\n    resourceGroup\n    subscriptionId\n    clientId\n    tenantId\n    __typename\n  }\n  gcs {\n    bucket\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:5695da3368dd2d333a3645512515ecfff244f36b53bc16b462dc2c193eeb0ff9": {
         "type": "query",
         "name": "ClustersObjectStores",
         "body": "query ClustersObjectStores($after: String, $first: Int = 100, $before: String, $last: Int, $backups: Boolean) {\n  clusters(\n    after: $after\n    first: $first\n    before: $before\n    last: $last\n    backups: $backups\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ClustersObjectStores\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClustersObjectStores on Cluster {\n  ...ClusterBasic\n  objectStore {\n    ...ObjectStore\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ObjectStore on ObjectStore {\n  id\n  name\n  s3 {\n    bucket\n    region\n    endpoint\n    accessKeyId\n    __typename\n  }\n  azure {\n    container\n    storageAccount\n    resourceGroup\n    subscriptionId\n    clientId\n    tenantId\n    __typename\n  }\n  gcs {\n    bucket\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:28a55375223f174a83af68cd8bc588adafcc4b2391ef076ffa4e1d19ca87086e": {
         "type": "query",
         "name": "ClusterBackup",
         "body": "query ClusterBackup($id: ID, $clusterId: ID, $namespace: String, $name: String) {\n  clusterBackup(\n    id: $id\n    clusterId: $clusterId\n    namespace: $namespace\n    name: $name\n  ) {\n    ...ClusterBackup\n    __typename\n  }\n}\n\nfragment ClusterBackup on ClusterBackup {\n  id\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  garbageCollected\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:eb3e032053e33bce776cd3a2a24edc8f20c0642ff911e07b7ea0f7625b50c29d": {
         "type": "query",
         "name": "ClusterBackups",
         "body": "query ClusterBackups($after: String, $first: Int = 100, $before: String, $last: Int, $clusterId: ID!) {\n  clusterBackups(\n    last: $last\n    first: $first\n    before: $before\n    after: $after\n    clusterId: $clusterId\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ClusterBackup\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClusterBackup on ClusterBackup {\n  id\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  garbageCollected\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:9015a3b4140eebbc9c6f07a37fe525637fbb83fabf42e4fbf5ae5d4dd4e9efbf": {
         "type": "query",
         "name": "ClusterRestores",
         "body": "query ClusterRestores($after: String, $first: Int = 100, $before: String, $last: Int, $clusterId: ID!) {\n  clusterRestores(\n    last: $last\n    first: $first\n    before: $before\n    after: $after\n    clusterId: $clusterId\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ClusterRestore\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClusterRestore on ClusterRestore {\n  id\n  status\n  backup {\n    ...ClusterBackup\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBackup on ClusterBackup {\n  id\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  garbageCollected\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:e0fe5f1cac989c589ca7776a99c360a9db8b048046dee4c0a81bc8f0aaa8e962": {
         "type": "mutation",
         "name": "CreateObjectStore",
         "body": "mutation CreateObjectStore($attributes: ObjectStoreAttributes!) {\n  createObjectStore(attributes: $attributes) {\n    ...ObjectStore\n    __typename\n  }\n}\n\nfragment ObjectStore on ObjectStore {\n  id\n  name\n  s3 {\n    bucket\n    region\n    endpoint\n    accessKeyId\n    __typename\n  }\n  azure {\n    container\n    storageAccount\n    resourceGroup\n    subscriptionId\n    clientId\n    tenantId\n    __typename\n  }\n  gcs {\n    bucket\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:4ebf8ef2a031cdf6e315f41468d873591b69c699c288164df57116f460142132": {
         "type": "mutation",
         "name": "UpdateObjectStore",
         "body": "mutation UpdateObjectStore($id: ID!, $attributes: ObjectStoreAttributes!) {\n  updateObjectStore(id: $id, attributes: $attributes) {\n    ...ObjectStore\n    __typename\n  }\n}\n\nfragment ObjectStore on ObjectStore {\n  id\n  name\n  s3 {\n    bucket\n    region\n    endpoint\n    accessKeyId\n    __typename\n  }\n  azure {\n    container\n    storageAccount\n    resourceGroup\n    subscriptionId\n    clientId\n    tenantId\n    __typename\n  }\n  gcs {\n    bucket\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:ab1c556dd2b4b7731588872539bb4e05306b722a1c6cef9534541173a7fb1abb": {
         "type": "mutation",
         "name": "DeleteObjectStore",
         "body": "mutation DeleteObjectStore($id: ID!) {\n  deleteObjectStore(id: $id) {\n    ...ObjectStore\n    __typename\n  }\n}\n\nfragment ObjectStore on ObjectStore {\n  id\n  name\n  s3 {\n    bucket\n    region\n    endpoint\n    accessKeyId\n    __typename\n  }\n  azure {\n    container\n    storageAccount\n    resourceGroup\n    subscriptionId\n    clientId\n    tenantId\n    __typename\n  }\n  gcs {\n    bucket\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:a3e74beb8d71e34e311d4165cf60b1da98d7f309227f64472223646d0b3d8f57": {
         "type": "mutation",
         "name": "ConfigureBackups",
         "body": "mutation ConfigureBackups($clusterId: ID!, $storeId: ID!) {\n  configureBackups(clusterId: $clusterId, storeId: $storeId) {\n    ...ClusterTiny\n    __typename\n  }\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:d6a7d3018dcf084fd2e1ea8de1132fc5738c33e10f628da24cd270171e173c36": {
         "type": "mutation",
         "name": "DelinkBackups",
         "body": "mutation DelinkBackups($clusterId: ID!) {\n  delinkBackups(clusterId: $clusterId) {\n    ...ClusterTiny\n    __typename\n  }\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:67418c92f13f77e73f302c81e000ec9d000b24d82207c4a3e5cc440aa29136c5": {
         "type": "mutation",
         "name": "CreateClusterRestore",
         "body": "mutation CreateClusterRestore($backupId: ID!) {\n  createClusterRestore(backupId: $backupId) {\n    ...ClusterRestore\n    __typename\n  }\n}\n\nfragment ClusterRestore on ClusterRestore {\n  id\n  status\n  backup {\n    ...ClusterBackup\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBackup on ClusterBackup {\n  id\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  garbageCollected\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:ea3832ea745701bf6e48ee88e1901379560973d602b8cbeab6c4a57c44e45864": {
         "type": "query",
         "name": "Catalogs",
         "body": "query Catalogs($after: String, $before: String, $first: Int, $last: Int) {\n  catalogs(after: $after, before: $before, first: $first, last: $last) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Catalog\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Catalog on Catalog {\n  id\n  name\n  author\n  description\n  category\n  icon\n  darkIcon\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:79136f3673d2a44e6bc9050f0b779940cf1c86fe6b20fbcea7a2b0ba9e6934f6": {
         "type": "query",
         "name": "Catalog",
         "body": "query Catalog($id: ID, $name: String) {\n  catalog(id: $id, name: $name) {\n    ...Catalog\n    __typename\n  }\n}\n\nfragment Catalog on Catalog {\n  id\n  name\n  author\n  description\n  category\n  icon\n  darkIcon\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:179b6c0063b1265e1b74e32d5bdbdb9f8d377eaa2848ab83447b1226f0babbca": {
         "type": "mutation",
         "name": "UpsertCatalog",
         "body": "mutation UpsertCatalog($attributes: CatalogAttributes) {\n  upsertCatalog(attributes: $attributes) {\n    ...Catalog\n    __typename\n  }\n}\n\nfragment Catalog on Catalog {\n  id\n  name\n  author\n  description\n  category\n  icon\n  darkIcon\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:7a852ee824f21529e720b36b67876115de5e392a0fbfa9bcad1f5d90d0d9ee03": {
         "type": "mutation",
         "name": "DeleteCatalog",
         "body": "mutation DeleteCatalog($id: ID!) {\n  deleteCatalog(id: $id) {\n    ...Catalog\n    __typename\n  }\n}\n\nfragment Catalog on Catalog {\n  id\n  name\n  author\n  description\n  category\n  icon\n  darkIcon\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:c908adda4318138d978e538db74fc8001dad582533e9954dae366ea329d888f6": {
         "type": "query",
         "name": "Clusters",
         "body": "query Clusters($first: Int, $after: String, $q: String, $healthy: Boolean, $tagQuery: TagQuery, $projectId: ID, $upgradeable: Boolean, $compliance: VersionCompliance, $healthRange: HealthRange) {\n  clusters(\n    first: $first\n    after: $after\n    q: $q\n    healthy: $healthy\n    tagQuery: $tagQuery\n    projectId: $projectId\n    upgradeable: $upgradeable\n    compliance: $compliance\n    healthRange: $healthRange\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ClustersRow\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  clusterStatuses(q: $q, projectId: $projectId) {\n    ...ClusterStatusInfo\n    __typename\n  }\n  upgradeStatistics(q: $q, projectId: $projectId) {\n    upgradeable\n    count\n    __typename\n  }\n  tags\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClustersRow on Cluster {\n  currentVersion\n  id\n  self\n  healthy\n  healthScore\n  protect\n  name\n  handle\n  distro\n  cpuTotal\n  memoryTotal\n  cpuUtil\n  nodeCount\n  namespaceCount\n  availabilityZones\n  podCount\n  memoryUtil\n  installed\n  pingedAt\n  deletedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  kubeletVersion\n  tags {\n    name\n    value\n    __typename\n  }\n  distro\n  upgradePlan {\n    ...ClusterUpgradePlan\n    __typename\n  }\n  virtual\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  extendedSupport {\n    extended\n    extendedFrom\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterUpgradePlan on ClusterUpgradePlan {\n  compatibilities\n  deprecations\n  incompatibilities\n  kubeletSkew\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ClusterStatusInfo on ClusterStatusInfo {\n  count\n  healthy\n  __typename\n}"
      },
      "sha256:48452def3394f07460aeb3de017a0add299d759d73cf17069be4ac3edc8ffc9f": {
         "type": "query",
         "name": "ClustersTiny",
         "body": "query ClustersTiny($projectId: ID, $first: Int) {\n  clusters(first: $first, projectId: $projectId) {\n    edges {\n      node {\n        ...ClusterTiny\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:d302678f8a12e772d8c6ad9e7b8be25ddf75e87a74c10497c6735d6ed6aab353": {
         "type": "query",
         "name": "VClusters",
         "body": "query VClusters($parentId: ID!, $first: Int, $after: String, $q: String, $healthy: Boolean, $projectId: ID) {\n  clusters(\n    first: $first\n    after: $after\n    q: $q\n    healthy: $healthy\n    projectId: $projectId\n    parentId: $parentId\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ClustersRow\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  tags\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClustersRow on Cluster {\n  currentVersion\n  id\n  self\n  healthy\n  healthScore\n  protect\n  name\n  handle\n  distro\n  cpuTotal\n  memoryTotal\n  cpuUtil\n  nodeCount\n  namespaceCount\n  availabilityZones\n  podCount\n  memoryUtil\n  installed\n  pingedAt\n  deletedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  kubeletVersion\n  tags {\n    name\n    value\n    __typename\n  }\n  distro\n  upgradePlan {\n    ...ClusterUpgradePlan\n    __typename\n  }\n  virtual\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  extendedSupport {\n    extended\n    extendedFrom\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterUpgradePlan on ClusterUpgradePlan {\n  compatibilities\n  deprecations\n  incompatibilities\n  kubeletSkew\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:39136598eb9862da74a3979b9b8f305a2ae2683d507e359f41e2fc207bee8e80": {
         "type": "query",
         "name": "ClusterSelector",
         "body": "query ClusterSelector($first: Int, $after: String, $q: String, $currentClusterId: ID, $projectId: ID) {\n  clusters(first: $first, after: $after, q: $q, projectId: $projectId) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ClusterTiny\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  cluster(id: $currentClusterId) {\n    ...ClusterTiny\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:feed5ff867b92cfc7e6b993991db17657b65fda456a42830c28570e6860ba1b9": {
         "type": "query",
         "name": "Cluster",
         "body": "query Cluster($id: ID, $handle: String) {\n  cluster(id: $id, handle: $handle) {\n    ...Cluster\n    __typename\n  }\n}\n\nfragment Cluster on Cluster {\n  ...ClustersRow\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  currentVersion\n  id\n  name\n  handle\n  metadata\n  nodePools {\n    ...NodePool\n    __typename\n  }\n  pingedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    name\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  tags {\n    name\n    value\n    __typename\n  }\n  parentCluster {\n    ...ClustersRow\n    __typename\n  }\n  operationalLayout {\n    serviceMesh\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ClustersRow on Cluster {\n  currentVersion\n  id\n  self\n  healthy\n  healthScore\n  protect\n  name\n  handle\n  distro\n  cpuTotal\n  memoryTotal\n  cpuUtil\n  nodeCount\n  namespaceCount\n  availabilityZones\n  podCount\n  memoryUtil\n  installed\n  pingedAt\n  deletedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  kubeletVersion\n  tags {\n    name\n    value\n    __typename\n  }\n  distro\n  upgradePlan {\n    ...ClusterUpgradePlan\n    __typename\n  }\n  virtual\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  extendedSupport {\n    extended\n    extendedFrom\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterUpgradePlan on ClusterUpgradePlan {\n  compatibilities\n  deprecations\n  incompatibilities\n  kubeletSkew\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment NodePool on NodePool {\n  id\n  name\n  minSize\n  maxSize\n  instanceType\n  spot\n  labels\n  taints {\n    ...Taint\n    __typename\n  }\n  __typename\n}\n\nfragment Taint on Taint {\n  effect\n  key\n  value\n  __typename\n}"
      },
      "sha256:d627f0c1bcffe42e181015593cfe52d439f32b453e962c90ad67241b7742567a": {
         "type": "query",
         "name": "ClusterBasic",
         "body": "query ClusterBasic($id: ID!) {\n  cluster(id: $id) {\n    ...ClusterBasic\n    __typename\n  }\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:b4d01e30d89805c214e8858f60396f6d485dad10cc6b256455b3bec690797578": {
         "type": "query",
         "name": "ClusterInsight",
         "body": "query ClusterInsight($id: ID!) {\n  cluster(id: $id) {\n    ...ClusterInsight\n    __typename\n  }\n}\n\nfragment ClusterInsight on Cluster {\n  id\n  insight {\n    ...AiInsight\n    __typename\n  }\n  insightComponents {\n    ...ClusterInsightComponent\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ClusterInsightComponent on ClusterInsightComponent {\n  id\n  kind\n  name\n  namespace\n  group\n  version\n  priority\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:9febd582e186643926517f42f504798f4bc1e59e91427e70f4f2425ca0b212b8": {
         "type": "query",
         "name": "ClusterNodes",
         "body": "query ClusterNodes($id: ID!) {\n  cluster(id: $id) {\n    ...ClusterWithNodes\n    __typename\n  }\n}\n\nfragment ClusterWithNodes on Cluster {\n  ...ClusterBasic\n  nodes {\n    ...ClusterNode\n    __typename\n  }\n  nodeMetrics {\n    ...NodeMetric\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ClusterNode on Node {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    allocatable\n    capacity\n    conditions {\n      type\n      status\n      message\n      __typename\n    }\n    __typename\n  }\n  spec {\n    podCidr\n    providerId\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment NodeMetric on NodeMetric {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  usage {\n    cpu\n    memory\n    __typename\n  }\n  timestamp\n  window\n  __typename\n}"
      },
      "sha256:0d3b88d0022ea917f7e3e905eb183910dae39df1126a846dcec2d307cec5a792": {
         "type": "query",
         "name": "ClusterPods",
         "body": "query ClusterPods($clusterId: ID, $namespace: String, $first: Int, $after: String, $before: String, $last: Int) {\n  pods(\n    first: $first\n    after: $after\n    before: $before\n    last: $last\n    clusterId: $clusterId\n    namespace: $namespace\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Pod\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}"
      },
      "sha256:ee12c712f28fdb912d32d080d15703f1dd6abf9f50907f411445739a8c607dc6": {
         "type": "query",
         "name": "ClusterNamespaces",
         "body": "query ClusterNamespaces($clusterId: ID) {\n  namespaces(clusterId: $clusterId) {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}"
      },
      "sha256:a94a2edbe3ddbf48755437395c4336c6ab553dacfbaa3a4c790ef01da4b9ee07": {
         "type": "query",
         "name": "ClusterBindings",
         "body": "query ClusterBindings($id: ID!) {\n  cluster(id: $id) {\n    ...ClusterBindings\n    __typename\n  }\n}\n\nfragment ClusterBindings on Cluster {\n  id\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:477436bd6eed3f43c3412793877b7579260a28d4ece60ab819febb745f94667b": {
         "type": "query",
         "name": "RuntimeServices",
         "body": "query RuntimeServices($id: ID!, $kubeVersion: String!, $hasKubeVersion: Boolean!) {\n  cluster(id: $id) {\n    ...ClusterRuntimeServices\n    __typename\n  }\n}\n\nfragment ClusterRuntimeServices on Cluster {\n  id\n  name\n  currentVersion\n  version\n  runtimeServices {\n    ...RuntimeService\n    __typename\n  }\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  upgradeInsights {\n    ...UpgradeInsight\n    __typename\n  }\n  cloudAddons {\n    ...CloudAddon\n    __typename\n  }\n  __typename\n}\n\nfragment RuntimeService on RuntimeService {\n  id\n  name\n  version\n  addon {\n    icon\n    versions {\n      ...AddonVersion\n      __typename\n    }\n    __typename\n  }\n  service {\n    git {\n      ref\n      folder\n      __typename\n    }\n    repository {\n      httpsPath\n      urlFormat\n      __typename\n    }\n    helm {\n      version\n      __typename\n    }\n    __typename\n  }\n  addonVersion {\n    ...AddonVersionBlocking @include(if: $hasKubeVersion)\n    ...AddonVersion\n    __typename\n  }\n  __typename\n}\n\nfragment AddonVersion on AddonVersion {\n  version\n  kube\n  chartVersion\n  incompatibilities {\n    version\n    name\n    __typename\n  }\n  requirements {\n    version\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment AddonVersionBlocking on AddonVersion {\n  blocking(kubeVersion: $kubeVersion)\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment UpgradeInsight on UpgradeInsight {\n  id\n  name\n  description\n  details {\n    ...UpgradeInsightDetail\n    __typename\n  }\n  refreshedAt\n  transitionedAt\n  version\n  status\n  __typename\n}\n\nfragment UpgradeInsightDetail on UpgradeInsightDetail {\n  id\n  removedIn\n  replacedIn\n  replacement\n  status\n  used\n  clientInfo {\n    ...InsightClientInfo\n    __typename\n  }\n  __typename\n}\n\nfragment InsightClientInfo on InsightClientInfo {\n  userAgent\n  count\n  lastRequestAt\n  __typename\n}\n\nfragment CloudAddon on CloudAddon {\n  id\n  insertedAt\n  updatedAt\n  name\n  distro\n  info {\n    name\n    publisher\n    versions {\n      version\n      compatibilities\n      ...CloudAddonVersionInformation @include(if: $hasKubeVersion)\n      __typename\n    }\n    __typename\n  }\n  version\n  versionInfo {\n    version\n    compatibilities\n    ...CloudAddonVersionInformation @include(if: $hasKubeVersion)\n    __typename\n  }\n  __typename\n}\n\nfragment CloudAddonVersionInformation on CloudAddonVersionInformation {\n  blocking(kubeVersion: $kubeVersion)\n  __typename\n}"
      },
      "sha256:75fdcf83b7a733304face3709e8f53cf423368e646ce28a18d2ff7e9a44cfaba": {
         "type": "query",
         "name": "RuntimeService",
         "body": "query RuntimeService($id: ID!, $version: String!, $kubeVersion: String!, $hasKubeVersion: Boolean!) {\n  runtimeService(id: $id) {\n    ...RuntimeServiceDetails\n    __typename\n  }\n}\n\nfragment RuntimeServiceDetails on RuntimeService {\n  id\n  name\n  version\n  addon {\n    icon\n    versions {\n      ...AddonVersion\n      __typename\n    }\n    releaseUrl(version: $version)\n    readme\n    __typename\n  }\n  addonVersion {\n    ...AddonVersionBlocking @include(if: $hasKubeVersion)\n    ...AddonVersion\n    __typename\n  }\n  __typename\n}\n\nfragment AddonVersion on AddonVersion {\n  version\n  kube\n  chartVersion\n  incompatibilities {\n    version\n    name\n    __typename\n  }\n  requirements {\n    version\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment AddonVersionBlocking on AddonVersion {\n  blocking(kubeVersion: $kubeVersion)\n  __typename\n}"
      },
      "sha256:cf8d993469533566980e0951c4e7544e91a3520a373eec24b7ab6ac003b5757a": {
         "type": "mutation",
         "name": "UpdateClusterBindings",
         "body": "mutation UpdateClusterBindings($id: ID!, $rbac: RbacAttributes!) {\n  updateRbac(clusterId: $id, rbac: $rbac)\n}"
      },
      "sha256:e47307cb3b74354658504b437c66c16ade4534c371ba1f2fa8ab9ced25ea3a92": {
         "type": "mutation",
         "name": "UpdateCluster",
         "body": "mutation UpdateCluster($id: ID!, $attributes: ClusterUpdateAttributes!) {\n  updateCluster(id: $id, attributes: $attributes) {\n    ...Cluster\n    __typename\n  }\n}\n\nfragment Cluster on Cluster {\n  ...ClustersRow\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  currentVersion\n  id\n  name\n  handle\n  metadata\n  nodePools {\n    ...NodePool\n    __typename\n  }\n  pingedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    name\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  tags {\n    name\n    value\n    __typename\n  }\n  parentCluster {\n    ...ClustersRow\n    __typename\n  }\n  operationalLayout {\n    serviceMesh\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ClustersRow on Cluster {\n  currentVersion\n  id\n  self\n  healthy\n  healthScore\n  protect\n  name\n  handle\n  distro\n  cpuTotal\n  memoryTotal\n  cpuUtil\n  nodeCount\n  namespaceCount\n  availabilityZones\n  podCount\n  memoryUtil\n  installed\n  pingedAt\n  deletedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  kubeletVersion\n  tags {\n    name\n    value\n    __typename\n  }\n  distro\n  upgradePlan {\n    ...ClusterUpgradePlan\n    __typename\n  }\n  virtual\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  extendedSupport {\n    extended\n    extendedFrom\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterUpgradePlan on ClusterUpgradePlan {\n  compatibilities\n  deprecations\n  incompatibilities\n  kubeletSkew\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment NodePool on NodePool {\n  id\n  name\n  minSize\n  maxSize\n  instanceType\n  spot\n  labels\n  taints {\n    ...Taint\n    __typename\n  }\n  __typename\n}\n\nfragment Taint on Taint {\n  effect\n  key\n  value\n  __typename\n}"
      },
      "sha256:225f1b4f7b69cd2f17c7c46868f476f57c1f1920a857a71e6e24406ec11c51b1": {
         "type": "mutation",
         "name": "CreateCluster",
         "body": "mutation CreateCluster($attributes: ClusterAttributes!) {\n  createCluster(attributes: $attributes) {\n    ...Cluster\n    deployToken\n    __typename\n  }\n}\n\nfragment Cluster on Cluster {\n  ...ClustersRow\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  currentVersion\n  id\n  name\n  handle\n  metadata\n  nodePools {\n    ...NodePool\n    __typename\n  }\n  pingedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    name\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  tags {\n    name\n    value\n    __typename\n  }\n  parentCluster {\n    ...ClustersRow\n    __typename\n  }\n  operationalLayout {\n    serviceMesh\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ClustersRow on Cluster {\n  currentVersion\n  id\n  self\n  healthy\n  healthScore\n  protect\n  name\n  handle\n  distro\n  cpuTotal\n  memoryTotal\n  cpuUtil\n  nodeCount\n  namespaceCount\n  availabilityZones\n  podCount\n  memoryUtil\n  installed\n  pingedAt\n  deletedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  kubeletVersion\n  tags {\n    name\n    value\n    __typename\n  }\n  distro\n  upgradePlan {\n    ...ClusterUpgradePlan\n    __typename\n  }\n  virtual\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  extendedSupport {\n    extended\n    extendedFrom\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterUpgradePlan on ClusterUpgradePlan {\n  compatibilities\n  deprecations\n  incompatibilities\n  kubeletSkew\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment NodePool on NodePool {\n  id\n  name\n  minSize\n  maxSize\n  instanceType\n  spot\n  labels\n  taints {\n    ...Taint\n    __typename\n  }\n  __typename\n}\n\nfragment Taint on Taint {\n  effect\n  key\n  value\n  __typename\n}"
      },
      "sha256:0d03b8b095f160de092bf43109909c3da65b78601dccb4c1a80695937fe1be29": {
         "type": "mutation",
         "name": "DeleteCluster",
         "body": "mutation DeleteCluster($id: ID!) {\n  deleteCluster(id: $id) {\n    ...Cluster\n    __typename\n  }\n}\n\nfragment Cluster on Cluster {\n  ...ClustersRow\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  currentVersion\n  id\n  name\n  handle\n  metadata\n  nodePools {\n    ...NodePool\n    __typename\n  }\n  pingedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    name\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  tags {\n    name\n    value\n    __typename\n  }\n  parentCluster {\n    ...ClustersRow\n    __typename\n  }\n  operationalLayout {\n    serviceMesh\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ClustersRow on Cluster {\n  currentVersion\n  id\n  self\n  healthy\n  healthScore\n  protect\n  name\n  handle\n  distro\n  cpuTotal\n  memoryTotal\n  cpuUtil\n  nodeCount\n  namespaceCount\n  availabilityZones\n  podCount\n  memoryUtil\n  installed\n  pingedAt\n  deletedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  kubeletVersion\n  tags {\n    name\n    value\n    __typename\n  }\n  distro\n  upgradePlan {\n    ...ClusterUpgradePlan\n    __typename\n  }\n  virtual\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  extendedSupport {\n    extended\n    extendedFrom\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterUpgradePlan on ClusterUpgradePlan {\n  compatibilities\n  deprecations\n  incompatibilities\n  kubeletSkew\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment NodePool on NodePool {\n  id\n  name\n  minSize\n  maxSize\n  instanceType\n  spot\n  labels\n  taints {\n    ...Taint\n    __typename\n  }\n  __typename\n}\n\nfragment Taint on Taint {\n  effect\n  key\n  value\n  __typename\n}"
      },
      "sha256:72af283e428c295323ea26c5b0a656f7df3e2a840043c42c5044fe38924e6a20": {
         "type": "mutation",
         "name": "DetachCluster",
         "body": "mutation DetachCluster($id: ID!) {\n  detachCluster(id: $id) {\n    ...Cluster\n    __typename\n  }\n}\n\nfragment Cluster on Cluster {\n  ...ClustersRow\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  currentVersion\n  id\n  name\n  handle\n  metadata\n  nodePools {\n    ...NodePool\n    __typename\n  }\n  pingedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    name\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  tags {\n    name\n    value\n    __typename\n  }\n  parentCluster {\n    ...ClustersRow\n    __typename\n  }\n  operationalLayout {\n    serviceMesh\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ClustersRow on Cluster {\n  currentVersion\n  id\n  self\n  healthy\n  healthScore\n  protect\n  name\n  handle\n  distro\n  cpuTotal\n  memoryTotal\n  cpuUtil\n  nodeCount\n  namespaceCount\n  availabilityZones\n  podCount\n  memoryUtil\n  installed\n  pingedAt\n  deletedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  kubeletVersion\n  tags {\n    name\n    value\n    __typename\n  }\n  distro\n  upgradePlan {\n    ...ClusterUpgradePlan\n    __typename\n  }\n  virtual\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  extendedSupport {\n    extended\n    extendedFrom\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterUpgradePlan on ClusterUpgradePlan {\n  compatibilities\n  deprecations\n  incompatibilities\n  kubeletSkew\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment NodePool on NodePool {\n  id\n  name\n  minSize\n  maxSize\n  instanceType\n  spot\n  labels\n  taints {\n    ...Taint\n    __typename\n  }\n  __typename\n}\n\nfragment Taint on Taint {\n  effect\n  key\n  value\n  __typename\n}"
      },
      "sha256:fddfc639f18d5ee2c57e7c4b019f66c2245992904ceb56570f4efb468e44c550": {
         "type": "query",
         "name": "ClusterStatuses",
         "body": "query ClusterStatuses {\n  clusterStatuses {\n    ...ClusterStatusInfo\n    __typename\n  }\n}\n\nfragment ClusterStatusInfo on ClusterStatusInfo {\n  count\n  healthy\n  __typename\n}"
      },
      "sha256:4a42dfd494da2d59d9cf46a3ba91962b20c989aca625bf3f94ea0262c6ecd667": {
         "type": "query",
         "name": "TagPairs",
         "body": "query TagPairs($first: Int = 30, $q: String, $tag: String, $type: TagType) {\n  tagPairs(first: $first, q: $q, tag: $tag, type: $type) {\n    edges {\n      node {\n        name\n        value\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:3c547aad7309bfe9e1192f1edb74213e96cb1d000c545abccc15bfc1c1cba4db": {
         "type": "query",
         "name": "ClusterMetrics",
         "body": "query ClusterMetrics($clusterId: ID!, $start: DateTime, $stop: DateTime, $step: String) {\n  cluster(id: $clusterId) {\n    ...ClusterWithMetrics\n    __typename\n  }\n}\n\nfragment ClusterWithMetrics on Cluster {\n  ...ClusterWithNodes\n  clusterMetrics(start: $start, stop: $stop, step: $step) {\n    cpu {\n      ...MetricResponse\n      __typename\n    }\n    cpuUsage {\n      ...MetricResponse\n      __typename\n    }\n    cpuRequests {\n      ...MetricResponse\n      __typename\n    }\n    cpuLimits {\n      ...MetricResponse\n      __typename\n    }\n    memory {\n      ...MetricResponse\n      __typename\n    }\n    memoryUsage {\n      ...MetricResponse\n      __typename\n    }\n    memoryRequests {\n      ...MetricResponse\n      __typename\n    }\n    memoryLimits {\n      ...MetricResponse\n      __typename\n    }\n    pods {\n      ...MetricResponse\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterWithNodes on Cluster {\n  ...ClusterBasic\n  nodes {\n    ...ClusterNode\n    __typename\n  }\n  nodeMetrics {\n    ...NodeMetric\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ClusterNode on Node {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    allocatable\n    capacity\n    conditions {\n      type\n      status\n      message\n      __typename\n    }\n    __typename\n  }\n  spec {\n    podCidr\n    providerId\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment NodeMetric on NodeMetric {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  usage {\n    cpu\n    memory\n    __typename\n  }\n  timestamp\n  window\n  __typename\n}\n\nfragment MetricResponse on MetricResponse {\n  metric\n  values {\n    timestamp\n    value\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:b99e1d3c328eda92d6c7a32c827c709ebf44f57d7924c6dc03a60c0685363d9d": {
         "type": "query",
         "name": "ClusterNodeMetrics",
         "body": "query ClusterNodeMetrics($clusterId: ID!, $node: String!, $start: DateTime, $stop: DateTime, $step: String) {\n  cluster(id: $clusterId) {\n    ...ClusterNodeMetrics\n    __typename\n  }\n}\n\nfragment ClusterNodeMetrics on Cluster {\n  id\n  clusterNodeMetrics(node: $node, start: $start, stop: $stop, step: $step) {\n    cpu {\n      ...MetricResponse\n      __typename\n    }\n    cpuUsage {\n      ...MetricResponse\n      __typename\n    }\n    memory {\n      ...MetricResponse\n      __typename\n    }\n    memoryUsage {\n      ...MetricResponse\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MetricResponse on MetricResponse {\n  metric\n  values {\n    timestamp\n    value\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:f13a8aeaac4ac6482fc0280f84d9ce6e0189b27878cbe7a83c8a8199d8e56fbd": {
         "type": "query",
         "name": "ClusterNetworkGraph",
         "body": "query ClusterNetworkGraph($clusterId: ID!, $time: DateTime) {\n  cluster(id: $clusterId) {\n    id\n    networkGraph(time: $time) {\n      ...NetworkMeshEdge\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment NetworkMeshEdge on NetworkMeshEdge {\n  id\n  from {\n    ...NetworkMeshWorkload\n    __typename\n  }\n  to {\n    ...NetworkMeshWorkload\n    __typename\n  }\n  statistics {\n    ...NetworkMeshStatistics\n    __typename\n  }\n  __typename\n}\n\nfragment NetworkMeshWorkload on NetworkMeshWorkload {\n  id\n  name\n  namespace\n  service\n  __typename\n}\n\nfragment NetworkMeshStatistics on NetworkMeshStatistics {\n  bytes\n  packets\n  connections\n  http200\n  http400\n  http500\n  httpClientLatency\n  __typename\n}"
      },
      "sha256:67942576f712b8192cdd8eedb1f00c9ccc8243b981eb463c2347fc1bc45f58fc": {
         "type": "query",
         "name": "ServiceDeploymentComponentMetrics",
         "body": "query ServiceDeploymentComponentMetrics($id: ID, $name: String, $cluster: String, $componentId: ID!, $start: DateTime, $stop: DateTime, $step: String) {\n  serviceDeployment(id: $id, name: $name, cluster: $cluster) {\n    ...ComponentMetricsFragment\n    __typename\n  }\n}\n\nfragment ComponentMetricsFragment on ServiceDeployment {\n  componentMetrics(\n    componentId: $componentId\n    start: $start\n    stop: $stop\n    step: $step\n  ) {\n    cpu {\n      ...MetricResponse\n      __typename\n    }\n    mem {\n      ...MetricResponse\n      __typename\n    }\n    podCpu {\n      ...MetricResponse\n      __typename\n    }\n    podMem {\n      ...MetricResponse\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MetricResponse on MetricResponse {\n  metric\n  values {\n    timestamp\n    value\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:d041ecc56d9fab9ecdb8d9f754196092d7ccbc1779e7a2059c4b41a63706a6d2": {
         "type": "query",
         "name": "Usage",
         "body": "query Usage($cpu: String!, $mem: String!, $podCpu: String!, $podMem: String!, $step: String!, $offset: Int!, $clusterId: ID) {\n  cpu: metric(clusterId: $clusterId, query: $cpu, offset: $offset, step: $step) {\n    ...MetricResponse\n    __typename\n  }\n  mem: metric(clusterId: $clusterId, query: $mem, offset: $offset, step: $step) {\n    ...MetricResponse\n    __typename\n  }\n  podCpu: metric(\n    clusterId: $clusterId\n    query: $podCpu\n    offset: $offset\n    step: $step\n  ) {\n    ...MetricResponse\n    __typename\n  }\n  podMem: metric(\n    clusterId: $clusterId\n    query: $podMem\n    offset: $offset\n    step: $step\n  ) {\n    ...MetricResponse\n    __typename\n  }\n}\n\nfragment MetricResponse on MetricResponse {\n  metric\n  values {\n    timestamp\n    value\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:1648935a257968c0342ce938990f4d23ed3bdf798f5b50cd1085f35eab3d4f2f": {
         "type": "query",
         "name": "GitRepositories",
         "body": "query GitRepositories {\n  gitRepositories(first: 100) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...GitRepository\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:a60bb492e89c2182f4655d8c41b377c8be4951c06b3035f527b56cd6c1d5653c": {
         "type": "query",
         "name": "HelmRepositories",
         "body": "query HelmRepositories {\n  helmRepositories(first: 100) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...HelmRepository\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment HelmRepository on HelmRepository {\n  id\n  url\n  health\n  provider\n  insertedAt\n  pulledAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:27b02a6d9ed09f60a564a9f325c6322df4a2cf7f3d26338a5e55576fde0976a8": {
         "type": "query",
         "name": "FluxHelmRepositories",
         "body": "query FluxHelmRepositories {\n  fluxHelmRepositories {\n    ...FluxHelmRepository\n    __typename\n  }\n}\n\nfragment FluxHelmRepository on FluxHelmRepository {\n  metadata {\n    namespace\n    name\n    __typename\n  }\n  spec {\n    url\n    type\n    provider\n    __typename\n  }\n  status {\n    ready\n    message\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:9b941fa7fe07233ae814779da4784bab2c3da0c41df78e7a53cc0dd3e39deaa4": {
         "type": "query",
         "name": "FluxHelmRepository",
         "body": "query FluxHelmRepository($namespace: String!, $name: String!) {\n  fluxHelmRepository(namespace: $namespace, name: $name) {\n    ...FluxHelmRepository\n    charts {\n      name\n      versions {\n        ...HelmChartVersion\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment FluxHelmRepository on FluxHelmRepository {\n  metadata {\n    namespace\n    name\n    __typename\n  }\n  spec {\n    url\n    type\n    provider\n    __typename\n  }\n  status {\n    ready\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment HelmChartVersion on HelmChartVersion {\n  name\n  appVersion\n  version\n  digest\n  __typename\n}"
      },
      "sha256:f78bce5d7d6635b4f26de51571a1920a9e1537f2807a0736d6edf5a1336dc688": {
         "type": "query",
         "name": "GitRepository",
         "body": "query GitRepository($id: ID!) {\n  gitRepository(id: $id) {\n    refs\n    __typename\n  }\n}"
      },
      "sha256:ffa4afaac07ed5d7d47349b91da2e31b789ad58ec8863a15fcdf0d8e7012a956": {
         "type": "mutation",
         "name": "CreateGitRepository",
         "body": "mutation CreateGitRepository($attributes: GitAttributes!) {\n  createGitRepository(attributes: $attributes) {\n    ...GitRepository\n    __typename\n  }\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:a539e4af2400f303a9ec3fed21344eece0b5b161b4de6a6b96cc0e968b840fcf": {
         "type": "mutation",
         "name": "DeleteGitRepository",
         "body": "mutation DeleteGitRepository($id: ID!) {\n  deleteGitRepository(id: $id) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:46b3c309bbd0c0e718e4833b2a2faba5bd0ca730adcda889e7a4e9ceed94a4f5": {
         "type": "mutation",
         "name": "UpdateGitRepository",
         "body": "mutation UpdateGitRepository($id: ID!, $attributes: GitAttributes!) {\n  updateGitRepository(id: $id, attributes: $attributes) {\n    ...GitRepository\n    __typename\n  }\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:f13cffe0ed7c4dc4d0ec0035b17e6d65ab07279f0817ce3cb763429197e6651f": {
         "type": "mutation",
         "name": "CreateGlobalService",
         "body": "mutation CreateGlobalService($attributes: GlobalServiceAttributes!, $cluster: String, $name: String, $serviceId: ID) {\n  createGlobalService(\n    attributes: $attributes\n    cluster: $cluster\n    name: $name\n    serviceId: $serviceId\n  ) {\n    ...GlobalService\n    __typename\n  }\n}\n\nfragment GlobalService on GlobalService {\n  id\n  distro\n  name\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  cascade {\n    delete\n    detach\n    __typename\n  }\n  provider {\n    id\n    name\n    cloud\n    namespace\n    __typename\n  }\n  reparent\n  service {\n    ...ServiceDeploymentsRow\n    __typename\n  }\n  tags {\n    name\n    value\n    __typename\n  }\n  template {\n    ...ServiceTemplateWithoutConfiguration\n    __typename\n  }\n  parent {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  mgmt\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceTemplateWithoutConfiguration on ServiceTemplate {\n  contexts\n  dependencies {\n    id\n    name\n    status\n    __typename\n  }\n  git {\n    folder\n    ref\n    __typename\n  }\n  helm {\n    chart\n    git {\n      folder\n      ref\n      __typename\n    }\n    ignoreCrds\n    ignoreHooks\n    release\n    repository {\n      name\n      namespace\n      __typename\n    }\n    set {\n      name\n      value\n      __typename\n    }\n    url\n    values\n    valuesFiles\n    version\n    __typename\n  }\n  kustomize {\n    path\n    enableHelm\n    __typename\n  }\n  name\n  namespace\n  repository {\n    ...GitRepository\n    __typename\n  }\n  repositoryId\n  syncConfig {\n    createNamespace\n    enforceNamespace\n    namespaceMetadata {\n      annotations\n      labels\n      __typename\n    }\n    __typename\n  }\n  templated\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:886a7811e063641ca943be7e24bb91834512dc648dbf1b1c2ed1f3a062ab5ad2": {
         "type": "mutation",
         "name": "UpdateGlobalService",
         "body": "mutation UpdateGlobalService($id: ID!, $attributes: GlobalServiceAttributes!) {\n  updateGlobalService(id: $id, attributes: $attributes) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:3b253ff0386cde00513ba0b1d9df4d50d8eb114d7f248867417d83b30312009f": {
         "type": "mutation",
         "name": "DeleteGlobalService",
         "body": "mutation DeleteGlobalService($id: ID!) {\n  deleteGlobalService(id: $id) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:0a514ef72d62b9b74a6233d9ef18d5c344a4955c171a7af4edc809126ec5025a": {
         "type": "query",
         "name": "GlobalServices",
         "body": "query GlobalServices($first: Int, $after: String, $projectId: ID, $q: String) {\n  globalServices(first: $first, after: $after, projectId: $projectId, q: $q) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...GlobalService\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment GlobalService on GlobalService {\n  id\n  distro\n  name\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  cascade {\n    delete\n    detach\n    __typename\n  }\n  provider {\n    id\n    name\n    cloud\n    namespace\n    __typename\n  }\n  reparent\n  service {\n    ...ServiceDeploymentsRow\n    __typename\n  }\n  tags {\n    name\n    value\n    __typename\n  }\n  template {\n    ...ServiceTemplateWithoutConfiguration\n    __typename\n  }\n  parent {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  mgmt\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceTemplateWithoutConfiguration on ServiceTemplate {\n  contexts\n  dependencies {\n    id\n    name\n    status\n    __typename\n  }\n  git {\n    folder\n    ref\n    __typename\n  }\n  helm {\n    chart\n    git {\n      folder\n      ref\n      __typename\n    }\n    ignoreCrds\n    ignoreHooks\n    release\n    repository {\n      name\n      namespace\n      __typename\n    }\n    set {\n      name\n      value\n      __typename\n    }\n    url\n    values\n    valuesFiles\n    version\n    __typename\n  }\n  kustomize {\n    path\n    enableHelm\n    __typename\n  }\n  name\n  namespace\n  repository {\n    ...GitRepository\n    __typename\n  }\n  repositoryId\n  syncConfig {\n    createNamespace\n    enforceNamespace\n    namespaceMetadata {\n      annotations\n      labels\n      __typename\n    }\n    __typename\n  }\n  templated\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:ad7ebe101cbff8992f5e473f0ae08e62573857d2797ec6f14a9bd79ab0b15dad": {
         "type": "query",
         "name": "GetGlobalService",
         "body": "query GetGlobalService($serviceId: ID!) {\n  globalService(id: $serviceId) {\n    ...GlobalService\n    __typename\n  }\n}\n\nfragment GlobalService on GlobalService {\n  id\n  distro\n  name\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  cascade {\n    delete\n    detach\n    __typename\n  }\n  provider {\n    id\n    name\n    cloud\n    namespace\n    __typename\n  }\n  reparent\n  service {\n    ...ServiceDeploymentsRow\n    __typename\n  }\n  tags {\n    name\n    value\n    __typename\n  }\n  template {\n    ...ServiceTemplateWithoutConfiguration\n    __typename\n  }\n  parent {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  mgmt\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceTemplateWithoutConfiguration on ServiceTemplate {\n  contexts\n  dependencies {\n    id\n    name\n    status\n    __typename\n  }\n  git {\n    folder\n    ref\n    __typename\n  }\n  helm {\n    chart\n    git {\n      folder\n      ref\n      __typename\n    }\n    ignoreCrds\n    ignoreHooks\n    release\n    repository {\n      name\n      namespace\n      __typename\n    }\n    set {\n      name\n      value\n      __typename\n    }\n    url\n    values\n    valuesFiles\n    version\n    __typename\n  }\n  kustomize {\n    path\n    enableHelm\n    __typename\n  }\n  name\n  namespace\n  repository {\n    ...GitRepository\n    __typename\n  }\n  repositoryId\n  syncConfig {\n    createNamespace\n    enforceNamespace\n    namespaceMetadata {\n      annotations\n      labels\n      __typename\n    }\n    __typename\n  }\n  templated\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:cdb7c5fdd7fbe9e4aa212472ae4f8d6a042eba93764a55f786210d910fb39c5d": {
         "type": "query",
         "name": "GetGlobalServiceServices",
         "body": "query GetGlobalServiceServices($serviceId: ID!, $first: Int, $after: String) {\n  globalService(id: $serviceId) {\n    services(first: $first, after: $after) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...ServiceDeploymentsRow\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}"
      },
      "sha256:cfba929bf4bfff1a44d62f611e16517df280c20aa72f8ca290cc643f91eb4d36": {
         "type": "mutation",
         "name": "SyncGlobalService",
         "body": "mutation SyncGlobalService($id: ID!) {\n  syncGlobalService(id: $id) {\n    ...GlobalService\n    __typename\n  }\n}\n\nfragment GlobalService on GlobalService {\n  id\n  distro\n  name\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  cascade {\n    delete\n    detach\n    __typename\n  }\n  provider {\n    id\n    name\n    cloud\n    namespace\n    __typename\n  }\n  reparent\n  service {\n    ...ServiceDeploymentsRow\n    __typename\n  }\n  tags {\n    name\n    value\n    __typename\n  }\n  template {\n    ...ServiceTemplateWithoutConfiguration\n    __typename\n  }\n  parent {\n    id\n    name\n    __typename\n  }\n  insertedAt\n  updatedAt\n  mgmt\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceTemplateWithoutConfiguration on ServiceTemplate {\n  contexts\n  dependencies {\n    id\n    name\n    status\n    __typename\n  }\n  git {\n    folder\n    ref\n    __typename\n  }\n  helm {\n    chart\n    git {\n      folder\n      ref\n      __typename\n    }\n    ignoreCrds\n    ignoreHooks\n    release\n    repository {\n      name\n      namespace\n      __typename\n    }\n    set {\n      name\n      value\n      __typename\n    }\n    url\n    values\n    valuesFiles\n    version\n    __typename\n  }\n  kustomize {\n    path\n    enableHelm\n    __typename\n  }\n  name\n  namespace\n  repository {\n    ...GitRepository\n    __typename\n  }\n  repositoryId\n  syncConfig {\n    createNamespace\n    enforceNamespace\n    namespaceMetadata {\n      annotations\n      labels\n      __typename\n    }\n    __typename\n  }\n  templated\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:db961260ab4cca5a6213f2408ce248086a3e5d64f609c7223f63a40f3040a372": {
         "type": "query",
         "name": "DeploymentSettings",
         "body": "query DeploymentSettings {\n  deploymentSettings {\n    ...DeploymentSettings\n    __typename\n  }\n}\n\nfragment DeploymentSettings on DeploymentSettings {\n  id\n  name\n  enabled\n  selfManaged\n  insertedAt\n  updatedAt\n  onboarded\n  agentHelmValues\n  logging {\n    enabled\n    driver\n    __typename\n  }\n  lokiConnection {\n    ...HttpConnection\n    __typename\n  }\n  prometheusConnection {\n    ...HttpConnection\n    __typename\n  }\n  artifactRepository {\n    ...GitRepository\n    __typename\n  }\n  deployerRepository {\n    ...GitRepository\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  smtp {\n    ...SmtpSettings\n    __typename\n  }\n  ai {\n    ...AiSettings\n    __typename\n  }\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  gitBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment HttpConnection on HttpConnection {\n  host\n  user\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment SmtpSettings on SmtpSettings {\n  server\n  port\n  sender\n  user\n  ssl\n  __typename\n}\n\nfragment AiSettings on AiSettings {\n  anthropic {\n    model\n    __typename\n  }\n  openai {\n    model\n    embeddingModel\n    __typename\n  }\n  azure {\n    apiVersion\n    endpoint\n    model\n    embeddingModel\n    __typename\n  }\n  ollama {\n    model\n    url\n    __typename\n  }\n  bedrock {\n    region\n    modelId\n    embeddingModel\n    __typename\n  }\n  vertex {\n    model\n    embeddingModel\n    project\n    location\n    __typename\n  }\n  enabled\n  toolsEnabled\n  provider\n  __typename\n}"
      },
      "sha256:05c1879e0a8b58728d04b81556cc619931e23e2efacd14b727d6dbfc0f824db1": {
         "type": "query",
         "name": "ObservabilityProviders",
         "body": "query ObservabilityProviders($first: Int, $after: String) {\n  observabilityProviders(first: $first, after: $after) {\n    edges {\n      node {\n        ...ObservabilityProvider\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ObservabilityProvider on ObservabilityProvider {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:d28c3035a75adedf8d0ab3c2fe8ed1a7b9a85ac615faad30355a3d6c38c74e8e": {
         "type": "query",
         "name": "ObservabilityWebhooks",
         "body": "query ObservabilityWebhooks($first: Int, $after: String) {\n  observabilityWebhooks(first: $first, after: $after) {\n    edges {\n      node {\n        ...ObservabilityWebhook\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ObservabilityWebhook on ObservabilityWebhook {\n  id\n  name\n  type\n  url\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:363952d7e5c9cfd8111a501b1225cb540b9507157cf73a99eab5973cb5458f44": {
         "type": "mutation",
         "name": "UpdateDeploymentSettings",
         "body": "mutation UpdateDeploymentSettings($attributes: DeploymentSettingsAttributes!) {\n  updateDeploymentSettings(attributes: $attributes) {\n    ...DeploymentSettings\n    __typename\n  }\n}\n\nfragment DeploymentSettings on DeploymentSettings {\n  id\n  name\n  enabled\n  selfManaged\n  insertedAt\n  updatedAt\n  onboarded\n  agentHelmValues\n  logging {\n    enabled\n    driver\n    __typename\n  }\n  lokiConnection {\n    ...HttpConnection\n    __typename\n  }\n  prometheusConnection {\n    ...HttpConnection\n    __typename\n  }\n  artifactRepository {\n    ...GitRepository\n    __typename\n  }\n  deployerRepository {\n    ...GitRepository\n    __typename\n  }\n  createBindings {\n    ...PolicyBinding\n    __typename\n  }\n  smtp {\n    ...SmtpSettings\n    __typename\n  }\n  ai {\n    ...AiSettings\n    __typename\n  }\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  gitBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment HttpConnection on HttpConnection {\n  host\n  user\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment SmtpSettings on SmtpSettings {\n  server\n  port\n  sender\n  user\n  ssl\n  __typename\n}\n\nfragment AiSettings on AiSettings {\n  anthropic {\n    model\n    __typename\n  }\n  openai {\n    model\n    embeddingModel\n    __typename\n  }\n  azure {\n    apiVersion\n    endpoint\n    model\n    embeddingModel\n    __typename\n  }\n  ollama {\n    model\n    url\n    __typename\n  }\n  bedrock {\n    region\n    modelId\n    embeddingModel\n    __typename\n  }\n  vertex {\n    model\n    embeddingModel\n    project\n    location\n    __typename\n  }\n  enabled\n  toolsEnabled\n  provider\n  __typename\n}"
      },
      "sha256:4ec33a10dc37fa1526249391223660af05140af4b55aa301f57c40644ad32b39": {
         "type": "mutation",
         "name": "UpsertObservabilityProvider",
         "body": "mutation UpsertObservabilityProvider($attributes: ObservabilityProviderAttributes!) {\n  upsertObservabilityProvider(attributes: $attributes) {\n    ...ObservabilityProvider\n    __typename\n  }\n}\n\nfragment ObservabilityProvider on ObservabilityProvider {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:cb4c7596207f326f9db630718605719f19df8f820e0369febb64f8a4b05bfff7": {
         "type": "mutation",
         "name": "UpsertObservabilityWebhook",
         "body": "mutation UpsertObservabilityWebhook($attributes: ObservabilityWebhookAttributes!) {\n  upsertObservabilityWebhook(attributes: $attributes) {\n    ...ObservabilityWebhook\n    __typename\n  }\n}\n\nfragment ObservabilityWebhook on ObservabilityWebhook {\n  id\n  name\n  type\n  url\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:1b6d819f73c533a3b5e059a8272af5c05a3b0c9184d4a35e2dd1defc5c7b8f08": {
         "type": "mutation",
         "name": "DeleteObservabilityProvider",
         "body": "mutation DeleteObservabilityProvider($id: ID!) {\n  deleteObservabilityProvider(id: $id) {\n    ...ObservabilityProvider\n    __typename\n  }\n}\n\nfragment ObservabilityProvider on ObservabilityProvider {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:78b732680f22c17f7fb68bfde00ac07e67c5fc98519bbb2b16d58d5af8979f5f": {
         "type": "mutation",
         "name": "DeleteObservabilityWebhook",
         "body": "mutation DeleteObservabilityWebhook($id: ID!) {\n  deleteObservabilityWebhook(id: $id) {\n    ...ObservabilityWebhook\n    __typename\n  }\n}\n\nfragment ObservabilityWebhook on ObservabilityWebhook {\n  id\n  name\n  type\n  url\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:c2b60c94f53d1490295e2b7a26c08d2b3f52ccb36a39d6f18c34c7c7ae5fc821": {
         "type": "mutation",
         "name": "DissmissOnboarding",
         "body": "mutation DissmissOnboarding {\n  dismissOnboarding {\n    onboarded\n    __typename\n  }\n}"
      },
      "sha256:70813685823ef5c9d1fe7dd6840d1986a95a8b900a735d314ccdf18fe2db2260": {
         "type": "query",
         "name": "ManagedNamespaces",
         "body": "query ManagedNamespaces($first: Int, $after: String, $projectId: ID) {\n  managedNamespaces(first: $first, after: $after, projectId: $projectId) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ManagedNamespace\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ManagedNamespace on ManagedNamespace {\n  id\n  name\n  insertedAt\n  updatedAt\n  deletedAt\n  description\n  labels\n  annotations\n  pullSecrets\n  cascade {\n    delete\n    detach\n    __typename\n  }\n  target {\n    distro\n    tags\n    __typename\n  }\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  service {\n    ...ServiceTemplateWithoutConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ServiceTemplateWithoutConfiguration on ServiceTemplate {\n  contexts\n  dependencies {\n    id\n    name\n    status\n    __typename\n  }\n  git {\n    folder\n    ref\n    __typename\n  }\n  helm {\n    chart\n    git {\n      folder\n      ref\n      __typename\n    }\n    ignoreCrds\n    ignoreHooks\n    release\n    repository {\n      name\n      namespace\n      __typename\n    }\n    set {\n      name\n      value\n      __typename\n    }\n    url\n    values\n    valuesFiles\n    version\n    __typename\n  }\n  kustomize {\n    path\n    enableHelm\n    __typename\n  }\n  name\n  namespace\n  repository {\n    ...GitRepository\n    __typename\n  }\n  repositoryId\n  syncConfig {\n    createNamespace\n    enforceNamespace\n    namespaceMetadata {\n      annotations\n      labels\n      __typename\n    }\n    __typename\n  }\n  templated\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:27c03e4fd745f2e04edf100014e728f97ab599cced39a1850562f9f80f63bdaf": {
         "type": "query",
         "name": "GetManagedNamespaceName",
         "body": "query GetManagedNamespaceName($namespaceId: ID!) {\n  managedNamespace(id: $namespaceId) {\n    name\n    __typename\n  }\n}"
      },
      "sha256:2e80dc9b4ab59fcb615e287f3842dd1717affc21f89f2db3375d8759e4125266": {
         "type": "query",
         "name": "GetManagedNamespace",
         "body": "query GetManagedNamespace($namespaceId: ID!) {\n  managedNamespace(id: $namespaceId) {\n    ...ManagedNamespace\n    __typename\n  }\n}\n\nfragment ManagedNamespace on ManagedNamespace {\n  id\n  name\n  insertedAt\n  updatedAt\n  deletedAt\n  description\n  labels\n  annotations\n  pullSecrets\n  cascade {\n    delete\n    detach\n    __typename\n  }\n  target {\n    distro\n    tags\n    __typename\n  }\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  service {\n    ...ServiceTemplateWithoutConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ServiceTemplateWithoutConfiguration on ServiceTemplate {\n  contexts\n  dependencies {\n    id\n    name\n    status\n    __typename\n  }\n  git {\n    folder\n    ref\n    __typename\n  }\n  helm {\n    chart\n    git {\n      folder\n      ref\n      __typename\n    }\n    ignoreCrds\n    ignoreHooks\n    release\n    repository {\n      name\n      namespace\n      __typename\n    }\n    set {\n      name\n      value\n      __typename\n    }\n    url\n    values\n    valuesFiles\n    version\n    __typename\n  }\n  kustomize {\n    path\n    enableHelm\n    __typename\n  }\n  name\n  namespace\n  repository {\n    ...GitRepository\n    __typename\n  }\n  repositoryId\n  syncConfig {\n    createNamespace\n    enforceNamespace\n    namespaceMetadata {\n      annotations\n      labels\n      __typename\n    }\n    __typename\n  }\n  templated\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:421287215f3f4daa5428d2c8daccbe8b379b1de5cfd98e57fb6dbb4a0a3412f1": {
         "type": "query",
         "name": "GetManagedNamespaceServices",
         "body": "query GetManagedNamespaceServices($namespaceId: ID!, $first: Int, $after: String) {\n  managedNamespace(id: $namespaceId) {\n    services(first: $first, after: $after) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...ServiceDeploymentsRow\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}"
      },
      "sha256:41044c902c067979269f5f575b7d9cfd1f6f8e35b4c5fce0acc5387fbd0b35d4": {
         "type": "query",
         "name": "Observers",
         "body": "query Observers($first: Int, $last: Int, $before: String, $after: String, $projectId: ID) {\n  observers(\n    first: $first\n    last: $last\n    before: $before\n    after: $after\n    projectId: $projectId\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Observer\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Observer on Observer {\n  id\n  insertedAt\n  updatedAt\n  name\n  crontab\n  status\n  lastRunAt\n  nextRunAt\n  lastValue\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  target {\n    ...ObserverTarget\n    __typename\n  }\n  errors {\n    ...ServiceError\n    __typename\n  }\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ObserverTarget on ObserverTarget {\n  target\n  format\n  order\n  git {\n    type\n    repositoryId\n    __typename\n  }\n  helm {\n    url\n    provider\n    chart\n    __typename\n  }\n  oci {\n    provider\n    url\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceError on ServiceError {\n  source\n  message\n  warning\n  __typename\n}"
      },
      "sha256:dce139f237b4916b921cb08404aad8ac2594733723ba4b66af31ebce14682bc4": {
         "type": "query",
         "name": "Observer",
         "body": "query Observer($id: ID, $name: String) {\n  observer(id: $id, name: $name) {\n    ...Observer\n    __typename\n  }\n}\n\nfragment Observer on Observer {\n  id\n  insertedAt\n  updatedAt\n  name\n  crontab\n  status\n  lastRunAt\n  nextRunAt\n  lastValue\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  target {\n    ...ObserverTarget\n    __typename\n  }\n  errors {\n    ...ServiceError\n    __typename\n  }\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ObserverTarget on ObserverTarget {\n  target\n  format\n  order\n  git {\n    type\n    repositoryId\n    __typename\n  }\n  helm {\n    url\n    provider\n    chart\n    __typename\n  }\n  oci {\n    provider\n    url\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceError on ServiceError {\n  source\n  message\n  warning\n  __typename\n}"
      },
      "sha256:ca9e64084e0dc294e4d875853b17814cfde5a8541de0392e4e1b120a237ac0c1": {
         "type": "mutation",
         "name": "UpsertObserver",
         "body": "mutation UpsertObserver($attrs: ObserverAttributes) {\n  upsertObserver(attributes: $attrs) {\n    ...Observer\n    __typename\n  }\n}\n\nfragment Observer on Observer {\n  id\n  insertedAt\n  updatedAt\n  name\n  crontab\n  status\n  lastRunAt\n  nextRunAt\n  lastValue\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  target {\n    ...ObserverTarget\n    __typename\n  }\n  errors {\n    ...ServiceError\n    __typename\n  }\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ObserverTarget on ObserverTarget {\n  target\n  format\n  order\n  git {\n    type\n    repositoryId\n    __typename\n  }\n  helm {\n    url\n    provider\n    chart\n    __typename\n  }\n  oci {\n    provider\n    url\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceError on ServiceError {\n  source\n  message\n  warning\n  __typename\n}"
      },
      "sha256:3901f37c8fbccf75fca48c4e8b477e149b243af12028d2e6d7fed7c34b7e8c2e": {
         "type": "mutation",
         "name": "DeleteObserver",
         "body": "mutation DeleteObserver($id: ID!) {\n  deleteObserver(id: $id) {\n    ...Observer\n    __typename\n  }\n}\n\nfragment Observer on Observer {\n  id\n  insertedAt\n  updatedAt\n  name\n  crontab\n  status\n  lastRunAt\n  nextRunAt\n  lastValue\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  target {\n    ...ObserverTarget\n    __typename\n  }\n  errors {\n    ...ServiceError\n    __typename\n  }\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ObserverTarget on ObserverTarget {\n  target\n  format\n  order\n  git {\n    type\n    repositoryId\n    __typename\n  }\n  helm {\n    url\n    provider\n    chart\n    __typename\n  }\n  oci {\n    provider\n    url\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceError on ServiceError {\n  source\n  message\n  warning\n  __typename\n}"
      },
      "sha256:84e7d792e49173b716f92aa3b546b0fd049b3f018618c05e0468eafb15e29fc3": {
         "type": "mutation",
         "name": "KickObserver",
         "body": "mutation KickObserver($id: ID!) {\n  kickObserver(id: $id) {\n    ...Observer\n    __typename\n  }\n}\n\nfragment Observer on Observer {\n  id\n  insertedAt\n  updatedAt\n  name\n  crontab\n  status\n  lastRunAt\n  nextRunAt\n  lastValue\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  target {\n    ...ObserverTarget\n    __typename\n  }\n  errors {\n    ...ServiceError\n    __typename\n  }\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment ObserverTarget on ObserverTarget {\n  target\n  format\n  order\n  git {\n    type\n    repositoryId\n    __typename\n  }\n  helm {\n    url\n    provider\n    chart\n    __typename\n  }\n  oci {\n    provider\n    url\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceError on ServiceError {\n  source\n  message\n  warning\n  __typename\n}"
      },
      "sha256:419ba78c68f39c620593ef293ba5ce0472fa93ca136edad1990315b646e3a278": {
         "type": "query",
         "name": "Pipelines",
         "body": "query Pipelines($q: String, $first: Int = 50, $after: String, $projectId: ID) {\n  pipelines(q: $q, first: $first, after: $after, projectId: $projectId) {\n    ...PipelineConnection\n    __typename\n  }\n}\n\nfragment PipelineConnection on PipelineConnection {\n  edges {\n    node {\n      ...Pipeline\n      __typename\n    }\n    __typename\n  }\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  __typename\n}\n\nfragment Pipeline on Pipeline {\n  id\n  name\n  insertedAt\n  updatedAt\n  edges {\n    ...PipelineStageEdge\n    __typename\n  }\n  stages {\n    ...PipelineStage\n    __typename\n  }\n  status {\n    ...PipelineStatus\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStageEdge on PipelineStageEdge {\n  id\n  insertedAt\n  promotedAt\n  updatedAt\n  gates {\n    ...PipelineGate\n    __typename\n  }\n  from {\n    ...PipelineStage\n    __typename\n  }\n  to {\n    ...PipelineStage\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineGate on PipelineGate {\n  id\n  name\n  state\n  type\n  cluster {\n    id\n    __typename\n  }\n  approver {\n    ...User\n    __typename\n  }\n  edge {\n    pipeline {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  spec {\n    job {\n      ...JobGateSpec\n      __typename\n    }\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}\n\nfragment PipelineStage on PipelineStage {\n  id\n  name\n  insertedAt\n  updatedAt\n  promotion {\n    ...PipelinePromotion\n    __typename\n  }\n  services {\n    ...StageService\n    __typename\n  }\n  context {\n    ...PipelineContext\n    __typename\n  }\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment PipelinePromotion on PipelinePromotion {\n  id\n  services {\n    ...PromotionService\n    __typename\n  }\n  insertedAt\n  updatedAt\n  promotedAt\n  revisedAt\n  __typename\n}\n\nfragment PromotionService on PromotionService {\n  id\n  revision {\n    ...Revision\n    __typename\n  }\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment Revision on Revision {\n  id\n  git {\n    ref\n    folder\n    __typename\n  }\n  insertedAt\n  updatedAt\n  message\n  sha\n  version\n  __typename\n}\n\nfragment PipelineServiceDeployment on ServiceDeployment {\n  id\n  name\n  namespace\n  cluster {\n    id\n    name\n    __typename\n  }\n  status\n  componentStatus\n  revision {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment StageService on StageService {\n  id\n  criteria {\n    ...PromotionCriteria\n    __typename\n  }\n  insertedAt\n  updatedAt\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  __typename\n}\n\nfragment PromotionCriteria on PromotionCriteria {\n  id\n  secrets\n  source {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PipelineContext on PipelineContext {\n  id\n  context\n  insertedAt\n  updatedAt\n  pullRequests {\n    ...PullRequest\n    __typename\n  }\n  pipelinePullRequests {\n    ...PipelinePullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PipelinePullRequest on PipelinePullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  stage {\n    id\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStatus on PipelineStatus {\n  closed\n  pending\n  running\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:ed8fa7d8db611135ca796fa49046f155c7e6a957a786cce22267ecf9983ef9fd": {
         "type": "query",
         "name": "PipelineBindings",
         "body": "query PipelineBindings($id: ID!) {\n  pipeline(id: $id) {\n    ...PipelineBindings\n    __typename\n  }\n}\n\nfragment PipelineBindings on Pipeline {\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:ae3b3c9d22dbaf8dab3cee800a8282e37699267f31ee32d91793bf9d0fd8b1fa": {
         "type": "query",
         "name": "JobGate",
         "body": "query JobGate($id: ID!) {\n  pipelineGate(id: $id) {\n    ...PipelineGate\n    job {\n      ...PipelineGateJob\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PipelineGate on PipelineGate {\n  id\n  name\n  state\n  type\n  cluster {\n    id\n    __typename\n  }\n  approver {\n    ...User\n    __typename\n  }\n  edge {\n    pipeline {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  spec {\n    job {\n      ...JobGateSpec\n      __typename\n    }\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}\n\nfragment PipelineGateJob on Job {\n  events {\n    action\n    count\n    eventTime\n    lastTimestamp\n    message\n    reason\n    type\n    __typename\n  }\n  metadata {\n    ...Metadata\n    __typename\n  }\n  pods {\n    ...Pod\n    __typename\n  }\n  raw\n  spec {\n    activeDeadlineSeconds\n    backoffLimit\n    parallelism\n    __typename\n  }\n  status {\n    active\n    completionTime\n    failed\n    startTime\n    succeeded\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}"
      },
      "sha256:ea99b47827c03391c2672ecc8eb57a8365d5c28c74f1dedaec18dbd166136cbf": {
         "type": "query",
         "name": "JobGateLogs",
         "body": "query JobGateLogs($id: ID!, $container: String!, $sinceSeconds: Int!) {\n  pipelineGate(id: $id) {\n    job {\n      logs(container: $container, sinceSeconds: $sinceSeconds)\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:975262756a7d6955d5bd1dcbf8b408b248b4eb93f11c283c628d2a9512728bf5": {
         "type": "query",
         "name": "Pipeline",
         "body": "query Pipeline($id: ID!) {\n  pipeline(id: $id) {\n    ...Pipeline\n    __typename\n  }\n}\n\nfragment Pipeline on Pipeline {\n  id\n  name\n  insertedAt\n  updatedAt\n  edges {\n    ...PipelineStageEdge\n    __typename\n  }\n  stages {\n    ...PipelineStage\n    __typename\n  }\n  status {\n    ...PipelineStatus\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStageEdge on PipelineStageEdge {\n  id\n  insertedAt\n  promotedAt\n  updatedAt\n  gates {\n    ...PipelineGate\n    __typename\n  }\n  from {\n    ...PipelineStage\n    __typename\n  }\n  to {\n    ...PipelineStage\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineGate on PipelineGate {\n  id\n  name\n  state\n  type\n  cluster {\n    id\n    __typename\n  }\n  approver {\n    ...User\n    __typename\n  }\n  edge {\n    pipeline {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  spec {\n    job {\n      ...JobGateSpec\n      __typename\n    }\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}\n\nfragment PipelineStage on PipelineStage {\n  id\n  name\n  insertedAt\n  updatedAt\n  promotion {\n    ...PipelinePromotion\n    __typename\n  }\n  services {\n    ...StageService\n    __typename\n  }\n  context {\n    ...PipelineContext\n    __typename\n  }\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment PipelinePromotion on PipelinePromotion {\n  id\n  services {\n    ...PromotionService\n    __typename\n  }\n  insertedAt\n  updatedAt\n  promotedAt\n  revisedAt\n  __typename\n}\n\nfragment PromotionService on PromotionService {\n  id\n  revision {\n    ...Revision\n    __typename\n  }\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment Revision on Revision {\n  id\n  git {\n    ref\n    folder\n    __typename\n  }\n  insertedAt\n  updatedAt\n  message\n  sha\n  version\n  __typename\n}\n\nfragment PipelineServiceDeployment on ServiceDeployment {\n  id\n  name\n  namespace\n  cluster {\n    id\n    name\n    __typename\n  }\n  status\n  componentStatus\n  revision {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment StageService on StageService {\n  id\n  criteria {\n    ...PromotionCriteria\n    __typename\n  }\n  insertedAt\n  updatedAt\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  __typename\n}\n\nfragment PromotionCriteria on PromotionCriteria {\n  id\n  secrets\n  source {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PipelineContext on PipelineContext {\n  id\n  context\n  insertedAt\n  updatedAt\n  pullRequests {\n    ...PullRequest\n    __typename\n  }\n  pipelinePullRequests {\n    ...PipelinePullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PipelinePullRequest on PipelinePullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  stage {\n    id\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStatus on PipelineStatus {\n  closed\n  pending\n  running\n  __typename\n}"
      },
      "sha256:b913ea601561bf8dd9b78c9347556f4176439a917ca0075de235b0e285934ad3": {
         "type": "query",
         "name": "PipelineContexts",
         "body": "query PipelineContexts($id: ID!, $before: String, $after: String, $first: Int!, $last: Int) {\n  pipeline(id: $id) {\n    id\n    contexts(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          ...PipelineContext\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PipelineContext on PipelineContext {\n  id\n  context\n  insertedAt\n  updatedAt\n  pullRequests {\n    ...PullRequest\n    __typename\n  }\n  pipelinePullRequests {\n    ...PipelinePullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PipelinePullRequest on PipelinePullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  stage {\n    id\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:8cd81c14b3d059efddfebecd7aff02d80a6dd951be72aac7d91863a2372c738e": {
         "type": "query",
         "name": "PipelineContext",
         "body": "query PipelineContext($id: ID!) {\n  pipelineContext(id: $id) {\n    ...PipelineContext\n    pipeline {\n      ...Pipeline\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PipelineContext on PipelineContext {\n  id\n  context\n  insertedAt\n  updatedAt\n  pullRequests {\n    ...PullRequest\n    __typename\n  }\n  pipelinePullRequests {\n    ...PipelinePullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PipelinePullRequest on PipelinePullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  stage {\n    id\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment Pipeline on Pipeline {\n  id\n  name\n  insertedAt\n  updatedAt\n  edges {\n    ...PipelineStageEdge\n    __typename\n  }\n  stages {\n    ...PipelineStage\n    __typename\n  }\n  status {\n    ...PipelineStatus\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStageEdge on PipelineStageEdge {\n  id\n  insertedAt\n  promotedAt\n  updatedAt\n  gates {\n    ...PipelineGate\n    __typename\n  }\n  from {\n    ...PipelineStage\n    __typename\n  }\n  to {\n    ...PipelineStage\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineGate on PipelineGate {\n  id\n  name\n  state\n  type\n  cluster {\n    id\n    __typename\n  }\n  approver {\n    ...User\n    __typename\n  }\n  edge {\n    pipeline {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  spec {\n    job {\n      ...JobGateSpec\n      __typename\n    }\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}\n\nfragment PipelineStage on PipelineStage {\n  id\n  name\n  insertedAt\n  updatedAt\n  promotion {\n    ...PipelinePromotion\n    __typename\n  }\n  services {\n    ...StageService\n    __typename\n  }\n  context {\n    ...PipelineContext\n    __typename\n  }\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment PipelinePromotion on PipelinePromotion {\n  id\n  services {\n    ...PromotionService\n    __typename\n  }\n  insertedAt\n  updatedAt\n  promotedAt\n  revisedAt\n  __typename\n}\n\nfragment PromotionService on PromotionService {\n  id\n  revision {\n    ...Revision\n    __typename\n  }\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment Revision on Revision {\n  id\n  git {\n    ref\n    folder\n    __typename\n  }\n  insertedAt\n  updatedAt\n  message\n  sha\n  version\n  __typename\n}\n\nfragment PipelineServiceDeployment on ServiceDeployment {\n  id\n  name\n  namespace\n  cluster {\n    id\n    name\n    __typename\n  }\n  status\n  componentStatus\n  revision {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment StageService on StageService {\n  id\n  criteria {\n    ...PromotionCriteria\n    __typename\n  }\n  insertedAt\n  updatedAt\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  __typename\n}\n\nfragment PromotionCriteria on PromotionCriteria {\n  id\n  secrets\n  source {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PipelineStatus on PipelineStatus {\n  closed\n  pending\n  running\n  __typename\n}"
      },
      "sha256:8a6c7bb0d007c9a35aef5c473cb93815cb0cbabd909034b0ea4045acd8f9e9b5": {
         "type": "mutation",
         "name": "deletePipeline",
         "body": "mutation deletePipeline($id: ID!) {\n  deletePipeline(id: $id) {\n    ...Pipeline\n    __typename\n  }\n}\n\nfragment Pipeline on Pipeline {\n  id\n  name\n  insertedAt\n  updatedAt\n  edges {\n    ...PipelineStageEdge\n    __typename\n  }\n  stages {\n    ...PipelineStage\n    __typename\n  }\n  status {\n    ...PipelineStatus\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStageEdge on PipelineStageEdge {\n  id\n  insertedAt\n  promotedAt\n  updatedAt\n  gates {\n    ...PipelineGate\n    __typename\n  }\n  from {\n    ...PipelineStage\n    __typename\n  }\n  to {\n    ...PipelineStage\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineGate on PipelineGate {\n  id\n  name\n  state\n  type\n  cluster {\n    id\n    __typename\n  }\n  approver {\n    ...User\n    __typename\n  }\n  edge {\n    pipeline {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  spec {\n    job {\n      ...JobGateSpec\n      __typename\n    }\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}\n\nfragment PipelineStage on PipelineStage {\n  id\n  name\n  insertedAt\n  updatedAt\n  promotion {\n    ...PipelinePromotion\n    __typename\n  }\n  services {\n    ...StageService\n    __typename\n  }\n  context {\n    ...PipelineContext\n    __typename\n  }\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment PipelinePromotion on PipelinePromotion {\n  id\n  services {\n    ...PromotionService\n    __typename\n  }\n  insertedAt\n  updatedAt\n  promotedAt\n  revisedAt\n  __typename\n}\n\nfragment PromotionService on PromotionService {\n  id\n  revision {\n    ...Revision\n    __typename\n  }\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment Revision on Revision {\n  id\n  git {\n    ref\n    folder\n    __typename\n  }\n  insertedAt\n  updatedAt\n  message\n  sha\n  version\n  __typename\n}\n\nfragment PipelineServiceDeployment on ServiceDeployment {\n  id\n  name\n  namespace\n  cluster {\n    id\n    name\n    __typename\n  }\n  status\n  componentStatus\n  revision {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment StageService on StageService {\n  id\n  criteria {\n    ...PromotionCriteria\n    __typename\n  }\n  insertedAt\n  updatedAt\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  __typename\n}\n\nfragment PromotionCriteria on PromotionCriteria {\n  id\n  secrets\n  source {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PipelineContext on PipelineContext {\n  id\n  context\n  insertedAt\n  updatedAt\n  pullRequests {\n    ...PullRequest\n    __typename\n  }\n  pipelinePullRequests {\n    ...PipelinePullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PipelinePullRequest on PipelinePullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  stage {\n    id\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStatus on PipelineStatus {\n  closed\n  pending\n  running\n  __typename\n}"
      },
      "sha256:64309ba2b3f32af4b5bb547a23b4a65e8ed318db044447405ddc65008055f98f": {
         "type": "mutation",
         "name": "ApproveGate",
         "body": "mutation ApproveGate($id: ID!) {\n  approveGate(id: $id) {\n    ...PipelineGate\n    __typename\n  }\n}\n\nfragment PipelineGate on PipelineGate {\n  id\n  name\n  state\n  type\n  cluster {\n    id\n    __typename\n  }\n  approver {\n    ...User\n    __typename\n  }\n  edge {\n    pipeline {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  spec {\n    job {\n      ...JobGateSpec\n      __typename\n    }\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}"
      },
      "sha256:245c4aba073db313dd3eb1ee1ceee7afd60f4fcc8935329717a2f591a09af467": {
         "type": "mutation",
         "name": "CreatePipelineContext",
         "body": "mutation CreatePipelineContext($pipelineId: ID!, $attributes: PipelineContextAttributes!) {\n  createPipelineContext(pipelineId: $pipelineId, attributes: $attributes) {\n    ...PipelineContext\n    pipeline {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PipelineContext on PipelineContext {\n  id\n  context\n  insertedAt\n  updatedAt\n  pullRequests {\n    ...PullRequest\n    __typename\n  }\n  pipelinePullRequests {\n    ...PipelinePullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PipelinePullRequest on PipelinePullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  stage {\n    id\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:3eea0cead5d344ca5ebecf4c920ac4ceca15ff8f3fbf1b528ab7d778de09b250": {
         "type": "mutation",
         "name": "ForceGate",
         "body": "mutation ForceGate($id: ID!, $state: GateState) {\n  forceGate(id: $id, state: $state) {\n    ...PipelineGate\n    __typename\n  }\n}\n\nfragment PipelineGate on PipelineGate {\n  id\n  name\n  state\n  type\n  cluster {\n    id\n    __typename\n  }\n  approver {\n    ...User\n    __typename\n  }\n  edge {\n    pipeline {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  spec {\n    job {\n      ...JobGateSpec\n      __typename\n    }\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}"
      },
      "sha256:65ced60b73272a397265e30e6f90d6e2343da6f6942944b33b222231130f138b": {
         "type": "query",
         "name": "ClusterProviders",
         "body": "query ClusterProviders {\n  clusterProviders(first: 100) {\n    edges {\n      node {\n        ...ClusterProvider\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ClusterProvider on ClusterProvider {\n  id\n  name\n  namespace\n  cloud\n  editable\n  git {\n    folder\n    ref\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  service {\n    id\n    name\n    namespace\n    __typename\n  }\n  credentials {\n    ...ProviderCredential\n    __typename\n  }\n  supportedVersions\n  deletedAt\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ProviderCredential on ProviderCredential {\n  id\n  insertedAt\n  kind\n  name\n  namespace\n  updatedAt\n  __typename\n}"
      },
      "sha256:623e276622bce1b80a1624067fe7fe1fdcc0c33358e05702280bf9b802d08c71": {
         "type": "mutation",
         "name": "CreateClusterProvider",
         "body": "mutation CreateClusterProvider($attributes: ClusterProviderAttributes!) {\n  createClusterProvider(attributes: $attributes) {\n    ...ClusterProvider\n    __typename\n  }\n}\n\nfragment ClusterProvider on ClusterProvider {\n  id\n  name\n  namespace\n  cloud\n  editable\n  git {\n    folder\n    ref\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  service {\n    id\n    name\n    namespace\n    __typename\n  }\n  credentials {\n    ...ProviderCredential\n    __typename\n  }\n  supportedVersions\n  deletedAt\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ProviderCredential on ProviderCredential {\n  id\n  insertedAt\n  kind\n  name\n  namespace\n  updatedAt\n  __typename\n}"
      },
      "sha256:6cfbc05bfb0a00fbff1393ec3560a5b1656c8c0f7fe44371dcc29d3af8288afa": {
         "type": "mutation",
         "name": "UpdateClusterProvider",
         "body": "mutation UpdateClusterProvider($id: ID!, $attributes: ClusterProviderUpdateAttributes!) {\n  updateClusterProvider(id: $id, attributes: $attributes) {\n    ...ClusterProvider\n    __typename\n  }\n}\n\nfragment ClusterProvider on ClusterProvider {\n  id\n  name\n  namespace\n  cloud\n  editable\n  git {\n    folder\n    ref\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  service {\n    id\n    name\n    namespace\n    __typename\n  }\n  credentials {\n    ...ProviderCredential\n    __typename\n  }\n  supportedVersions\n  deletedAt\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ProviderCredential on ProviderCredential {\n  id\n  insertedAt\n  kind\n  name\n  namespace\n  updatedAt\n  __typename\n}"
      },
      "sha256:ae13ae5eb8d9386f19430a4bb3f45b4a9493cb475dc1472f3c6ea9be440c398b": {
         "type": "mutation",
         "name": "DeleteClusterProvider",
         "body": "mutation DeleteClusterProvider($id: ID!) {\n  deleteClusterProvider(id: $id) {\n    ...ClusterProvider\n    __typename\n  }\n}\n\nfragment ClusterProvider on ClusterProvider {\n  id\n  name\n  namespace\n  cloud\n  editable\n  git {\n    folder\n    ref\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  service {\n    id\n    name\n    namespace\n    __typename\n  }\n  credentials {\n    ...ProviderCredential\n    __typename\n  }\n  supportedVersions\n  deletedAt\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ProviderCredential on ProviderCredential {\n  id\n  insertedAt\n  kind\n  name\n  namespace\n  updatedAt\n  __typename\n}"
      },
      "sha256:94f5c273de7d5f5b600abc14fae331e4cbd59e26617a5bbc7208bfdd948d18d9": {
         "type": "mutation",
         "name": "CreatePullRequest",
         "body": "mutation CreatePullRequest($id: ID!, $branch: String!, $identifier: String, $context: Json!, $threadId: ID) {\n  createPullRequest(\n    id: $id\n    branch: $branch\n    identifier: $identifier\n    context: $context\n    threadId: $threadId\n  ) {\n    ...PullRequest\n    __typename\n  }\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:36445d82953225477253ab69e1a3eae7e581f940b70b9cac9cfa48ac5e288f90": {
         "type": "mutation",
         "name": "UpdatePullRequest",
         "body": "mutation UpdatePullRequest($id: ID!, $attributes: PullRequestUpdateAttributes) {\n  updatePullRequest(id: $id, attributes: $attributes) {\n    ...PullRequest\n    __typename\n  }\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:c21fead117a707dcf6fe9e1abea4e3f9b8623f774e607904257bec1bdff915dd": {
         "type": "mutation",
         "name": "DeletePullRequest",
         "body": "mutation DeletePullRequest($id: ID!) {\n  deletePullRequest(id: $id) {\n    ...PullRequest\n    __typename\n  }\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:3115a845ea1038c3087ef7b5de82b937d9377f5332c92c95c41ed7d1364b8cc5": {
         "type": "query",
         "name": "PullRequests",
         "body": "query PullRequests($q: String, $first: Int = 100, $after: String, $clusterId: ID, $serviceId: ID, $open: Boolean) {\n  pullRequests(\n    q: $q\n    first: $first\n    after: $after\n    clusterId: $clusterId\n    serviceId: $serviceId\n    open: $open\n  ) {\n    ...PullRequestConnection\n    __typename\n  }\n}\n\nfragment PullRequestConnection on PullRequestConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...PullRequest\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:c1ff00d49d55074a87babb8cb418b19473f728b658dc45c421b31c5798b74651": {
         "type": "query",
         "name": "ServiceDeployments",
         "body": "query ServiceDeployments($first: Int = 100, $after: String, $q: String, $cluster: String, $clusterId: ID, $status: ServiceDeploymentStatus, $projectId: ID) {\n  serviceDeployments(\n    first: $first\n    after: $after\n    q: $q\n    cluster: $cluster\n    clusterId: $clusterId\n    status: $status\n    projectId: $projectId\n  ) {\n    ...ServiceDeploymentsConnection\n    __typename\n  }\n  serviceStatuses(clusterId: $clusterId) {\n    ...ServiceStatusCount\n    __typename\n  }\n}\n\nfragment ServiceDeploymentsConnection on ServiceDeploymentConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...ServiceDeploymentsRow\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceStatusCount on ServiceStatusCount {\n  count\n  status\n  __typename\n}"
      },
      "sha256:71d8e7f847604121ec12f88617457cc3ba49a573747dc8dfdbe33c3599909c59": {
         "type": "query",
         "name": "ServiceDeploymentsTiny",
         "body": "query ServiceDeploymentsTiny($clusterId: ID, $projectId: ID) {\n  serviceDeployments(first: 100, clusterId: $clusterId, projectId: $projectId) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ServiceDeploymentTiny\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:91c589bdfb18fcd545c064606f8ce0b6197425a8e927299546abc624bcffad8e": {
         "type": "query",
         "name": "ServiceTree",
         "body": "query ServiceTree($first: Int = 100, $status: ServiceDeploymentStatus, $clusterId: ID, $projectId: ID) {\n  serviceTree(\n    first: $first\n    status: $status\n    clusterId: $clusterId\n    projectId: $projectId\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ServiceTreeNode\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ServiceTreeNode on ServiceDeployment {\n  id\n  name\n  namespace\n  updatedAt\n  status\n  componentStatus\n  components {\n    ...ServiceDeploymentComponent\n    __typename\n  }\n  cluster {\n    id\n    name\n    __typename\n  }\n  repository {\n    url\n    pulledAt\n    __typename\n  }\n  git {\n    ref\n    folder\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    __typename\n  }\n  parent {\n    id\n    name\n    __typename\n  }\n  owner {\n    id\n    name\n    __typename\n  }\n  errors {\n    source\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentComponent on ServiceComponent {\n  id\n  uid\n  name\n  group\n  kind\n  namespace\n  state\n  synced\n  version\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  content {\n    desired\n    live\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:30b48c596f2787b4a428722afc30b127760459a328d5168b34138c453fdf3421": {
         "type": "query",
         "name": "ServiceDeployment",
         "body": "query ServiceDeployment($id: ID!) {\n  serviceDeployment(id: $id) {\n    ...ServiceDeploymentDetails\n    __typename\n  }\n}\n\nfragment ServiceDeploymentDetails on ServiceDeployment {\n  ...ServiceDeploymentsRow\n  cluster {\n    ...ClusterMinimal\n    operationalLayout {\n      serviceMesh\n      __typename\n    }\n    __typename\n  }\n  namespace\n  message\n  version\n  helm {\n    values\n    valuesFiles\n    __typename\n  }\n  components {\n    ...ServiceDeploymentComponent\n    __typename\n  }\n  contexts {\n    ...ServiceContext\n    __typename\n  }\n  dependencies {\n    ...ServiceDependency\n    __typename\n  }\n  repository {\n    pulledAt\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  imports {\n    stack {\n      ...StackMinimal\n      __typename\n    }\n    __typename\n  }\n  parent {\n    id\n    name\n    cluster {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  scalingRecommendations {\n    ...ClusterScalingRecommendation\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceDeploymentComponent on ServiceComponent {\n  id\n  uid\n  name\n  group\n  kind\n  namespace\n  state\n  synced\n  version\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  content {\n    desired\n    live\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment ServiceContext on ServiceContext {\n  id\n  configuration\n  name\n  project {\n    id\n    name\n    __typename\n  }\n  secrets {\n    name\n    value\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ServiceDependency on ServiceDependency {\n  id\n  name\n  status\n  updatedAt\n  __typename\n}\n\nfragment StackMinimal on InfrastructureStack {\n  id\n  name\n  type\n  status\n  insertedAt\n  updatedAt\n  deletedAt\n  __typename\n}\n\nfragment ClusterScalingRecommendation on ClusterScalingRecommendation {\n  id\n  namespace\n  name\n  type\n  container\n  cpuCost\n  cpuRequest\n  cpuRecommendation\n  memoryCost\n  memoryRequest\n  memoryRecommendation\n  service {\n    ...ServiceDeploymentTiny\n    cluster {\n      distro\n      provider {\n        id\n        cloud\n        name\n        namespace\n        supportedVersions\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:4484b55d333c4c4076c60815280ac89db8b8c964702f1c199f1e0b6806aa6ab5": {
         "type": "query",
         "name": "ServiceDeploymentTiny",
         "body": "query ServiceDeploymentTiny($id: ID!) {\n  serviceDeployment(id: $id) {\n    ...ServiceDeploymentTiny\n    __typename\n  }\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:44b2333006a531a5526cd99f66ccc79c4d7c9da107c390be8842d47c09229aca": {
         "type": "query",
         "name": "ServiceDeploymentComponents",
         "body": "query ServiceDeploymentComponents($id: ID!) {\n  serviceDeployment(id: $id) {\n    id\n    name\n    cluster {\n      id\n      name\n      handle\n      __typename\n    }\n    components {\n      ...ServiceDeploymentComponent\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ServiceDeploymentComponent on ServiceComponent {\n  id\n  uid\n  name\n  group\n  kind\n  namespace\n  state\n  synced\n  version\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  content {\n    desired\n    live\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:42f784249c2aa4cf4a613ff28637d66867bbcaf7e1e9b918ab6f97d744483d1a": {
         "type": "query",
         "name": "ServiceDeploymentComponentsWithChildren",
         "body": "query ServiceDeploymentComponentsWithChildren($id: ID!) {\n  serviceDeployment(id: $id) {\n    id\n    name\n    cluster {\n      id\n      name\n      handle\n      __typename\n    }\n    components {\n      ...ServiceDeploymentComponentWithChildren\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ServiceDeploymentComponentWithChildren on ServiceComponent {\n  ...ServiceDeploymentComponent\n  children {\n    ...ServiceComponentChild\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentComponent on ServiceComponent {\n  id\n  uid\n  name\n  group\n  kind\n  namespace\n  state\n  synced\n  version\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  content {\n    desired\n    live\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ServiceComponentChild on ServiceComponentChild {\n  id\n  group\n  kind\n  version\n  name\n  namespace\n  parentUid\n  uid\n  state\n  insertedAt\n  updatedAt\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a3d531b94b7be833d188401e85f1148156366604ca154c465b7020e9d9bf879a": {
         "type": "query",
         "name": "ServiceDeploymentSecrets",
         "body": "query ServiceDeploymentSecrets($id: ID!) {\n  serviceDeployment(id: $id) {\n    configuration {\n      name\n      value\n      __typename\n    }\n    helm {\n      values\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:8aa3e2980c523fc53e97b4395cdb9df36b1ff6d6c644101d67071562dbc97118": {
         "type": "query",
         "name": "ServiceDeploymentRevisions",
         "body": "query ServiceDeploymentRevisions($id: ID!) {\n  serviceDeployment(id: $id) {\n    ...ServiceDeploymentRevisions\n    __typename\n  }\n}\n\nfragment ServiceDeploymentRevisions on ServiceDeployment {\n  revision {\n    ...ServiceDeploymentRevision\n    __typename\n  }\n  revisions(first: 500) {\n    edges {\n      node {\n        ...ServiceDeploymentRevision\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentRevision on Revision {\n  id\n  sha\n  version\n  message\n  updatedAt\n  insertedAt\n  helm {\n    chart\n    version\n    __typename\n  }\n  git {\n    folder\n    ref\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:88a40b8c42ec65619b7ef55fca23b2a660f1f5c7f3b7b5840ec891d47aaeee78": {
         "type": "mutation",
         "name": "CreateServiceDeployment",
         "body": "mutation CreateServiceDeployment($attributes: ServiceDeploymentAttributes!, $cluster: String, $clusterId: ID) {\n  createServiceDeployment(\n    attributes: $attributes\n    cluster: $cluster\n    clusterId: $clusterId\n  ) {\n    ...ServiceDeploymentsRow\n    __typename\n  }\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}"
      },
      "sha256:cd4b9c4093232b061c87fa48087cc2ca0953c1fc1611536f5e0ace3bc078a018": {
         "type": "mutation",
         "name": "UpdateServiceDeployment",
         "body": "mutation UpdateServiceDeployment($id: ID!, $attributes: ServiceUpdateAttributes!) {\n  updateServiceDeployment(id: $id, attributes: $attributes) {\n    ...ServiceDeploymentDetails\n    __typename\n  }\n}\n\nfragment ServiceDeploymentDetails on ServiceDeployment {\n  ...ServiceDeploymentsRow\n  cluster {\n    ...ClusterMinimal\n    operationalLayout {\n      serviceMesh\n      __typename\n    }\n    __typename\n  }\n  namespace\n  message\n  version\n  helm {\n    values\n    valuesFiles\n    __typename\n  }\n  components {\n    ...ServiceDeploymentComponent\n    __typename\n  }\n  contexts {\n    ...ServiceContext\n    __typename\n  }\n  dependencies {\n    ...ServiceDependency\n    __typename\n  }\n  repository {\n    pulledAt\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  imports {\n    stack {\n      ...StackMinimal\n      __typename\n    }\n    __typename\n  }\n  parent {\n    id\n    name\n    cluster {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  scalingRecommendations {\n    ...ClusterScalingRecommendation\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceDeploymentComponent on ServiceComponent {\n  id\n  uid\n  name\n  group\n  kind\n  namespace\n  state\n  synced\n  version\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  content {\n    desired\n    live\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment ServiceContext on ServiceContext {\n  id\n  configuration\n  name\n  project {\n    id\n    name\n    __typename\n  }\n  secrets {\n    name\n    value\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ServiceDependency on ServiceDependency {\n  id\n  name\n  status\n  updatedAt\n  __typename\n}\n\nfragment StackMinimal on InfrastructureStack {\n  id\n  name\n  type\n  status\n  insertedAt\n  updatedAt\n  deletedAt\n  __typename\n}\n\nfragment ClusterScalingRecommendation on ClusterScalingRecommendation {\n  id\n  namespace\n  name\n  type\n  container\n  cpuCost\n  cpuRequest\n  cpuRecommendation\n  memoryCost\n  memoryRequest\n  memoryRecommendation\n  service {\n    ...ServiceDeploymentTiny\n    cluster {\n      distro\n      provider {\n        id\n        cloud\n        name\n        namespace\n        supportedVersions\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:7f86dda9d3a850b6f1b91c10d6f4132d84182b23d6f7a403671d2946a9ddfb3e": {
         "type": "mutation",
         "name": "MergeService",
         "body": "mutation MergeService($id: ID!, $configuration: [ConfigAttributes]) {\n  mergeService(id: $id, configuration: $configuration) {\n    configuration {\n      name\n      value\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:a7084d9a1d7156c3d0620cdf36e2aa75c53c2f8695f09025e7396e861e3ab888": {
         "type": "mutation",
         "name": "DeleteServiceDeployment",
         "body": "mutation DeleteServiceDeployment($id: ID!) {\n  deleteServiceDeployment(id: $id) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:ead6e5a45db7b2e6445fbcb47075d61f1fd47a42d7a76d6b601389915ef2aab7": {
         "type": "mutation",
         "name": "DetachServiceDeployment",
         "body": "mutation DetachServiceDeployment($id: ID!) {\n  detachServiceDeployment(id: $id) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:35dd214be8b0c227890c22777dd929082d941722eb4b67f8c0a8c0edc4ff0a04": {
         "type": "mutation",
         "name": "RollbackService",
         "body": "mutation RollbackService($id: ID, $revisionId: ID!) {\n  rollbackService(id: $id, revisionId: $revisionId) {\n    ...ServiceDeploymentsRow\n    __typename\n  }\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}"
      },
      "sha256:49fdd8a9e4ef6adeeb936104f7a29208a92105629f69e06990708d12c738eb32": {
         "type": "mutation",
         "name": "ProceedService",
         "body": "mutation ProceedService($id: ID!, $promotion: ServicePromotion) {\n  proceed(id: $id, promotion: $promotion) {\n    ...ServiceDeploymentDetails\n    __typename\n  }\n}\n\nfragment ServiceDeploymentDetails on ServiceDeployment {\n  ...ServiceDeploymentsRow\n  cluster {\n    ...ClusterMinimal\n    operationalLayout {\n      serviceMesh\n      __typename\n    }\n    __typename\n  }\n  namespace\n  message\n  version\n  helm {\n    values\n    valuesFiles\n    __typename\n  }\n  components {\n    ...ServiceDeploymentComponent\n    __typename\n  }\n  contexts {\n    ...ServiceContext\n    __typename\n  }\n  dependencies {\n    ...ServiceDependency\n    __typename\n  }\n  repository {\n    pulledAt\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  imports {\n    stack {\n      ...StackMinimal\n      __typename\n    }\n    __typename\n  }\n  parent {\n    id\n    name\n    cluster {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  scalingRecommendations {\n    ...ClusterScalingRecommendation\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceDeploymentComponent on ServiceComponent {\n  id\n  uid\n  name\n  group\n  kind\n  namespace\n  state\n  synced\n  version\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  content {\n    desired\n    live\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment ServiceContext on ServiceContext {\n  id\n  configuration\n  name\n  project {\n    id\n    name\n    __typename\n  }\n  secrets {\n    name\n    value\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ServiceDependency on ServiceDependency {\n  id\n  name\n  status\n  updatedAt\n  __typename\n}\n\nfragment StackMinimal on InfrastructureStack {\n  id\n  name\n  type\n  status\n  insertedAt\n  updatedAt\n  deletedAt\n  __typename\n}\n\nfragment ClusterScalingRecommendation on ClusterScalingRecommendation {\n  id\n  namespace\n  name\n  type\n  container\n  cpuCost\n  cpuRequest\n  cpuRecommendation\n  memoryCost\n  memoryRequest\n  memoryRecommendation\n  service {\n    ...ServiceDeploymentTiny\n    cluster {\n      distro\n      provider {\n        id\n        cloud\n        name\n        namespace\n        supportedVersions\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:9d9d94f254633deb7c7a6d8deafafdbf1e4374aee7b26a24c674ab1c7fe65abe": {
         "type": "mutation",
         "name": "SelfManage",
         "body": "mutation SelfManage($values: String!) {\n  selfManage(values: $values) {\n    ...ServiceDeploymentsRow\n    __typename\n  }\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}"
      },
      "sha256:af1d09e577101aab4447690a9e9025a7db3256dc8a208c624702c770135ce948": {
         "type": "mutation",
         "name": "KickService",
         "body": "mutation KickService($id: ID!) {\n  kickService(serviceId: $id) {\n    ...ServiceDeploymentsRow\n    __typename\n  }\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}"
      },
      "sha256:3f244cb1e364ffccc0a9c6f317304dcea141795e0d00ff4023d1ebb42600b58c": {
         "type": "query",
         "name": "ServiceDeploymentBindings",
         "body": "query ServiceDeploymentBindings($id: ID!) {\n  serviceDeployment(id: $id) {\n    id\n    ...ServiceDeploymentBindings\n    __typename\n  }\n}\n\nfragment ServiceDeploymentBindings on ServiceDeployment {\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:39b920df42b7b02248bd4077bcf5e718391ac6754b012107cc59629ad4634a12": {
         "type": "query",
         "name": "ServiceStatuses",
         "body": "query ServiceStatuses($clusterId: ID) {\n  serviceStatuses(clusterId: $clusterId) {\n    ...ServiceStatusCount\n    __typename\n  }\n}\n\nfragment ServiceStatusCount on ServiceStatusCount {\n  count\n  status\n  __typename\n}"
      },
      "sha256:e00951c8a23a5d0a7802d20bc6256436b7e6e2c199095528f8c1a6e9e38de1cb": {
         "type": "query",
         "name": "ServiceNetworkGraph",
         "body": "query ServiceNetworkGraph($serviceId: ID!, $time: DateTime) {\n  serviceDeployment(id: $serviceId) {\n    id\n    networkGraph(time: $time) {\n      ...NetworkMeshEdge\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment NetworkMeshEdge on NetworkMeshEdge {\n  id\n  from {\n    ...NetworkMeshWorkload\n    __typename\n  }\n  to {\n    ...NetworkMeshWorkload\n    __typename\n  }\n  statistics {\n    ...NetworkMeshStatistics\n    __typename\n  }\n  __typename\n}\n\nfragment NetworkMeshWorkload on NetworkMeshWorkload {\n  id\n  name\n  namespace\n  service\n  __typename\n}\n\nfragment NetworkMeshStatistics on NetworkMeshStatistics {\n  bytes\n  packets\n  connections\n  http200\n  http400\n  http500\n  httpClientLatency\n  __typename\n}"
      },
      "sha256:447a848f165d7114f7a0d2d274d0e7a5ce213a56670ed825f5718cd87be1828d": {
         "type": "query",
         "name": "ServiceComponentRaw",
         "body": "query ServiceComponentRaw($serviceId: ID!, $componentId: ID, $childId: ID) {\n  serviceDeployment(id: $serviceId) {\n    id\n    rawResource(childId: $childId, componentId: $componentId) {\n      ...UnstructuredResource\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment UnstructuredResource on KubernetesUnstructured {\n  raw\n  metadata {\n    ...Metadata\n    __typename\n  }\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:d6329cd14cce18d735bd6b86101498d9f432fbd6b7ce24d9aa55c68baf57e04f": {
         "type": "query",
         "name": "ComponentTree",
         "body": "query ComponentTree($id: ID!) {\n  componentTree(id: $id) {\n    ...ComponentTree\n    __typename\n  }\n}\n\nfragment ComponentTree on ComponentTree {\n  root {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  edges {\n    from\n    to\n    __typename\n  }\n  certificates {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  configmaps {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  cronjobs {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  daemonsets {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  deployments {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  ingresses {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  secrets {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    __typename\n  }\n  services {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  statefulsets {\n    metadata {\n      ...Metadata\n      __typename\n    }\n    raw\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}"
      },
      "sha256:6d6c60671008c3cf0ffab0ae773ddd849df9ec4f5cd65985cca38d4ecec566c9": {
         "type": "query",
         "name": "ClusterUsages",
         "body": "query ClusterUsages($after: String, $first: Int = 500, $before: String, $last: Int, $q: String, $tagQuery: TagQuery, $projectId: ID) {\n  clusterUsages(\n    after: $after\n    first: $first\n    before: $before\n    last: $last\n    q: $q\n    tagQuery: $tagQuery\n    projectId: $projectId\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ClusterUsageTiny\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClusterUsageTiny on ClusterUsage {\n  id\n  cpu\n  memory\n  gpu\n  storage\n  cpuUtil\n  memUtil\n  cpuCost\n  memoryCost\n  storageCost\n  nodeCost\n  controlPlaneCost\n  ingressCost\n  loadBalancerCost\n  egressCost\n  cluster {\n    ...ClusterTiny\n    project {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:de6baf90761658ed14277d6d2cdfd7fe2642d3a91b836ea052f4bc8723a8d7b4": {
         "type": "query",
         "name": "ClusterUsageHistory",
         "body": "query ClusterUsageHistory($id: ID!, $after: String, $first: Int, $before: String, $last: Int) {\n  clusterUsage(id: $id) {\n    id\n    cpuCost\n    memoryCost\n    storageCost\n    history(after: $after, first: $first, before: $before, last: $last) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...ClusterUsageHistory\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClusterUsageHistory on ClusterUsageHistory {\n  id\n  timestamp\n  cpuCost\n  memoryCost\n  storageCost\n  __typename\n}"
      },
      "sha256:bf3facbe4325ddf2b41d444a6fdd419c233e0eddbfca674fb2542c8ad7c9bdf7": {
         "type": "query",
         "name": "ClusterUsageNamespaces",
         "body": "query ClusterUsageNamespaces($id: ID!, $after: String, $first: Int, $before: String, $last: Int, $q: String) {\n  clusterUsage(id: $id) {\n    id\n    cluster {\n      id\n      name\n      __typename\n    }\n    namespaces(after: $after, first: $first, before: $before, last: $last, q: $q) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...ClusterNamespaceUsage\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClusterNamespaceUsage on ClusterNamespaceUsage {\n  id\n  namespace\n  storage\n  cpuCost\n  cpuUtil\n  cpu\n  memoryCost\n  memUtil\n  memory\n  ingressCost\n  loadBalancerCost\n  egressCost\n  storageCost\n  __typename\n}"
      },
      "sha256:afd47564ac28d66e3158c157aef56d8aebe2006698c20a15dba95638b12a2845": {
         "type": "query",
         "name": "ClusterUsageScalingRecommendations",
         "body": "query ClusterUsageScalingRecommendations($id: ID!, $after: String, $first: Int, $before: String, $last: Int, $q: String, $type: ScalingRecommendationType) {\n  clusterUsage(id: $id) {\n    id\n    cluster {\n      id\n      name\n      __typename\n    }\n    recommendations(\n      after: $after\n      first: $first\n      before: $before\n      last: $last\n      q: $q\n      type: $type\n    ) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...ClusterScalingRecommendation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClusterScalingRecommendation on ClusterScalingRecommendation {\n  id\n  namespace\n  name\n  type\n  container\n  cpuCost\n  cpuRequest\n  cpuRecommendation\n  memoryCost\n  memoryRequest\n  memoryRecommendation\n  service {\n    ...ServiceDeploymentTiny\n    cluster {\n      distro\n      provider {\n        id\n        cloud\n        name\n        namespace\n        supportedVersions\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:14d9d609eea93ac78000b86a33fac8751baa6a501b053f701af7406fcff31492": {
         "type": "query",
         "name": "ProjectUsageHistory",
         "body": "query ProjectUsageHistory($after: String, $first: Int = 365, $before: String, $last: Int) {\n  projectUsageHistory(after: $after, first: $first, before: $before, last: $last) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ProjectUsageHistory\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ProjectUsageHistory on ProjectUsageHistory {\n  timestamp\n  cpu\n  memory\n  gpu\n  storageCost\n  projectId\n  __typename\n}"
      },
      "sha256:157a7cfdc4e399e3e71363ea854fc5b110bd63f46762ad42898d3077e63c29f8": {
         "type": "mutation",
         "name": "SuggestScalingRecommendation",
         "body": "mutation SuggestScalingRecommendation($id: ID!) {\n  suggestScalingRecommendation(id: $id)\n}"
      },
      "sha256:316bec919e64b14f2e5eaaa1c04688bac3807aa9ddd355cbc1472c34f789a554": {
         "type": "mutation",
         "name": "ApplyScalingRecommendation",
         "body": "mutation ApplyScalingRecommendation($id: ID!) {\n  applyScalingRecommendation(id: $id) {\n    ...PullRequest\n    __typename\n  }\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:5eeda734e83bea7fc7a44384fcf11b8653045c7ab14951884a62a7736a7001b9": {
         "type": "query",
         "name": "ClusterRegistration",
         "body": "query ClusterRegistration($id: ID, $machineId: String) {\n  clusterRegistration(id: $id, machineId: $machineId) {\n    ...ClusterRegistration\n    __typename\n  }\n}\n\nfragment ClusterRegistration on ClusterRegistration {\n  id\n  insertedAt\n  updatedAt\n  machineId\n  name\n  handle\n  metadata\n  tags {\n    ...Tag\n    __typename\n  }\n  creator {\n    ...UserTiny\n    __typename\n  }\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  __typename\n}\n\nfragment Tag on Tag {\n  name\n  value\n  __typename\n}\n\nfragment UserTiny on User {\n  name\n  email\n  profile\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:5bf274b82ed4f846fc08dc3b456ff95542f568f776409efed3669fe0e03aac79": {
         "type": "query",
         "name": "ClusterRegistrations",
         "body": "query ClusterRegistrations($after: String, $first: Int, $before: String, $last: Int) {\n  clusterRegistrations(after: $after, first: $first, before: $before, last: $last) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ClusterRegistration\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ClusterRegistration on ClusterRegistration {\n  id\n  insertedAt\n  updatedAt\n  machineId\n  name\n  handle\n  metadata\n  tags {\n    ...Tag\n    __typename\n  }\n  creator {\n    ...UserTiny\n    __typename\n  }\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  __typename\n}\n\nfragment Tag on Tag {\n  name\n  value\n  __typename\n}\n\nfragment UserTiny on User {\n  name\n  email\n  profile\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:2e938c33fd0f28aaf61d604a8c934a08da565b2f883d2d9d478259973df3af9f": {
         "type": "mutation",
         "name": "CreateClusterRegistration",
         "body": "mutation CreateClusterRegistration($attributes: ClusterRegistrationCreateAttributes!) {\n  createClusterRegistration(attributes: $attributes) {\n    ...ClusterRegistration\n    __typename\n  }\n}\n\nfragment ClusterRegistration on ClusterRegistration {\n  id\n  insertedAt\n  updatedAt\n  machineId\n  name\n  handle\n  metadata\n  tags {\n    ...Tag\n    __typename\n  }\n  creator {\n    ...UserTiny\n    __typename\n  }\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  __typename\n}\n\nfragment Tag on Tag {\n  name\n  value\n  __typename\n}\n\nfragment UserTiny on User {\n  name\n  email\n  profile\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:af90c3fe6cefce0bc3573b4d0a0ed9095a85c5aa842bcb688dd7567526b32229": {
         "type": "mutation",
         "name": "UpdateClusterRegistration",
         "body": "mutation UpdateClusterRegistration($id: ID!, $attributes: ClusterRegistrationUpdateAttributes!) {\n  updateClusterRegistration(id: $id, attributes: $attributes) {\n    ...ClusterRegistration\n    __typename\n  }\n}\n\nfragment ClusterRegistration on ClusterRegistration {\n  id\n  insertedAt\n  updatedAt\n  machineId\n  name\n  handle\n  metadata\n  tags {\n    ...Tag\n    __typename\n  }\n  creator {\n    ...UserTiny\n    __typename\n  }\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  __typename\n}\n\nfragment Tag on Tag {\n  name\n  value\n  __typename\n}\n\nfragment UserTiny on User {\n  name\n  email\n  profile\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:605794afc2ae0c8fa9b022a707a8a17eaaf6de1f427fd900938a1b9d349ed60f": {
         "type": "mutation",
         "name": "DeleteClusterRegistration",
         "body": "mutation DeleteClusterRegistration($id: ID!) {\n  deleteClusterRegistration(id: $id) {\n    ...ClusterRegistration\n    __typename\n  }\n}\n\nfragment ClusterRegistration on ClusterRegistration {\n  id\n  insertedAt\n  updatedAt\n  machineId\n  name\n  handle\n  metadata\n  tags {\n    ...Tag\n    __typename\n  }\n  creator {\n    ...UserTiny\n    __typename\n  }\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  __typename\n}\n\nfragment Tag on Tag {\n  name\n  value\n  __typename\n}\n\nfragment UserTiny on User {\n  name\n  email\n  profile\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:aee522205b0e4d720c488b0325fbb34e4155cd163692a8dfaf994a3edbe29313": {
         "type": "query",
         "name": "ClusterISOImages",
         "body": "query ClusterISOImages($after: String, $first: Int, $before: String, $last: Int) {\n  clusterIsoImages(after: $after, first: $first, before: $before, last: $last) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...IsoImage\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment IsoImage on ClusterIsoImage {\n  id\n  user\n  password\n  registry\n  image\n  insertedAt\n  project {\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:82f8927d9d0393ed58418d0193982a212ba8326ba6f7a0ec23e2b9bf2343c3fe": {
         "type": "query",
         "name": "Flows",
         "body": "query Flows($first: Int = 100, $after: String, $q: String) {\n  flows(first: $first, after: $after, q: $q) {\n    edges {\n      node {\n        ...FlowBasicWithBindings\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment FlowBasicWithBindings on Flow {\n  ...FlowBasic\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment FlowBasic on Flow {\n  id\n  name\n  description\n  icon\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:735b13882fee1f568077db4132511384e73864e51e23bd43282b3a2606a63415": {
         "type": "query",
         "name": "Flow",
         "body": "query Flow($id: ID!) {\n  flow(id: $id) {\n    ...FlowBasicWithBindings\n    __typename\n  }\n}\n\nfragment FlowBasicWithBindings on Flow {\n  ...FlowBasic\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment FlowBasic on Flow {\n  id\n  name\n  description\n  icon\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:cd024b2d6b42089019a858d3cd83882d8954e237af1c8c0aa05b98a45a90481e": {
         "type": "query",
         "name": "FlowServices",
         "body": "query FlowServices($id: ID!, $first: Int = 100, $after: String) {\n  flow(id: $id) {\n    id\n    name\n    services(first: $first, after: $after) {\n      ...ServiceDeploymentsConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ServiceDeploymentsConnection on ServiceDeploymentConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...ServiceDeploymentsRow\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}"
      },
      "sha256:18d4c141726f5af3d727c156f3acbfd226dd9293c2cb73e652d5075e6444b96d": {
         "type": "query",
         "name": "FlowPipelines",
         "body": "query FlowPipelines($id: ID!, $first: Int = 100, $after: String) {\n  flow(id: $id) {\n    id\n    pipelines(first: $first, after: $after) {\n      ...PipelineConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PipelineConnection on PipelineConnection {\n  edges {\n    node {\n      ...Pipeline\n      __typename\n    }\n    __typename\n  }\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  __typename\n}\n\nfragment Pipeline on Pipeline {\n  id\n  name\n  insertedAt\n  updatedAt\n  edges {\n    ...PipelineStageEdge\n    __typename\n  }\n  stages {\n    ...PipelineStage\n    __typename\n  }\n  status {\n    ...PipelineStatus\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStageEdge on PipelineStageEdge {\n  id\n  insertedAt\n  promotedAt\n  updatedAt\n  gates {\n    ...PipelineGate\n    __typename\n  }\n  from {\n    ...PipelineStage\n    __typename\n  }\n  to {\n    ...PipelineStage\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineGate on PipelineGate {\n  id\n  name\n  state\n  type\n  cluster {\n    id\n    __typename\n  }\n  approver {\n    ...User\n    __typename\n  }\n  edge {\n    pipeline {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  spec {\n    job {\n      ...JobGateSpec\n      __typename\n    }\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}\n\nfragment PipelineStage on PipelineStage {\n  id\n  name\n  insertedAt\n  updatedAt\n  promotion {\n    ...PipelinePromotion\n    __typename\n  }\n  services {\n    ...StageService\n    __typename\n  }\n  context {\n    ...PipelineContext\n    __typename\n  }\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment PipelinePromotion on PipelinePromotion {\n  id\n  services {\n    ...PromotionService\n    __typename\n  }\n  insertedAt\n  updatedAt\n  promotedAt\n  revisedAt\n  __typename\n}\n\nfragment PromotionService on PromotionService {\n  id\n  revision {\n    ...Revision\n    __typename\n  }\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment Revision on Revision {\n  id\n  git {\n    ref\n    folder\n    __typename\n  }\n  insertedAt\n  updatedAt\n  message\n  sha\n  version\n  __typename\n}\n\nfragment PipelineServiceDeployment on ServiceDeployment {\n  id\n  name\n  namespace\n  cluster {\n    id\n    name\n    __typename\n  }\n  status\n  componentStatus\n  revision {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment StageService on StageService {\n  id\n  criteria {\n    ...PromotionCriteria\n    __typename\n  }\n  insertedAt\n  updatedAt\n  service {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  __typename\n}\n\nfragment PromotionCriteria on PromotionCriteria {\n  id\n  secrets\n  source {\n    ...PipelineServiceDeployment\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment PipelineContext on PipelineContext {\n  id\n  context\n  insertedAt\n  updatedAt\n  pullRequests {\n    ...PullRequest\n    __typename\n  }\n  pipelinePullRequests {\n    ...PipelinePullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment PipelinePullRequest on PipelinePullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  stage {\n    id\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  __typename\n}\n\nfragment PipelineStatus on PipelineStatus {\n  closed\n  pending\n  running\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:d0a4e55223d8033687bfb84f0400ff82abfc72c8bc65a7019e04b7f1bf1d4d36": {
         "type": "query",
         "name": "FlowAlerts",
         "body": "query FlowAlerts($id: ID!, $first: Int = 100, $after: String) {\n  flow(id: $id) {\n    id\n    alerts(first: $first, after: $after) {\n      ...AlertConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment AlertConnection on AlertConnection {\n  edges {\n    node {\n      ...Alert\n      __typename\n    }\n    __typename\n  }\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  __typename\n}\n\nfragment Alert on Alert {\n  id\n  title\n  message\n  type\n  severity\n  state\n  fingerprint\n  url\n  annotations\n  tags {\n    id\n    name\n    value\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  resolution {\n    ...AlertResolution\n    __typename\n  }\n  updatedAt\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AlertResolution on AlertResolution {\n  resolution\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:7bd809baeef4ab9f11ded8d7d9d0fc42835d57b1be3873038e793028d3d4cbfb": {
         "type": "query",
         "name": "FlowPrs",
         "body": "query FlowPrs($id: ID!, $first: Int = 100, $after: String) {\n  flow(id: $id) {\n    id\n    pullRequests(first: $first, after: $after) {\n      ...PullRequestConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PullRequestConnection on PullRequestConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...PullRequest\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:25ec4c64213ec0538c51b8f3ab42b7d390d54cf4eb11309c383259a47877f539": {
         "type": "query",
         "name": "FlowPreviewEnvironmentInstances",
         "body": "query FlowPreviewEnvironmentInstances($id: ID!, $first: Int = 100, $after: String) {\n  flow(id: $id) {\n    id\n    previewEnvironmentInstances(first: $first, after: $after) {\n      ...PreviewEnvironmentInstanceConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PreviewEnvironmentInstanceConnection on PreviewEnvironmentInstanceConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...PreviewEnvironmentInstance\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment PreviewEnvironmentInstance on PreviewEnvironmentInstance {\n  id\n  pullRequest {\n    url\n    __typename\n  }\n  service {\n    ...ServiceDeploymentTiny\n    protect\n    deletedAt\n    __typename\n  }\n  template {\n    id\n    name\n    __typename\n  }\n  updatedAt\n  insertedAt\n  __typename\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:f7d28c05dd3b54a6c7f73fc39dbd7a59b9b87c78637856a24ea20d7db4d46e4d": {
         "type": "query",
         "name": "FlowPreviewEnvironmentTemplates",
         "body": "query FlowPreviewEnvironmentTemplates($id: ID!, $first: Int = 100, $after: String) {\n  flow(id: $id) {\n    id\n    previewEnvironmentTemplates(first: $first, after: $after) {\n      ...PreviewEnvironmentTemplateConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PreviewEnvironmentTemplateConnection on PreviewEnvironmentTemplateConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...PreviewEnvironmentTemplate\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment PreviewEnvironmentTemplate on PreviewEnvironmentTemplate {\n  id\n  name\n  commentTemplate\n  referenceService {\n    id\n    name\n    cluster {\n      id\n      __typename\n    }\n    __typename\n  }\n  template {\n    ...ServiceTemplateWithoutConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceTemplateWithoutConfiguration on ServiceTemplate {\n  contexts\n  dependencies {\n    id\n    name\n    status\n    __typename\n  }\n  git {\n    folder\n    ref\n    __typename\n  }\n  helm {\n    chart\n    git {\n      folder\n      ref\n      __typename\n    }\n    ignoreCrds\n    ignoreHooks\n    release\n    repository {\n      name\n      namespace\n      __typename\n    }\n    set {\n      name\n      value\n      __typename\n    }\n    url\n    values\n    valuesFiles\n    version\n    __typename\n  }\n  kustomize {\n    path\n    enableHelm\n    __typename\n  }\n  name\n  namespace\n  repository {\n    ...GitRepository\n    __typename\n  }\n  repositoryId\n  syncConfig {\n    createNamespace\n    enforceNamespace\n    namespaceMetadata {\n      annotations\n      labels\n      __typename\n    }\n    __typename\n  }\n  templated\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}"
      },
      "sha256:1ea2f1c6408105a455302806e0806f665028aa8e95b5b2eecf5636f5d55fdaf9": {
         "type": "query",
         "name": "FlowMcpServers",
         "body": "query FlowMcpServers($id: ID!) {\n  flow(id: $id) {\n    id\n    servers {\n      ...McpServer\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment McpServer on McpServer {\n  id\n  name\n  url\n  confirm\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  authentication {\n    headers {\n      name\n      value\n      __typename\n    }\n    plural\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:8ee8e0b525612ef4ae4d42aa23e0f27f2c059ea5685076958a5ced20c068d393": {
         "type": "query",
         "name": "FlowVulnerabilityReports",
         "body": "query FlowVulnerabilityReports($id: ID!, $first: Int = 100, $after: String) {\n  flow(id: $id) {\n    id\n    vulnerabilityReports(first: $first, after: $after) {\n      ...VulnerabilityReportConnection\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment VulnerabilityReportConnection on VulnerabilityReportConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...VulnerabilityReportTiny\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment VulnerabilityReportTiny on VulnerabilityReport {\n  id\n  artifactUrl\n  services {\n    service {\n      name\n      __typename\n    }\n    __typename\n  }\n  namespaces {\n    namespace\n    __typename\n  }\n  summary {\n    criticalCount\n    highCount\n    mediumCount\n    lowCount\n    unknownCount\n    noneCount\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:bea8b95a3c2f45d51c5e289599b0e89f9625ea2a2dd5ea8004358c27d6bc5a8f": {
         "type": "mutation",
         "name": "UpsertFlow",
         "body": "mutation UpsertFlow($attributes: FlowAttributes!) {\n  upsertFlow(attributes: $attributes) {\n    ...FlowBasicWithBindings\n    __typename\n  }\n}\n\nfragment FlowBasicWithBindings on Flow {\n  ...FlowBasic\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment FlowBasic on Flow {\n  id\n  name\n  description\n  icon\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a09b82aa5f88dc8d3c70b1fab016979ca8e7191d159847d1f77df6b9f8237011": {
         "type": "query",
         "name": "Groups",
         "body": "query Groups($q: String, $first: Int = 20, $after: String) {\n  groups(q: $q, first: $first, after: $after) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Group\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:87e7370672259c1860502155c18c4805173ed72526be80fdb2f66e123fede83d": {
         "type": "query",
         "name": "SearchGroups",
         "body": "query SearchGroups($q: String, $cursor: String) {\n  groups(q: $q, after: $cursor, first: 5) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Group\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:5e0eb92b26085875f934f94fbac5cfe160a38f2567646476e34b5732f1c94c6d": {
         "type": "query",
         "name": "GroupMembers",
         "body": "query GroupMembers($cursor: String, $id: ID!) {\n  groupMembers(groupId: $id, after: $cursor, first: 20) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...GroupMember\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment GroupMember on GroupMember {\n  user {\n    ...User\n    __typename\n  }\n  group {\n    ...Group\n    __typename\n  }\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:fe2fe78d29340d99010b95dca951c1df77d80c7becdc20faae1a6695d9d0eae7": {
         "type": "mutation",
         "name": "CreateGroupMember",
         "body": "mutation CreateGroupMember($groupId: ID!, $userId: ID!) {\n  createGroupMember(groupId: $groupId, userId: $userId) {\n    ...GroupMember\n    __typename\n  }\n}\n\nfragment GroupMember on GroupMember {\n  user {\n    ...User\n    __typename\n  }\n  group {\n    ...Group\n    __typename\n  }\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:9641d45527d692301d43e9ae5cd508634b3ff2fef0b527d40562487e3767dec2": {
         "type": "mutation",
         "name": "DeleteGroupMember",
         "body": "mutation DeleteGroupMember($groupId: ID!, $userId: ID!) {\n  deleteGroupMember(groupId: $groupId, userId: $userId) {\n    ...GroupMember\n    __typename\n  }\n}\n\nfragment GroupMember on GroupMember {\n  user {\n    ...User\n    __typename\n  }\n  group {\n    ...Group\n    __typename\n  }\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:4ec0f67a2cdb9d2b01a0eb85829389a5b5a34f6dc883358c396e690ddab5cee7": {
         "type": "mutation",
         "name": "CreateGroup",
         "body": "mutation CreateGroup($attributes: GroupAttributes!) {\n  createGroup(attributes: $attributes) {\n    ...Group\n    __typename\n  }\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:68f384f6de6390c2fd8e4b424633bb4a5b6b8ddc31fd256d28131e5ca42612ba": {
         "type": "mutation",
         "name": "UpdateGroup",
         "body": "mutation UpdateGroup($id: ID!, $attributes: GroupAttributes!) {\n  updateGroup(groupId: $id, attributes: $attributes) {\n    ...Group\n    __typename\n  }\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:b94204606a7900ba491cad105259533685b57ce0f0621a48098bdbf7d92ac789": {
         "type": "mutation",
         "name": "DeleteGroup",
         "body": "mutation DeleteGroup($id: ID!) {\n  deleteGroup(groupId: $id) {\n    ...Group\n    __typename\n  }\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:3f200b6a3fafe92d82d26502b98f0684db663d5a50ce59f81c4a57f688c0a58d": {
         "type": "query",
         "name": "ClusterOverviewDetails",
         "body": "query ClusterOverviewDetails($id: ID!, $kubeVersion: String!, $hasKubeVersion: Boolean!) {\n  cluster(id: $id) {\n    ...ClusterOverviewDetails\n    __typename\n  }\n}\n\nfragment ClusterOverviewDetails on Cluster {\n  ...ClustersRow\n  ...ClusterUpgrade\n  ...ClusterInsight\n  nodeStatistics {\n    ...NodeStatistic\n    __typename\n  }\n  __typename\n}\n\nfragment ClustersRow on Cluster {\n  currentVersion\n  id\n  self\n  healthy\n  healthScore\n  protect\n  name\n  handle\n  distro\n  cpuTotal\n  memoryTotal\n  cpuUtil\n  nodeCount\n  namespaceCount\n  availabilityZones\n  podCount\n  memoryUtil\n  installed\n  pingedAt\n  deletedAt\n  provider {\n    id\n    cloud\n    name\n    namespace\n    supportedVersions\n    __typename\n  }\n  self\n  service {\n    id\n    repository {\n      url\n      __typename\n    }\n    __typename\n  }\n  version\n  kubeletVersion\n  tags {\n    name\n    value\n    __typename\n  }\n  distro\n  upgradePlan {\n    ...ClusterUpgradePlan\n    __typename\n  }\n  virtual\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  extendedSupport {\n    extended\n    extendedFrom\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterUpgradePlan on ClusterUpgradePlan {\n  compatibilities\n  deprecations\n  incompatibilities\n  kubeletSkew\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ClusterUpgrade on Cluster {\n  ...ClusterRuntimeServices\n  prAutomations {\n    id\n    __typename\n  }\n  deprecatedCustomResources {\n    ...ClusterUpgradeDeprecatedCustomResource\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterRuntimeServices on Cluster {\n  id\n  name\n  currentVersion\n  version\n  runtimeServices {\n    ...RuntimeService\n    __typename\n  }\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  upgradeInsights {\n    ...UpgradeInsight\n    __typename\n  }\n  cloudAddons {\n    ...CloudAddon\n    __typename\n  }\n  __typename\n}\n\nfragment RuntimeService on RuntimeService {\n  id\n  name\n  version\n  addon {\n    icon\n    versions {\n      ...AddonVersion\n      __typename\n    }\n    __typename\n  }\n  service {\n    git {\n      ref\n      folder\n      __typename\n    }\n    repository {\n      httpsPath\n      urlFormat\n      __typename\n    }\n    helm {\n      version\n      __typename\n    }\n    __typename\n  }\n  addonVersion {\n    ...AddonVersionBlocking @include(if: $hasKubeVersion)\n    ...AddonVersion\n    __typename\n  }\n  __typename\n}\n\nfragment AddonVersion on AddonVersion {\n  version\n  kube\n  chartVersion\n  incompatibilities {\n    version\n    name\n    __typename\n  }\n  requirements {\n    version\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment AddonVersionBlocking on AddonVersion {\n  blocking(kubeVersion: $kubeVersion)\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment UpgradeInsight on UpgradeInsight {\n  id\n  name\n  description\n  details {\n    ...UpgradeInsightDetail\n    __typename\n  }\n  refreshedAt\n  transitionedAt\n  version\n  status\n  __typename\n}\n\nfragment UpgradeInsightDetail on UpgradeInsightDetail {\n  id\n  removedIn\n  replacedIn\n  replacement\n  status\n  used\n  clientInfo {\n    ...InsightClientInfo\n    __typename\n  }\n  __typename\n}\n\nfragment InsightClientInfo on InsightClientInfo {\n  userAgent\n  count\n  lastRequestAt\n  __typename\n}\n\nfragment CloudAddon on CloudAddon {\n  id\n  insertedAt\n  updatedAt\n  name\n  distro\n  info {\n    name\n    publisher\n    versions {\n      version\n      compatibilities\n      ...CloudAddonVersionInformation @include(if: $hasKubeVersion)\n      __typename\n    }\n    __typename\n  }\n  version\n  versionInfo {\n    version\n    compatibilities\n    ...CloudAddonVersionInformation @include(if: $hasKubeVersion)\n    __typename\n  }\n  __typename\n}\n\nfragment CloudAddonVersionInformation on CloudAddonVersionInformation {\n  blocking(kubeVersion: $kubeVersion)\n  __typename\n}\n\nfragment ClusterUpgradeDeprecatedCustomResource on DeprecatedCustomResource {\n  name\n  group\n  kind\n  namespace\n  version\n  nextVersion\n  __typename\n}\n\nfragment ClusterInsight on Cluster {\n  id\n  insight {\n    ...AiInsight\n    __typename\n  }\n  insightComponents {\n    ...ClusterInsightComponent\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment ClusterInsightComponent on ClusterInsightComponent {\n  id\n  kind\n  name\n  namespace\n  group\n  version\n  priority\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment NodeStatistic on NodeStatistic {\n  id\n  name\n  pendingPods\n  health\n  cluster {\n    id\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:1225b5ef3c2d595c46bacc27710f9a3231a853da068a706edf1074998e1d52a1": {
         "type": "query",
         "name": "UpgradeStatistics",
         "body": "query UpgradeStatistics($projectId: ID, $tag: TagInput) {\n  upgradeStatistics(projectId: $projectId, tag: $tag) {\n    ...UpgradeStatistics\n    __typename\n  }\n}\n\nfragment UpgradeStatistics on UpgradeStatistics {\n  upgradeable\n  count\n  latest\n  compliant\n  __typename\n}"
      },
      "sha256:7106532e0826c2faba1dc4042d09a58c765abe8a9f2b9e2d77b4057efc9a5582": {
         "type": "query",
         "name": "ClusterHealthScores",
         "body": "query ClusterHealthScores($projectId: ID) {\n  clusters(projectId: $projectId, first: 1000) {\n    edges {\n      node {\n        ...ClusterHealthScore\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ClusterHealthScore on Cluster {\n  id\n  name\n  healthScore\n  __typename\n}"
      },
      "sha256:8256c066432b683b1a1ac1cc30bb57dfc3f7de0bd02504c89b95b9a1305eec34": {
         "type": "query",
         "name": "KubernetesClusters",
         "body": "query KubernetesClusters($projectId: ID) {\n  clusters(first: 200, projectId: $projectId) {\n    edges {\n      node {\n        ...KubernetesCluster\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment KubernetesCluster on Cluster {\n  ...ClusterTiny\n  project {\n    ...ProjectTiny\n    __typename\n  }\n  pinnedCustomResources {\n    ...PinnedCustomResource\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}\n\nfragment PinnedCustomResource on PinnedCustomResource {\n  id\n  name\n  kind\n  version\n  group\n  cluster {\n    ...ClusterTiny\n    __typename\n  }\n  displayName\n  namespaced\n  __typename\n}"
      },
      "sha256:17a5f1ed7f35620304a028cde33750a7f2793f6b284ad01d8656d64ac6dfcdd4": {
         "type": "query",
         "name": "KubernetesClusterAuditLogs",
         "body": "query KubernetesClusterAuditLogs($clusterId: ID, $first: Int, $after: String, $before: String, $last: Int) {\n  cluster(id: $clusterId) {\n    auditLogs(first: $first, last: $last, after: $after, before: $before) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          id\n          insertedAt\n          method\n          path\n          actor {\n            name\n            email\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:0d8898a80b3ebf3509e6c71a603a9ed1bd9182b56c1093bd1c3af4f6d3416166": {
         "type": "mutation",
         "name": "PinCustomResource",
         "body": "mutation PinCustomResource($attributes: PinnedCustomResourceAttributes!) {\n  createPinnedCustomResource(attributes: $attributes) {\n    ...PinnedCustomResource\n    __typename\n  }\n}\n\nfragment PinnedCustomResource on PinnedCustomResource {\n  id\n  name\n  kind\n  version\n  group\n  cluster {\n    ...ClusterTiny\n    __typename\n  }\n  displayName\n  namespaced\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:ba503432a126bc57aea319c73ab75be86defaf2da68d79007861ea7669bf9d40": {
         "type": "mutation",
         "name": "UnpinCustomResource",
         "body": "mutation UnpinCustomResource($id: ID!) {\n  deletePinnedCustomResource(id: $id) {\n    ...PinnedCustomResource\n    __typename\n  }\n}\n\nfragment PinnedCustomResource on PinnedCustomResource {\n  id\n  name\n  kind\n  version\n  group\n  cluster {\n    ...ClusterTiny\n    __typename\n  }\n  displayName\n  namespaced\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:2e65d722420e122c2e06a1da5562a7744f6eecc9be31069102497c67eda88b00": {
         "type": "query",
         "name": "ArgoRollout",
         "body": "query ArgoRollout($name: String!, $namespace: String!, $serviceId: ID) {\n  argoRollout(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...ArgoRollout\n    __typename\n  }\n}\n\nfragment ArgoRollout on ArgoRollout {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    ...ArgoRolloutStatus\n    __typename\n  }\n  spec {\n    ...ArgoRolloutSpec\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  pods {\n    ...Pod\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment ArgoRolloutStatus on ArgoRolloutStatus {\n  abort\n  phase\n  replicas\n  readyReplicas\n  pauseConditions {\n    reason\n    startTime\n    __typename\n  }\n  conditions {\n    message\n    reason\n    status\n    type\n    __typename\n  }\n  __typename\n}\n\nfragment ArgoRolloutSpec on ArgoRolloutSpec {\n  replicas\n  strategy {\n    blueGreen {\n      activeService\n      autoPromotionEnabled\n      autoPromotionSeconds\n      __typename\n    }\n    canary {\n      steps {\n        analysis {\n          templates {\n            templateName\n            __typename\n          }\n          __typename\n        }\n        experiment {\n          templates {\n            name\n            __typename\n          }\n          __typename\n        }\n        pause {\n          duration\n          __typename\n        }\n        setWeight\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}"
      },
      "sha256:128007dc91f4f0cf2bcf097e2bcf70dfe2a859e2018eae1f254960291f8a72d4": {
         "type": "query",
         "name": "Canary",
         "body": "query Canary($name: String!, $namespace: String!, $serviceId: ID) {\n  canary(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...Canary\n    __typename\n  }\n}\n\nfragment Canary on Canary {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    ...CanaryStatus\n    __typename\n  }\n  spec {\n    ...CanarySpec\n    __typename\n  }\n  raw\n  canaryDeployment {\n    ...Deployment\n    __typename\n  }\n  primaryDeployment {\n    ...Deployment\n    __typename\n  }\n  ingress {\n    ...Ingress\n    __typename\n  }\n  ingressCanary {\n    ...Ingress\n    __typename\n  }\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment CanaryStatus on CanaryStatus {\n  failedChecks\n  canaryWeight\n  iterations\n  phase\n  conditions {\n    ...StatusCondition\n    __typename\n  }\n  __typename\n}\n\nfragment StatusCondition on StatusCondition {\n  message\n  reason\n  status\n  type\n  __typename\n}\n\nfragment CanarySpec on CanarySpec {\n  provider\n  analysis {\n    interval\n    maxWeight\n    stepWeight\n    stepWeights\n    threshold\n    __typename\n  }\n  __typename\n}\n\nfragment Deployment on Deployment {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    availableReplicas\n    replicas\n    unavailableReplicas\n    conditions {\n      ...StatusCondition\n      __typename\n    }\n    __typename\n  }\n  spec {\n    replicas\n    strategy {\n      type\n      __typename\n    }\n    __typename\n  }\n  raw\n  pods {\n    ...Pod\n    __typename\n  }\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}\n\nfragment Ingress on Ingress {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    loadBalancer {\n      ingress {\n        ip\n        hostname\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  spec {\n    ingressClassName\n    tls {\n      hosts\n      __typename\n    }\n    rules {\n      host\n      http {\n        paths {\n          path\n          backend {\n            serviceName\n            servicePort\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  certificates {\n    ...Certificate\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Certificate on Certificate {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    ...CertificateStatus\n    __typename\n  }\n  spec {\n    ...CertificateSpec\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment CertificateStatus on CertificateStatus {\n  renewalTime\n  notBefore\n  notAfter\n  conditions {\n    ...StatusCondition\n    __typename\n  }\n  __typename\n}\n\nfragment CertificateSpec on CertificateSpec {\n  dnsNames\n  secretName\n  issuerRef {\n    group\n    kind\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:6f126439ec5b5dcf8ff4cc6937801e510902eb0d57e54326e91b4168655817bb": {
         "type": "query",
         "name": "Certificate",
         "body": "query Certificate($name: String!, $namespace: String!, $serviceId: ID) {\n  certificate(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...Certificate\n    __typename\n  }\n}\n\nfragment Certificate on Certificate {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    ...CertificateStatus\n    __typename\n  }\n  spec {\n    ...CertificateSpec\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment CertificateStatus on CertificateStatus {\n  renewalTime\n  notBefore\n  notAfter\n  conditions {\n    ...StatusCondition\n    __typename\n  }\n  __typename\n}\n\nfragment StatusCondition on StatusCondition {\n  message\n  reason\n  status\n  type\n  __typename\n}\n\nfragment CertificateSpec on CertificateSpec {\n  dnsNames\n  secretName\n  issuerRef {\n    group\n    kind\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:bc5342b28a72d35d91dc4a4d8f7278a0fdea23631d3f905cb19a8cbe78549d70": {
         "type": "query",
         "name": "CronJob",
         "body": "query CronJob($name: String!, $namespace: String!, $serviceId: ID) {\n  cronJob(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...CronJob\n    __typename\n  }\n}\n\nfragment CronJob on CronJob {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    lastScheduleTime\n    __typename\n  }\n  spec {\n    schedule\n    suspend\n    concurrencyPolicy\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  jobs {\n    ...CronJobJob\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}\n\nfragment CronJobJob on Job {\n  metadata {\n    name\n    namespace\n    __typename\n  }\n  status {\n    ...JobStatus\n    __typename\n  }\n  __typename\n}\n\nfragment JobStatus on JobStatus {\n  active\n  completionTime\n  succeeded\n  failed\n  startTime\n  __typename\n}"
      },
      "sha256:b28ac9ad0471edd1e2c710c03805b2f6c759a6da6011089d3286776b51c67227": {
         "type": "query",
         "name": "DaemonSet",
         "body": "query DaemonSet($name: String!, $namespace: String!, $serviceId: ID) {\n  daemonSet(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...DaemonSet\n    __typename\n  }\n}\n\nfragment DaemonSet on DaemonSet {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    ...DaemonSetStatus\n    __typename\n  }\n  spec {\n    ...DaemonSetSpec\n    __typename\n  }\n  pods {\n    ...Pod\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment DaemonSetStatus on DaemonSetStatus {\n  currentNumberScheduled\n  desiredNumberScheduled\n  numberReady\n  __typename\n}\n\nfragment DaemonSetSpec on DaemonSetSpec {\n  strategy {\n    type\n    __typename\n  }\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:84690fc2f21934c7abbb4dc9eac6ec9cafc4da075f3663df99e88a7a75f00961": {
         "type": "query",
         "name": "Deployment",
         "body": "query Deployment($name: String!, $namespace: String!, $serviceId: ID) {\n  deployment(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...Deployment\n    __typename\n  }\n}\n\nfragment Deployment on Deployment {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    availableReplicas\n    replicas\n    unavailableReplicas\n    conditions {\n      ...StatusCondition\n      __typename\n    }\n    __typename\n  }\n  spec {\n    replicas\n    strategy {\n      type\n      __typename\n    }\n    __typename\n  }\n  raw\n  pods {\n    ...Pod\n    __typename\n  }\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment StatusCondition on StatusCondition {\n  message\n  reason\n  status\n  type\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:da701e23a054480e855e2897464936475ae41d30e4f6b680ca6bc17133c35b12": {
         "type": "query",
         "name": "Ingress",
         "body": "query Ingress($name: String!, $namespace: String!, $serviceId: ID) {\n  ingress(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...Ingress\n    __typename\n  }\n}\n\nfragment Ingress on Ingress {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    loadBalancer {\n      ingress {\n        ip\n        hostname\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  spec {\n    ingressClassName\n    tls {\n      hosts\n      __typename\n    }\n    rules {\n      host\n      http {\n        paths {\n          path\n          backend {\n            serviceName\n            servicePort\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  certificates {\n    ...Certificate\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment Certificate on Certificate {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    ...CertificateStatus\n    __typename\n  }\n  spec {\n    ...CertificateSpec\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment CertificateStatus on CertificateStatus {\n  renewalTime\n  notBefore\n  notAfter\n  conditions {\n    ...StatusCondition\n    __typename\n  }\n  __typename\n}\n\nfragment StatusCondition on StatusCondition {\n  message\n  reason\n  status\n  type\n  __typename\n}\n\nfragment CertificateSpec on CertificateSpec {\n  dnsNames\n  secretName\n  issuerRef {\n    group\n    kind\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:1e006fae181e1fb779ecabb6f036bc76d7ef16ea75484e87a135b81c2e907869": {
         "type": "query",
         "name": "Job",
         "body": "query Job($name: String!, $namespace: String!, $serviceId: ID) {\n  job(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...Job\n    __typename\n  }\n}\n\nfragment Job on Job {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    ...JobStatus\n    __typename\n  }\n  spec {\n    backoffLimit\n    parallelism\n    activeDeadlineSeconds\n    __typename\n  }\n  pods {\n    ...Pod\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment JobStatus on JobStatus {\n  active\n  completionTime\n  succeeded\n  failed\n  startTime\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:46a851f3805f5d87cba71e1ce569fca8f8f74ec6527692ede139e66198799ade": {
         "type": "mutation",
         "name": "DeleteJob",
         "body": "mutation DeleteJob($name: String!, $namespace: String!) {\n  deleteJob(name: $name, namespace: $namespace) {\n    ...Job\n    __typename\n  }\n}\n\nfragment Job on Job {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    ...JobStatus\n    __typename\n  }\n  spec {\n    backoffLimit\n    parallelism\n    activeDeadlineSeconds\n    __typename\n  }\n  pods {\n    ...Pod\n    __typename\n  }\n  raw\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment JobStatus on JobStatus {\n  active\n  completionTime\n  succeeded\n  failed\n  startTime\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:39ad7e8d83ebe6fb284d5f8e73f8d30e76ab1237e5af743513b33e806feda317": {
         "type": "query",
         "name": "Node",
         "body": "query Node($name: String!, $clusterId: ID) {\n  node(name: $name, clusterId: $clusterId) {\n    ...Node\n    __typename\n  }\n}\n\nfragment Node on Node {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    allocatable\n    capacity\n    conditions {\n      type\n      status\n      message\n      __typename\n    }\n    __typename\n  }\n  spec {\n    podCidr\n    providerId\n    __typename\n  }\n  raw\n  pods {\n    ...Pod\n    __typename\n  }\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:3f5de5e1ce139623e05acfd2a71d31156f84d2d60bafbd7a7000c8c61ff31a1f": {
         "type": "query",
         "name": "NodeMetric",
         "body": "query NodeMetric($name: String!, $clusterId: ID) {\n  nodeMetric(name: $name, clusterId: $clusterId) {\n    ...NodeMetric\n    __typename\n  }\n}\n\nfragment NodeMetric on NodeMetric {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  usage {\n    cpu\n    memory\n    __typename\n  }\n  timestamp\n  window\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}"
      },
      "sha256:014259eb257c25f6f4b47705de4bd02f2e76ef5b70d0b98c007b5b81bf2c74ba": {
         "type": "query",
         "name": "PluralServiceDeployment",
         "body": "query PluralServiceDeployment($name: String!, $namespace: String!, $serviceId: ID) {\n  pluralServiceDeployment(\n    name: $name\n    namespace: $namespace\n    serviceId: $serviceId\n  ) {\n    ...PluralServiceDeployment\n    __typename\n  }\n}\n\nfragment PluralServiceDeployment on PluralServiceDeployment {\n  events {\n    ...Event\n    __typename\n  }\n  metadata {\n    ...Metadata\n    __typename\n  }\n  reference {\n    ...ServiceDeploymentDetails\n    __typename\n  }\n  status {\n    ...PluralObjectStatus\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment ServiceDeploymentDetails on ServiceDeployment {\n  ...ServiceDeploymentsRow\n  cluster {\n    ...ClusterMinimal\n    operationalLayout {\n      serviceMesh\n      __typename\n    }\n    __typename\n  }\n  namespace\n  message\n  version\n  helm {\n    values\n    valuesFiles\n    __typename\n  }\n  components {\n    ...ServiceDeploymentComponent\n    __typename\n  }\n  contexts {\n    ...ServiceContext\n    __typename\n  }\n  dependencies {\n    ...ServiceDependency\n    __typename\n  }\n  repository {\n    pulledAt\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  imports {\n    stack {\n      ...StackMinimal\n      __typename\n    }\n    __typename\n  }\n  parent {\n    id\n    name\n    cluster {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alerts(first: 500) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  scalingRecommendations {\n    ...ClusterScalingRecommendation\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentsRow on ServiceDeployment {\n  id\n  name\n  protect\n  promotion\n  message\n  git {\n    ref\n    folder\n    __typename\n  }\n  helm {\n    chart\n    version\n    url\n    repository {\n      namespace\n      name\n      __typename\n    }\n    __typename\n  }\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  helmRepository {\n    spec {\n      url\n      __typename\n    }\n    status {\n      ready\n      message\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    __typename\n  }\n  insertedAt\n  updatedAt\n  deletedAt\n  componentStatus\n  status\n  errors {\n    message\n    source\n    warning\n    __typename\n  }\n  globalService {\n    id\n    name\n    __typename\n  }\n  dryRun\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ServiceDeploymentComponent on ServiceComponent {\n  id\n  uid\n  name\n  group\n  kind\n  namespace\n  state\n  synced\n  version\n  apiDeprecations {\n    ...ApiDeprecation\n    __typename\n  }\n  content {\n    desired\n    live\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment ApiDeprecation on ApiDeprecation {\n  availableIn\n  blocking\n  component {\n    group\n    version\n    kind\n    name\n    namespace\n    service {\n      git {\n        ref\n        folder\n        __typename\n      }\n      repository {\n        httpsPath\n        urlFormat\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecatedIn\n  removedIn\n  replacement\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment ServiceContext on ServiceContext {\n  id\n  configuration\n  name\n  project {\n    id\n    name\n    __typename\n  }\n  secrets {\n    name\n    value\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ServiceDependency on ServiceDependency {\n  id\n  name\n  status\n  updatedAt\n  __typename\n}\n\nfragment StackMinimal on InfrastructureStack {\n  id\n  name\n  type\n  status\n  insertedAt\n  updatedAt\n  deletedAt\n  __typename\n}\n\nfragment ClusterScalingRecommendation on ClusterScalingRecommendation {\n  id\n  namespace\n  name\n  type\n  container\n  cpuCost\n  cpuRequest\n  cpuRecommendation\n  memoryCost\n  memoryRequest\n  memoryRecommendation\n  service {\n    ...ServiceDeploymentTiny\n    cluster {\n      distro\n      provider {\n        id\n        cloud\n        name\n        namespace\n        supportedVersions\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment ServiceDeploymentTiny on ServiceDeployment {\n  id\n  name\n  cluster {\n    ...ClusterMinimal\n    __typename\n  }\n  componentStatus\n  status\n  errors {\n    message\n    source\n    __typename\n  }\n  __typename\n}\n\nfragment PluralObjectStatus on PluralObjectStatus {\n  id\n  conditions {\n    ...StatusCondition\n    __typename\n  }\n  __typename\n}\n\nfragment StatusCondition on StatusCondition {\n  message\n  reason\n  status\n  type\n  __typename\n}"
      },
      "sha256:f73e1079248998491b617fd431959b9e986e2e43740bae44771630a90a3a6fb3": {
         "type": "query",
         "name": "Pod",
         "body": "query Pod($name: String!, $namespace: String!, $clusterId: ID, $serviceId: ID) {\n  pod(\n    name: $name\n    namespace: $namespace\n    clusterId: $clusterId\n    serviceId: $serviceId\n  ) {\n    ...PodWithEvents\n    __typename\n  }\n}\n\nfragment PodWithEvents on Pod {\n  ...Pod\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:5cec436dbcbf3f3fcc12eb0cf4f7b282ab2721f945f0b76d304a97a52df1006d": {
         "type": "query",
         "name": "PodLogs",
         "body": "query PodLogs($name: String!, $namespace: String!, $clusterId: ID, $serviceId: ID, $container: String!, $sinceSeconds: Int!) {\n  pod(\n    name: $name\n    namespace: $namespace\n    clusterId: $clusterId\n    serviceId: $serviceId\n  ) {\n    logs(container: $container, sinceSeconds: $sinceSeconds)\n    __typename\n  }\n}"
      },
      "sha256:6a62cb5133eeaf65a2d999cd2055c68c2faa0d6a62b3e42cbadf2250b673f01c": {
         "type": "mutation",
         "name": "DeletePod",
         "body": "mutation DeletePod($name: String!, $namespace: String!, $serviceId: ID) {\n  deletePod(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...Pod\n    __typename\n  }\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}"
      },
      "sha256:dcd95db5cc9b7232fdd4ca5f69876e687f7ffdb798ec4507fd309f99b18da050": {
         "type": "query",
         "name": "Service",
         "body": "query Service($name: String!, $namespace: String!, $serviceId: ID) {\n  service(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...Service\n    __typename\n  }\n}\n\nfragment Service on Service {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    loadBalancer {\n      ingress {\n        ip\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  spec {\n    type\n    clusterIp\n    ports {\n      name\n      protocol\n      port\n      targetPort\n      __typename\n    }\n    __typename\n  }\n  raw\n  pods {\n    ...Pod\n    __typename\n  }\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:596246e8845bd509de5fa4303d959bd0e6e77a5e89e443706d6a2058ba317295": {
         "type": "query",
         "name": "StatefulSet",
         "body": "query StatefulSet($name: String!, $namespace: String!, $serviceId: ID) {\n  statefulSet(name: $name, namespace: $namespace, serviceId: $serviceId) {\n    ...StatefulSet\n    __typename\n  }\n}\n\nfragment StatefulSet on StatefulSet {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    replicas\n    currentReplicas\n    readyReplicas\n    updatedReplicas\n    conditions {\n      ...StatusCondition\n      __typename\n    }\n    __typename\n  }\n  spec {\n    replicas\n    serviceName\n    __typename\n  }\n  raw\n  pods {\n    ...Pod\n    __typename\n  }\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment StatusCondition on StatusCondition {\n  message\n  reason\n  status\n  type\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:6d82653cb4f358e0a56a5da21db985431bb7ad7ebaf3f17551c5e0e2b086a168": {
         "type": "query",
         "name": "UnstructuredResource",
         "body": "query UnstructuredResource($group: String, $kind: String!, $name: String!, $namespace: String, $serviceId: ID!, $version: String!) {\n  unstructuredResource(\n    group: $group\n    kind: $kind\n    name: $name\n    namespace: $namespace\n    serviceId: $serviceId\n    version: $version\n  ) {\n    ...UnstructuredResource\n    __typename\n  }\n}\n\nfragment UnstructuredResource on KubernetesUnstructured {\n  raw\n  metadata {\n    ...Metadata\n    __typename\n  }\n  events {\n    ...Event\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment Event on Event {\n  action\n  lastTimestamp\n  count\n  message\n  reason\n  type\n  __typename\n}"
      },
      "sha256:e81d942d0ef0e9fc4bfa76f92964f5c8f093ba918002345d7bc8b6f3cbf99987": {
         "type": "query",
         "name": "Subscription",
         "body": "query Subscription {\n  account {\n    ...Account\n    __typename\n  }\n}\n\nfragment Account on Account {\n  grandfatheredUntil\n  delinquentAt\n  availableFeatures {\n    audits\n    userManagement\n    databaseManagement\n    __typename\n  }\n  subscription {\n    id\n    plan {\n      id\n      name\n      period\n      __typename\n    }\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a50f25e8e3b273958072fd876f946dbc5986dbf56d181a209054f37ee504c700": {
         "type": "query",
         "name": "MeGroups",
         "body": "query MeGroups {\n  me {\n    id\n    groups {\n      ...Group\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:2fd313bc3ec702ce8e32ba2b7d7c640b32d6a5b77b820944b5f34d668d675c2f": {
         "type": "query",
         "name": "Me",
         "body": "query Me {\n  me {\n    ...User\n    boundRoles {\n      ...Role\n      __typename\n    }\n    unreadNotifications\n    __typename\n  }\n  clusterInfo {\n    version\n    platform\n    gitCommit\n    __typename\n  }\n  configuration {\n    gitCommit\n    isDemoProject\n    isSandbox\n    pluralLogin\n    byok\n    externalOidc\n    cloud\n    installed\n    consoleVersion\n    sentryEnabled\n    manifest {\n      ...Manifest\n      __typename\n    }\n    gitStatus {\n      cloned\n      output\n      __typename\n    }\n    features {\n      ...AvailableFeatures\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment Role on Role {\n  id\n  name\n  description\n  repositories\n  permissions\n  roleBindings {\n    ...RoleBinding\n    __typename\n  }\n  __typename\n}\n\nfragment RoleBinding on RoleBinding {\n  id\n  user {\n    ...User\n    __typename\n  }\n  group {\n    ...Group\n    __typename\n  }\n  __typename\n}\n\nfragment Group on Group {\n  id\n  name\n  description\n  global\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment Manifest on PluralManifest {\n  network {\n    pluralDns\n    subdomain\n    __typename\n  }\n  cluster\n  bucketPrefix\n  __typename\n}\n\nfragment AvailableFeatures on AvailableFeatures {\n  audits\n  cd\n  databaseManagement\n  userManagement\n  __typename\n}"
      },
      "sha256:9ed81dd4c1ab018de19146e0696f8db0f57ff0c6c45c7cb73669dbad2a1f2e27": {
         "type": "query",
         "name": "LoginInfo",
         "body": "query LoginInfo($redirect: String) {\n  loginInfo(redirect: $redirect) {\n    oidcUri\n    external\n    oidcName\n    __typename\n  }\n}"
      },
      "sha256:6d60aff167fe667beb4442c6a8ab95282355123819a8aeb895e6ed5b5ee9f3dd": {
         "type": "query",
         "name": "Invite",
         "body": "query Invite($id: String!) {\n  invite(id: $id) {\n    email\n    __typename\n  }\n}"
      },
      "sha256:74bddd19be06f2bb136b50428f3e1aa164c6fd5b0672ab8d5cc00fb8f253280c": {
         "type": "query",
         "name": "Refresh",
         "body": "query Refresh($token: String!) {\n  refresh(token: $token) {\n    ...User\n    jwt\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:1a86a28c3a8f487c82ecd13bc604675bc7b98c0162b0e095d39f34dc747b6c29": {
         "type": "query",
         "name": "TemporaryToken",
         "body": "query TemporaryToken {\n  temporaryToken\n}"
      },
      "sha256:eb16abaadffcceb8e80f51f39dff5aa61cad1b2ae84a28d4eb328a8ece9d98c5": {
         "type": "mutation",
         "name": "signIn",
         "body": "mutation signIn($email: String!, $password: String!) {\n  signIn(email: $email, password: $password) {\n    ...User\n    jwt\n    refreshToken {\n      ...RefreshToken\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment RefreshToken on RefreshToken {\n  id\n  token\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:5b54867a950d0cdfa6a785f31f4d5bd629cec3795b02a3d485bf301d55cc9273": {
         "type": "mutation",
         "name": "OauthCallback",
         "body": "mutation OauthCallback($code: String!, $redirect: String, $state: String) {\n  oauthCallback(code: $code, redirect: $redirect, state: $state) {\n    jwt\n    refreshToken {\n      ...RefreshToken\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RefreshToken on RefreshToken {\n  id\n  token\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:34c10ec13a8baa638df7da476ade69b4932f8f731f570539deaab939d50c055e": {
         "type": "mutation",
         "name": "Logout",
         "body": "mutation Logout {\n  logout {\n    ...User\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:f7df41d198018a19c2c6d3e579761e65d2a60ea5cee59bde3cd3b18b6503d139": {
         "type": "mutation",
         "name": "SignUp",
         "body": "mutation SignUp($inviteId: String!, $attributes: UserAttributes!) {\n  signup(inviteId: $inviteId, attributes: $attributes) {\n    ...User\n    jwt\n    refreshToken {\n      ...RefreshToken\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment RefreshToken on RefreshToken {\n  id\n  token\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:ffbc639442d51279b060f8e55aeabca566b8811de733bbe300f96c38257131af": {
         "type": "mutation",
         "name": "LoginLink",
         "body": "mutation LoginLink($key: String!) {\n  loginLink(key: $key) {\n    ...User\n    jwt\n    refreshToken {\n      ...RefreshToken\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment RefreshToken on RefreshToken {\n  id\n  token\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:7032522405d97aca3e5668708b81bb3c8c0b6674c3831214657e57b7db21c18d": {
         "type": "query",
         "name": "LogAggregation",
         "body": "query LogAggregation($clusterId: ID, $limit: Int, $query: String, $serviceId: ID, $time: LogTimeRange, $facets: [LogFacetInput]) {\n  logAggregation(\n    clusterId: $clusterId\n    limit: $limit\n    query: $query\n    serviceId: $serviceId\n    time: $time\n    facets: $facets\n  ) {\n    ...LogLine\n    __typename\n  }\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}"
      },
      "sha256:d86d6daf39197ee5434862f7fe0b278a785a959a1ec0c86634d7af08735d43f3": {
         "type": "query",
         "name": "ClusterHeatMap",
         "body": "query ClusterHeatMap($clusterId: ID!, $flavor: HeatMapFlavor!) {\n  cluster(id: $clusterId) {\n    id\n    heatMap(flavor: $flavor) {\n      ...UtilizationHeatMap\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment UtilizationHeatMap on UtilizationHeatMap {\n  cpu {\n    ...MetricPointResponse\n    __typename\n  }\n  memory {\n    ...MetricPointResponse\n    __typename\n  }\n  __typename\n}\n\nfragment MetricPointResponse on MetricPointResponse {\n  metric\n  value {\n    timestamp\n    value\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a8594843d676496208d1a6b9bf00b04e055c2fd4e885223cf8283b287aa644d4": {
         "type": "query",
         "name": "ClusterNoisyNeighbors",
         "body": "query ClusterNoisyNeighbors($clusterId: ID!) {\n  cluster(id: $clusterId) {\n    id\n    noisyNeighbors {\n      ...UtilizationHeatMap\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment UtilizationHeatMap on UtilizationHeatMap {\n  cpu {\n    ...MetricPointResponse\n    __typename\n  }\n  memory {\n    ...MetricPointResponse\n    __typename\n  }\n  __typename\n}\n\nfragment MetricPointResponse on MetricPointResponse {\n  metric\n  value {\n    timestamp\n    value\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:0ccb995cd04e3e650628d07fb79c84de09d54da87a631757ad46759bf058b143": {
         "type": "query",
         "name": "ServiceHeatMap",
         "body": "query ServiceHeatMap($serviceId: ID!, $flavor: HeatMapFlavor!) {\n  serviceDeployment(id: $serviceId) {\n    id\n    heatMap(flavor: $flavor) {\n      ...UtilizationHeatMap\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment UtilizationHeatMap on UtilizationHeatMap {\n  cpu {\n    ...MetricPointResponse\n    __typename\n  }\n  memory {\n    ...MetricPointResponse\n    __typename\n  }\n  __typename\n}\n\nfragment MetricPointResponse on MetricPointResponse {\n  metric\n  value {\n    timestamp\n    value\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:612d068d4227e6b2c6d591591228637cab0f5a7b4b5c80be0465aa18da5ca889": {
         "type": "mutation",
         "name": "UpsertNotificationRouter",
         "body": "mutation UpsertNotificationRouter($attributes: NotificationRouterAttributes!) {\n  upsertNotificationRouter(attributes: $attributes) {\n    ...NotificationRouter\n    __typename\n  }\n}\n\nfragment NotificationRouter on NotificationRouter {\n  id\n  name\n  sinks {\n    ...NotificationSink\n    __typename\n  }\n  events\n  filters {\n    ...NotificationFilter\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment NotificationSink on NotificationSink {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  configuration {\n    ...SinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment SinkConfiguration on SinkConfiguration {\n  id\n  slack {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  teams {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment UrlSinkConfiguration on UrlSinkConfiguration {\n  url\n  __typename\n}\n\nfragment NotificationFilter on NotificationFilter {\n  id\n  cluster {\n    id\n    name\n    __typename\n  }\n  pipeline {\n    id\n    name\n    __typename\n  }\n  regex\n  service {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:01eb7a76b82746b18673129dfadf5904d68ba17f49e9090589916704c2ea85e2": {
         "type": "query",
         "name": "NotificationRouters",
         "body": "query NotificationRouters($first: Int = 100, $after: String) {\n  notificationRouters(first: $first, after: $after) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...NotificationRouter\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment NotificationRouter on NotificationRouter {\n  id\n  name\n  sinks {\n    ...NotificationSink\n    __typename\n  }\n  events\n  filters {\n    ...NotificationFilter\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment NotificationSink on NotificationSink {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  configuration {\n    ...SinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment SinkConfiguration on SinkConfiguration {\n  id\n  slack {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  teams {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment UrlSinkConfiguration on UrlSinkConfiguration {\n  url\n  __typename\n}\n\nfragment NotificationFilter on NotificationFilter {\n  id\n  cluster {\n    id\n    name\n    __typename\n  }\n  pipeline {\n    id\n    name\n    __typename\n  }\n  regex\n  service {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:88d8c24e259a0cf06d79cf0522f325ce71db05263f4821081cabf79d087289a7": {
         "type": "mutation",
         "name": "DeleteNotificationRouter",
         "body": "mutation DeleteNotificationRouter($id: ID!) {\n  deleteNotificationRouter(id: $id) {\n    ...NotificationRouter\n    __typename\n  }\n}\n\nfragment NotificationRouter on NotificationRouter {\n  id\n  name\n  sinks {\n    ...NotificationSink\n    __typename\n  }\n  events\n  filters {\n    ...NotificationFilter\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment NotificationSink on NotificationSink {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  configuration {\n    ...SinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment SinkConfiguration on SinkConfiguration {\n  id\n  slack {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  teams {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment UrlSinkConfiguration on UrlSinkConfiguration {\n  url\n  __typename\n}\n\nfragment NotificationFilter on NotificationFilter {\n  id\n  cluster {\n    id\n    name\n    __typename\n  }\n  pipeline {\n    id\n    name\n    __typename\n  }\n  regex\n  service {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a7c5685126e1fe99db277df4ef91fa905ac422ce86d29cbea2f1b03256191b37": {
         "type": "mutation",
         "name": "UpsertNotificationSink",
         "body": "mutation UpsertNotificationSink($attributes: NotificationSinkAttributes!) {\n  upsertNotificationSink(attributes: $attributes) {\n    ...NotificationSink\n    __typename\n  }\n}\n\nfragment NotificationSink on NotificationSink {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  configuration {\n    ...SinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment SinkConfiguration on SinkConfiguration {\n  id\n  slack {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  teams {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment UrlSinkConfiguration on UrlSinkConfiguration {\n  url\n  __typename\n}"
      },
      "sha256:45f19b3f435fac5f4799454cd897f761f15490639efd2e832f04de2599cba439": {
         "type": "mutation",
         "name": "DeleteNotificationSink",
         "body": "mutation DeleteNotificationSink($id: ID!) {\n  deleteNotificationSink(id: $id) {\n    ...NotificationSink\n    __typename\n  }\n}\n\nfragment NotificationSink on NotificationSink {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  configuration {\n    ...SinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment SinkConfiguration on SinkConfiguration {\n  id\n  slack {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  teams {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment UrlSinkConfiguration on UrlSinkConfiguration {\n  url\n  __typename\n}"
      },
      "sha256:9285adfdb4f76ada05a7362399ab6fa6bf487eb340fbf6a4ebdf42ca5bded4c9": {
         "type": "query",
         "name": "NotificationSinks",
         "body": "query NotificationSinks($q: String, $first: Int = 100, $after: String) {\n  notificationSinks(q: $q, first: $first, after: $after) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...NotificationSink\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment NotificationSink on NotificationSink {\n  id\n  name\n  type\n  insertedAt\n  updatedAt\n  configuration {\n    ...SinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment SinkConfiguration on SinkConfiguration {\n  id\n  slack {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  teams {\n    ...UrlSinkConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment UrlSinkConfiguration on UrlSinkConfiguration {\n  url\n  __typename\n}"
      },
      "sha256:d8d3ddac611fdc95d0e60b37d54ba84031edaac701c088d0dbe93e308311cef5": {
         "type": "query",
         "name": "UnreadAppNotifications",
         "body": "query UnreadAppNotifications {\n  unreadAppNotifications\n}"
      },
      "sha256:ab0486cf7fb13a664263bb24f7391a022c0617c2769ba1f1171f2881e2d1879d": {
         "type": "query",
         "name": "AppNotifications",
         "body": "query AppNotifications($after: String, $first: Int, $before: String, $last: Int) {\n  appNotifications(after: $after, first: $first, before: $before, last: $last) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...AppNotification\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment AppNotification on AppNotification {\n  id\n  insertedAt\n  updatedAt\n  readAt\n  priority\n  text\n  __typename\n}"
      },
      "sha256:95f6ce9894ed9efaf149361ad0b53d59ce6856d07c017e49756d01a7b4a2ed6c": {
         "type": "mutation",
         "name": "ReadAppNotifications",
         "body": "mutation ReadAppNotifications {\n  readAppNotifications\n}"
      },
      "sha256:f5e44a9442d119a1603558650974127189f16a3d450847d90f449980761832e4": {
         "type": "query",
         "name": "OIDCConsent",
         "body": "query OIDCConsent($challenge: String!) {\n  oidcConsent(challenge: $challenge) {\n    consent {\n      requestedScope\n      skip\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:83e784531360f366a7be17e75fa3f6fd10f2deddbb1bffaf793a80a86df81e69": {
         "type": "mutation",
         "name": "Consent",
         "body": "mutation Consent($challenge: String!, $scopes: [String]) {\n  oauthConsent(challenge: $challenge, scopes: $scopes) {\n    redirectTo\n    __typename\n  }\n}"
      },
      "sha256:10341386491d012cc3617c6b7f9b95d0c18e92e70e50e0d32a6a5e5f92266888": {
         "type": "mutation",
         "name": "AcceptLogin",
         "body": "mutation AcceptLogin($challenge: String!) {\n  acceptLogin(challenge: $challenge) {\n    redirectTo\n    __typename\n  }\n}"
      },
      "sha256:3c919d2297b1cc1c01941a370e144b8474c3d7252dd10a13f1351fde804d0fcc": {
         "type": "query",
         "name": "OidcProviders",
         "body": "query OidcProviders($after: String, $first: Int = 100, $before: String, $last: Int, $q: String) {\n  oidcProviders(after: $after, first: $first, before: $before, last: $last, q: $q) {\n    edges {\n      node {\n        ...OidcProvider\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OidcProvider on OidcProvider {\n  id\n  name\n  description\n  authMethod\n  redirectUris\n  clientId\n  clientSecret\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}"
      },
      "sha256:8c60b84d93a1f5aa2eabaa4403094bcc8b55a494f5e4719165bcf2faf6e99775": {
         "type": "mutation",
         "name": "CreateOidcProvider",
         "body": "mutation CreateOidcProvider($type: OidcProviderType!, $attributes: OidcProviderAttributes!) {\n  createOidcProvider(type: $type, attributes: $attributes) {\n    ...OidcProvider\n    __typename\n  }\n}\n\nfragment OidcProvider on OidcProvider {\n  id\n  name\n  description\n  authMethod\n  redirectUris\n  clientId\n  clientSecret\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:67cba603a48c3ae44a0d6c75f0ea89bf853ea6e3f4e5c817489d53f8ed68bdd0": {
         "type": "mutation",
         "name": "UpdateOidcProvider",
         "body": "mutation UpdateOidcProvider($type: OidcProviderType!, $id: ID!, $attributes: OidcProviderAttributes!) {\n  updateOidcProvider(type: $type, id: $id, attributes: $attributes) {\n    ...OidcProvider\n    __typename\n  }\n}\n\nfragment OidcProvider on OidcProvider {\n  id\n  name\n  description\n  authMethod\n  redirectUris\n  clientId\n  clientSecret\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:065cf1b5e8dbe32ab1114083123fcaf70fb837d9dbb9e1ab0f9f503f346bd2b3": {
         "type": "mutation",
         "name": "DeleteOidcProvider",
         "body": "mutation DeleteOidcProvider($type: OidcProviderType!, $id: ID!) {\n  deleteOidcProvider(type: $type, id: $id) {\n    ...OidcProvider\n    __typename\n  }\n}\n\nfragment OidcProvider on OidcProvider {\n  id\n  name\n  description\n  authMethod\n  redirectUris\n  clientId\n  clientSecret\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:7f7725221ba62afabb1a9494a6435aa5742a0bdeaa5a7a7c7e7919575537ab51": {
         "type": "query",
         "name": "Personas",
         "body": "query Personas($cursor: String) {\n  personas(first: 3, after: $cursor) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Persona\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:180589fc07b51cb6f33065973e85f11f8abb64d32862a3064ac334c0fea87e16": {
         "type": "mutation",
         "name": "CreatePersona",
         "body": "mutation CreatePersona($attributes: PersonaAttributes!) {\n  createPersona(attributes: $attributes) {\n    ...Persona\n    __typename\n  }\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:cc31d769bd4a2ddd217641db4e6b7fbeb4391f74868368444c98b5b380f6715f": {
         "type": "mutation",
         "name": "UpdatePersona",
         "body": "mutation UpdatePersona($id: ID!, $attributes: PersonaAttributes!) {\n  updatePersona(id: $id, attributes: $attributes) {\n    ...Persona\n    __typename\n  }\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:64d9a872560e68bc3983417b9cf49dcd1504d646dbbb5831be126ebcee13a212": {
         "type": "mutation",
         "name": "DeletePersona",
         "body": "mutation DeletePersona($id: ID!) {\n  deletePersona(id: $id) {\n    ...Persona\n    __typename\n  }\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:7c67f70779aeb618ebe58db325683e0bdf9d819c63be99f06832a7e4023972cf": {
         "type": "query",
         "name": "PolicyConstraints",
         "body": "query PolicyConstraints($after: String, $before: String, $clusters: [ID], $first: Int, $kind: String, $kinds: [String], $last: Int, $namespace: String, $namespaces: [String], $q: String, $violated: Boolean) {\n  policyConstraints(\n    after: $after\n    before: $before\n    clusters: $clusters\n    first: $first\n    kind: $kind\n    kinds: $kinds\n    last: $last\n    namespace: $namespace\n    namespaces: $namespaces\n    q: $q\n    violated: $violated\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...PolicyConstraint\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment PolicyConstraint on PolicyConstraint {\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  description\n  id\n  insertedAt\n  name\n  recommendation\n  ref {\n    kind\n    name\n    __typename\n  }\n  updatedAt\n  violationCount\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:a61bf5c265b08cccdb8817c16fee7abda4415905065f39bae7d89d65e0dfddcf": {
         "type": "query",
         "name": "PolicyConstraint",
         "body": "query PolicyConstraint($id: ID!) {\n  policyConstraint(id: $id) {\n    ...PolicyConstraint\n    object {\n      metadata {\n        namespace\n        __typename\n      }\n      kind\n      __typename\n    }\n    violations {\n      group\n      id\n      insertedAt\n      kind\n      message\n      name\n      namespace\n      updatedAt\n      version\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PolicyConstraint on PolicyConstraint {\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  description\n  id\n  insertedAt\n  name\n  recommendation\n  ref {\n    kind\n    name\n    __typename\n  }\n  updatedAt\n  violationCount\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:6ff766955779557a6e335a0b2724f888f03f15c594c691b6fec414601547c808": {
         "type": "query",
         "name": "ViolationStatistics",
         "body": "query ViolationStatistics($field: ConstraintViolationField!) {\n  violationStatistics(field: $field) {\n    count\n    value\n    violations\n    __typename\n  }\n}"
      },
      "sha256:13227cc91df0a0757f355514593cd2ae456a0ce411878b765f043fae4eee854f": {
         "type": "query",
         "name": "PolicyStatistics",
         "body": "query PolicyStatistics($aggregate: PolicyAggregate!, $clusters: [ID], $kind: String, $kinds: [String], $namespace: String, $namespaces: [String], $q: String) {\n  policyStatistics(\n    aggregate: $aggregate\n    clusters: $clusters\n    kind: $kind\n    kinds: $kinds\n    namespace: $namespace\n    namespaces: $namespaces\n    q: $q\n  ) {\n    count\n    aggregate\n    __typename\n  }\n}"
      },
      "sha256:c5e7cf193c87ae1cfe53bb44d4a4688bc475cf80a27bdba1409aa4f294864c54": {
         "type": "query",
         "name": "ComplianceReportGenerators",
         "body": "query ComplianceReportGenerators($after: String, $before: String, $first: Int, $last: Int) {\n  complianceReportGenerators(\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ComplianceReportGenerator\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ComplianceReportGenerator on ComplianceReportGenerator {\n  id\n  name\n  format\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:21f57fa56d7470cd944fc7c0a1c9994c7a248e076362f0e258c986a843bac5e8": {
         "type": "query",
         "name": "ComplianceReportGenerator",
         "body": "query ComplianceReportGenerator($id: ID, $name: String) {\n  complianceReportGenerator(id: $id, name: $name) {\n    ...ComplianceReportGenerator\n    __typename\n  }\n}\n\nfragment ComplianceReportGenerator on ComplianceReportGenerator {\n  id\n  name\n  format\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:3cecf449eae88713bb265fa78aeca0576b1861480727f6290cc18f9df622a1ae": {
         "type": "mutation",
         "name": "UpsertComplianceReportGenerator",
         "body": "mutation UpsertComplianceReportGenerator($attributes: ComplianceReportGeneratorAttributes!) {\n  upsertComplianceReportGenerator(attributes: $attributes) {\n    ...ComplianceReportGenerator\n    __typename\n  }\n}\n\nfragment ComplianceReportGenerator on ComplianceReportGenerator {\n  id\n  name\n  format\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:b653fd2dd4ad4674f0ec2ee34f4c49fb5fadf00750558834b62c5e7a8125b84f": {
         "type": "mutation",
         "name": "DeleteComplianceReport",
         "body": "mutation DeleteComplianceReport($id: ID!) {\n  deleteComplianceReportGenerator(id: $id) {\n    ...ComplianceReportGenerator\n    __typename\n  }\n}\n\nfragment ComplianceReportGenerator on ComplianceReportGenerator {\n  id\n  name\n  format\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:ddaddcb4bfc26a5dc72bcac15dd3e851bee7dc5143d6b69207df9440761b89b4": {
         "type": "query",
         "name": "ComplianceReports",
         "body": "query ComplianceReports($id: ID, $name: String, $after: String, $before: String, $first: Int, $last: Int) {\n  complianceReportGenerator(id: $id, name: $name) {\n    complianceReports(after: $after, before: $before, first: $first, last: $last) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...ComplianceReport\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ComplianceReport on ComplianceReports {\n  insertedAt\n  id\n  name\n  sha256\n  __typename\n}"
      },
      "sha256:ee00909a96b9516ee691b5fa62a0821e36146a4cc92fec36b217351147618c50": {
         "type": "query",
         "name": "Projects",
         "body": "query Projects($after: String, $before: String, $first: Int = 100, $last: Int, $q: String) {\n  projects(after: $after, before: $before, first: $first, last: $last, q: $q) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...Project\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment Project on Project {\n  id\n  insertedAt\n  updatedAt\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:7cb24e9ce6d31296196ec15a6dcf2de203a241d4cdaebebfca2a2e81c6c0cab6": {
         "type": "query",
         "name": "ProjectsTiny",
         "body": "query ProjectsTiny($after: String, $before: String, $first: Int = 100, $last: Int, $q: String) {\n  projects(after: $after, before: $before, first: $first, last: $last, q: $q) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...ProjectTiny\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment ProjectTiny on Project {\n  id\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:3ee2135f3e87e26075fa23444f53e027129bb4fe4983635242481ba2e9f8c971": {
         "type": "query",
         "name": "Project",
         "body": "query Project($id: ID, $name: String) {\n  project(id: $id, name: $name) {\n    ...Project\n    __typename\n  }\n}\n\nfragment Project on Project {\n  id\n  insertedAt\n  updatedAt\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:1bf42433346dfebd9b0fe8b643a692bdaea3a0bd54304651fba892587a072907": {
         "type": "query",
         "name": "ProjectBindings",
         "body": "query ProjectBindings($id: ID!) {\n  project(id: $id) {\n    ...ProjectBindings\n    __typename\n  }\n}\n\nfragment ProjectBindings on Project {\n  readBindings {\n    ...PolicyBinding\n    __typename\n  }\n  writeBindings {\n    ...PolicyBinding\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:ab8ec4fdf55287f1fcf1166bf06f7f940f9d0e092a9d8ed6938b866e5c26da4b": {
         "type": "mutation",
         "name": "CreateProject",
         "body": "mutation CreateProject($attributes: ProjectAttributes!) {\n  createProject(attributes: $attributes) {\n    ...Project\n    __typename\n  }\n}\n\nfragment Project on Project {\n  id\n  insertedAt\n  updatedAt\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:23cfc4c611663c1d1a9cc4d4df44b21b3c4983b9ce5f158eed89b8f84ef4cd78": {
         "type": "mutation",
         "name": "UpdateProject",
         "body": "mutation UpdateProject($id: ID!, $attributes: ProjectAttributes!) {\n  updateProject(id: $id, attributes: $attributes) {\n    ...Project\n    __typename\n  }\n}\n\nfragment Project on Project {\n  id\n  insertedAt\n  updatedAt\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:48f9c4ef8e210074a13db8e2d77012e2a539cf04418c0a615e57531ec649a1ee": {
         "type": "mutation",
         "name": "DeleteProject",
         "body": "mutation DeleteProject($id: ID!) {\n  deleteProject(id: $id) {\n    ...Project\n    __typename\n  }\n}\n\nfragment Project on Project {\n  id\n  insertedAt\n  updatedAt\n  name\n  default\n  description\n  __typename\n}"
      },
      "sha256:b4ab744f8d5aeb72a323756efad14ad2f72845d037426504850863308b8113a6": {
         "type": "mutation",
         "name": "UpdateRbac",
         "body": "mutation UpdateRbac($serviceId: ID, $clusterId: ID, $pipelineId: ID, $stackId: ID, $projectId: ID, $flowId: ID, $serverId: ID, $rbac: RbacAttributes!) {\n  updateRbac(\n    serviceId: $serviceId\n    clusterId: $clusterId\n    pipelineId: $pipelineId\n    stackId: $stackId\n    projectId: $projectId\n    flowId: $flowId\n    serverId: $serverId\n    rbac: $rbac\n  )\n}"
      },
      "sha256:ffc642846f2e3b10c6f3018f6ca16117164a21778e552afea3860c3d3ea12c26": {
         "type": "query",
         "name": "ServiceAccounts",
         "body": "query ServiceAccounts($q: String, $first: Int = 100, $after: String) {\n  serviceAccounts(q: $q, first: $first, after: $after) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...User\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:f3d898dfa3516e78334c46386e1f358b818e2cdbb0763df5204c65e2abf4f9d0": {
         "type": "mutation",
         "name": "CreateServiceAccount",
         "body": "mutation CreateServiceAccount($attributes: ServiceAccountAttributes!) {\n  createServiceAccount(attributes: $attributes) {\n    ...User\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:7f85c1f14dace614778d230fedfef99e2b3583d1701e1394ac7a1f3c30c4c417": {
         "type": "mutation",
         "name": "UpdateServiceAccount",
         "body": "mutation UpdateServiceAccount($id: ID!, $attributes: ServiceAccountAttributes!) {\n  updateServiceAccount(id: $id, attributes: $attributes) {\n    ...User\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:6a02d1237938649ab7ab7a9e1795bf5abf7c5e600f0972fef4b79eadd49925e8": {
         "type": "query",
         "name": "StackPrs",
         "body": "query StackPrs($id: ID!, $after: String, $before: String, $first: Int = 100, $last: Int) {\n  infrastructureStack(id: $id) {\n    id\n    pullRequests(after: $after, before: $before, first: $first, last: $last) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...PullRequest\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:f2a6f0a3f52144674a66c7d2188b7510876d362516d9c38e82b7417026b58e85": {
         "type": "query",
         "name": "Stacks",
         "body": "query Stacks($q: String, $after: String, $before: String, $first: Int = 100, $last: Int, $projectId: ID, $tagQuery: TagQuery) {\n  infrastructureStacks(\n    q: $q\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n    projectId: $projectId\n    tagQuery: $tagQuery\n  ) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...StackTiny\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment StackTiny on InfrastructureStack {\n  id\n  insertedAt\n  updatedAt\n  deletedAt\n  name\n  type\n  repository {\n    url\n    pulledAt\n    __typename\n  }\n  paused\n  status\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:c6d73ec5be5d3105b5501915a95fb5b2fcc26d95151a3965c5a5eecc5690cb58": {
         "type": "query",
         "name": "Stack",
         "body": "query Stack($id: ID!) {\n  infrastructureStack(id: $id) {\n    ...Stack\n    __typename\n  }\n}\n\nfragment Stack on InfrastructureStack {\n  id\n  insertedAt\n  deletedAt\n  name\n  type\n  deleteRun {\n    ...StackRun\n    __typename\n  }\n  configuration {\n    image\n    version\n    terraform {\n      parallelism\n      refresh\n      __typename\n    }\n    __typename\n  }\n  repository {\n    id\n    url\n    pulledAt\n    __typename\n  }\n  git {\n    ref\n    folder\n    __typename\n  }\n  cluster {\n    ...ClusterTiny\n    __typename\n  }\n  paused\n  status\n  approval\n  variables\n  environment {\n    name\n    value\n    secret\n    __typename\n  }\n  jobSpec {\n    namespace\n    raw\n    annotations\n    labels\n    serviceAccount\n    containers {\n      image\n      args\n      env {\n        value\n        name\n        __typename\n      }\n      envFrom {\n        secret\n        configMap\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  tags {\n    name\n    value\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  policyEngine {\n    type\n    maxSeverity\n    __typename\n  }\n  __typename\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}"
      },
      "sha256:402e4e05af3bf1666a9dc683d795d95f95fc669b3349de537f00bc69c4e0475e": {
         "type": "query",
         "name": "StackTiny",
         "body": "query StackTiny($id: ID!) {\n  infrastructureStack(id: $id) {\n    ...StackTiny\n    __typename\n  }\n}\n\nfragment StackTiny on InfrastructureStack {\n  id\n  insertedAt\n  updatedAt\n  deletedAt\n  name\n  type\n  repository {\n    url\n    pulledAt\n    __typename\n  }\n  paused\n  status\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:5fcda8d15a37cc387c757f045f8a413475ae9e2c9c73c09ccf9e0dcf46e51089": {
         "type": "query",
         "name": "StackState",
         "body": "query StackState($id: ID!) {\n  infrastructureStack(id: $id) {\n    state {\n      id\n      plan\n      state {\n        name\n        identifier\n        configuration\n        links\n        resource\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:5961d97482b12758f72b618ba6fb89905d083538bc40a86089042f45c22eba52": {
         "type": "query",
         "name": "StackOutput",
         "body": "query StackOutput($id: ID!) {\n  infrastructureStack(id: $id) {\n    output {\n      name\n      secret\n      value\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:48af20d6b4cb9650839fdce21a8d520adff0b2f06bb25b800f7ba68b79aff337": {
         "type": "query",
         "name": "StackFiles",
         "body": "query StackFiles($id: ID!) {\n  infrastructureStack(id: $id) {\n    files {\n      path\n      content\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:bf2dad4be30b0c88ddd1617bcfc97d96a03e9af394bc6f151185e6a5274a3afd": {
         "type": "query",
         "name": "StackBindings",
         "body": "query StackBindings($id: ID!) {\n  infrastructureStack(id: $id) {\n    writeBindings {\n      ...PolicyBinding\n      __typename\n    }\n    readBindings {\n      ...PolicyBinding\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:ac735908730445e914f3544df0bf250521be7e5b130d46a8fab5ba0ba197b9cf": {
         "type": "query",
         "name": "StackRuns",
         "body": "query StackRuns($id: ID!, $after: String, $before: String, $first: Int = 100, $last: Int, $pullRequestId: ID) {\n  infrastructureStack(id: $id) {\n    id\n    runs(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      pullRequestId: $pullRequestId\n    ) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...StackRun\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:4b3be55449746a913766b64bca29cfbc8c6b3976bfe7911e383b45a774d13613": {
         "type": "query",
         "name": "StackRun",
         "body": "query StackRun($id: ID!) {\n  stackRun(id: $id) {\n    ...StackRunDetails\n    __typename\n  }\n}\n\nfragment StackRunDetails on StackRun {\n  id\n  status\n  updatedAt\n  insertedAt\n  type\n  message\n  approval\n  approvedAt\n  approver {\n    ...User\n    __typename\n  }\n  cancellationReason\n  stack {\n    name\n    deleteRun {\n      id\n      __typename\n    }\n    observableMetrics {\n      ...ObservableMetric\n      __typename\n    }\n    __typename\n  }\n  configuration {\n    ...StackConfiguration\n    __typename\n  }\n  state {\n    ...StackState\n    __typename\n  }\n  repository {\n    ...GitRepository\n    __typename\n  }\n  git {\n    files\n    ref\n    folder\n    __typename\n  }\n  pullRequest {\n    ...PullRequest\n    __typename\n  }\n  output {\n    ...StackOutput\n    __typename\n  }\n  cluster {\n    ...ClusterTiny\n    __typename\n  }\n  environment {\n    ...StackEnvironment\n    __typename\n  }\n  errors {\n    ...ServiceErrors\n    __typename\n  }\n  files {\n    ...StackFile\n    __typename\n  }\n  jobSpec {\n    ...JobGateSpec\n    __typename\n  }\n  steps {\n    ...RunStep\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  violations {\n    ...StackPolicyViolation\n    __typename\n  }\n  policyEngine {\n    type\n    maxSeverity\n    __typename\n  }\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}\n\nfragment ObservableMetric on ObservableMetric {\n  provider {\n    name\n    type\n    __typename\n  }\n  identifier\n  __typename\n}\n\nfragment StackConfiguration on StackConfiguration {\n  version\n  image\n  terraform {\n    parallelism\n    refresh\n    __typename\n  }\n  __typename\n}\n\nfragment StackState on StackState {\n  id\n  plan\n  state {\n    ...StackStateResource\n    __typename\n  }\n  __typename\n}\n\nfragment StackStateResource on StackStateResource {\n  name\n  resource\n  identifier\n  links\n  configuration\n  __typename\n}\n\nfragment GitRepository on GitRepository {\n  id\n  url\n  health\n  authMethod\n  editable\n  error\n  insertedAt\n  pulledAt\n  updatedAt\n  urlFormat\n  httpsPath\n  __typename\n}\n\nfragment PullRequest on PullRequest {\n  id\n  service {\n    id\n    name\n    protect\n    deletedAt\n    __typename\n  }\n  cluster {\n    ...ClusterBasic\n    __typename\n  }\n  title\n  url\n  labels\n  creator\n  status\n  patch\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment ClusterBasic on Cluster {\n  ...ClusterTiny\n  protect\n  deletedAt\n  version\n  currentVersion\n  __typename\n}\n\nfragment ClusterTiny on Cluster {\n  ...ClusterMinimal\n  self\n  upgradePlan {\n    compatibilities\n    deprecations\n    incompatibilities\n    __typename\n  }\n  virtual\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}\n\nfragment StackOutput on StackOutput {\n  name\n  value\n  secret\n  __typename\n}\n\nfragment StackEnvironment on StackEnvironment {\n  name\n  value\n  secret\n  __typename\n}\n\nfragment ServiceErrors on ServiceError {\n  source\n  message\n  warning\n  __typename\n}\n\nfragment StackFile on StackFile {\n  path\n  content\n  __typename\n}\n\nfragment JobGateSpec on JobGateSpec {\n  annotations\n  containers {\n    ...ContainerSpec\n    __typename\n  }\n  labels\n  namespace\n  raw\n  serviceAccount\n  __typename\n}\n\nfragment ContainerSpec on ContainerSpec {\n  args\n  env {\n    name\n    value\n    __typename\n  }\n  envFrom {\n    configMap\n    secret\n    __typename\n  }\n  image\n  __typename\n}\n\nfragment RunStep on RunStep {\n  id\n  name\n  insertedAt\n  updatedAt\n  status\n  stage\n  args\n  cmd\n  index\n  logs {\n    id\n    updatedAt\n    insertedAt\n    logs\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment StackPolicyViolation on StackPolicyViolation {\n  id\n  insertedAt\n  resolution\n  severity\n  policyUrl\n  policyModule\n  policyId\n  description\n  title\n  causes {\n    filename\n    resource\n    start\n    end\n    lines {\n      line\n      content\n      first\n      last\n      __typename\n    }\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:b8ebed5490d200787498b0e9b15ced3e18549735ccf7076421cf0f44cef4c672": {
         "type": "query",
         "name": "StackRunJob",
         "body": "query StackRunJob($id: ID!) {\n  stackRun(id: $id) {\n    job {\n      ...PipelineGateJob\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PipelineGateJob on Job {\n  events {\n    action\n    count\n    eventTime\n    lastTimestamp\n    message\n    reason\n    type\n    __typename\n  }\n  metadata {\n    ...Metadata\n    __typename\n  }\n  pods {\n    ...Pod\n    __typename\n  }\n  raw\n  spec {\n    activeDeadlineSeconds\n    backoffLimit\n    parallelism\n    __typename\n  }\n  status {\n    active\n    completionTime\n    failed\n    startTime\n    succeeded\n    __typename\n  }\n  __typename\n}\n\nfragment Metadata on Metadata {\n  uid\n  name\n  namespace\n  labels {\n    name\n    value\n    __typename\n  }\n  annotations {\n    name\n    value\n    __typename\n  }\n  creationTimestamp\n  __typename\n}\n\nfragment Pod on Pod {\n  metadata {\n    ...Metadata\n    __typename\n  }\n  status {\n    phase\n    podIp\n    reason\n    containerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    initContainerStatuses {\n      ...ContainerStatus\n      __typename\n    }\n    conditions {\n      lastProbeTime\n      lastTransitionTime\n      message\n      reason\n      status\n      type\n      __typename\n    }\n    __typename\n  }\n  spec {\n    nodeName\n    serviceAccountName\n    containers {\n      ...Container\n      __typename\n    }\n    initContainers {\n      ...Container\n      __typename\n    }\n    __typename\n  }\n  raw\n  __typename\n}\n\nfragment ContainerStatus on ContainerStatus {\n  restartCount\n  ready\n  name\n  state {\n    running {\n      startedAt\n      __typename\n    }\n    terminated {\n      exitCode\n      message\n      reason\n      __typename\n    }\n    waiting {\n      message\n      reason\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment Container on Container {\n  name\n  image\n  ports {\n    containerPort\n    protocol\n    __typename\n  }\n  resources {\n    ...Resources\n    __typename\n  }\n  __typename\n}\n\nfragment Resources on Resources {\n  limits {\n    ...ResourceSpec\n    __typename\n  }\n  requests {\n    ...ResourceSpec\n    __typename\n  }\n  __typename\n}\n\nfragment ResourceSpec on ResourceSpec {\n  cpu\n  memory\n  __typename\n}"
      },
      "sha256:322532d6458af0562011395c402ee6feb059fc91e04e750af6b6e3c41f773afa": {
         "type": "query",
         "name": "StackRunJobLogs",
         "body": "query StackRunJobLogs($id: ID!, $container: String!, $sinceSeconds: Int!) {\n  stackRun(id: $id) {\n    job {\n      logs(container: $container, sinceSeconds: $sinceSeconds)\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:b8afd2d441411b2efea72702739afa979b83b11105f24de7c2b33d8fb74b5b46": {
         "type": "query",
         "name": "CustomStackRuns",
         "body": "query CustomStackRuns($id: ID!, $after: String, $before: String, $first: Int = 100, $last: Int) {\n  infrastructureStack(id: $id) {\n    id\n    customStackRuns(after: $after, before: $before, first: $first, last: $last) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...CustomStackRun\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment CustomStackRun on CustomStackRun {\n  id\n  name\n  documentation\n  commands {\n    args\n    cmd\n    __typename\n  }\n  configuration {\n    ...PrConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PrConfiguration on PrConfiguration {\n  condition {\n    field\n    operation\n    value\n    __typename\n  }\n  values\n  default\n  documentation\n  displayName\n  longform\n  name\n  optional\n  placeholder\n  type\n  page\n  __typename\n}"
      },
      "sha256:58b7593ddff11452ce5a77793c718020ebe4d2d7624d7380fc27dae4e69a3e94": {
         "type": "mutation",
         "name": "CreateStack",
         "body": "mutation CreateStack($attributes: StackAttributes!) {\n  createStack(attributes: $attributes) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:70ccd6f3bdff83d0ebe71062e06367f9732a82a3b744b7496770a66ae0e283e9": {
         "type": "mutation",
         "name": "CreateOnDemandRun",
         "body": "mutation CreateOnDemandRun($stackId: ID!, $context: Json, $commands: [CommandAttributes]) {\n  onDemandRun(stackId: $stackId, context: $context, commands: $commands) {\n    ...StackRun\n    __typename\n  }\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:8c6a28b9d076fb7c1108858fb510879c73559968ebcbbb3289d3f9b97424fc10": {
         "type": "mutation",
         "name": "UpdateStack",
         "body": "mutation UpdateStack($id: ID!, $attributes: StackAttributes!) {\n  updateStack(id: $id, attributes: $attributes) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:571cc13a2e75928e7217b81ab4a7e24cd1485d52d03a8b37e0c4802a27cfe5df": {
         "type": "mutation",
         "name": "DetachStack",
         "body": "mutation DetachStack($id: ID!) {\n  detachStack(id: $id) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:b7680cfd02fa1950942dcbdc448611aa0ad1b618ae809827adc82c3e41e5ed00": {
         "type": "mutation",
         "name": "DeleteStack",
         "body": "mutation DeleteStack($id: ID!) {\n  deleteStack(id: $id) {\n    id\n    __typename\n  }\n}"
      },
      "sha256:86a59a290415f02cd0c092c044060319d20f6f9567babb920c81fe386a44f09c": {
         "type": "mutation",
         "name": "KickStack",
         "body": "mutation KickStack($id: ID!) {\n  kickStack(id: $id) {\n    ...StackRun\n    __typename\n  }\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:b46a38de6daed0d03c1898cd35f67c700a4e14abbe3b6500b1d7745fb0c50f7d": {
         "type": "mutation",
         "name": "kickStackPullRequest",
         "body": "mutation kickStackPullRequest($id: ID!) {\n  kickStackPullRequest(id: $id) {\n    ...StackRun\n    __typename\n  }\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:c2bebd3d0ef5a8bd5c05c4a56eb2ac8fd814117b5435cf8abfb31109a2396210": {
         "type": "mutation",
         "name": "UpdateStackRun",
         "body": "mutation UpdateStackRun($id: ID!, $attributes: StackRunAttributes!) {\n  updateStackRun(id: $id, attributes: $attributes) {\n    ...StackRun\n    __typename\n  }\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:3b4b45f82c7ea9af4e1f9cc2aa3b9b9ecc86a16ea8041b5d8519b03756cdcc0b": {
         "type": "mutation",
         "name": "CompleteStackRun",
         "body": "mutation CompleteStackRun($id: ID!, $attributes: StackRunAttributes!) {\n  completeStackRun(id: $id, attributes: $attributes) {\n    ...StackRun\n    __typename\n  }\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:f7c30903e662cfca67756f3b04bf74048ceaab803fb52debd7cd7c30371184e5": {
         "type": "mutation",
         "name": "ApproveStackRun",
         "body": "mutation ApproveStackRun($id: ID!) {\n  approveStackRun(id: $id) {\n    ...StackRun\n    __typename\n  }\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:c782d3ea8e2a3e383953104e7f40844b5ccfa9559bd2399ec6ae0a37233f40a6": {
         "type": "mutation",
         "name": "RestartStackRun",
         "body": "mutation RestartStackRun($id: ID!) {\n  restartStackRun(id: $id) {\n    ...StackRun\n    __typename\n  }\n}\n\nfragment StackRun on StackRun {\n  id\n  insertedAt\n  git {\n    ref\n    __typename\n  }\n  message\n  status\n  approval\n  approvedAt\n  approver {\n    name\n    email\n    __typename\n  }\n  insight {\n    ...AiInsight\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsight on AiInsight {\n  id\n  text\n  summary\n  sha\n  freshness\n  updatedAt\n  insertedAt\n  error {\n    message\n    source\n    __typename\n  }\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:52bcabcc4784bed21357e1f5f1dbd28910bd08d0c230899b3e005cae988c7d7a": {
         "type": "mutation",
         "name": "RestoreStack",
         "body": "mutation RestoreStack($id: ID!) {\n  restoreStack(id: $id) {\n    ...StackTiny\n    __typename\n  }\n}\n\nfragment StackTiny on InfrastructureStack {\n  id\n  insertedAt\n  updatedAt\n  deletedAt\n  name\n  type\n  repository {\n    url\n    pulledAt\n    __typename\n  }\n  paused\n  status\n  insight {\n    ...AiInsightSummary\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightSummary on AiInsight {\n  id\n  summary\n  freshness\n  insertedAt\n  updatedAt\n  ...AiInsightContext\n  __typename\n}\n\nfragment AiInsightContext on AiInsight {\n  evidence {\n    ...AiInsightEvidence\n    __typename\n  }\n  cluster {\n    id\n    name\n    distro\n    provider {\n      cloud\n      __typename\n    }\n    __typename\n  }\n  clusterInsightComponent {\n    id\n    name\n    __typename\n  }\n  service {\n    id\n    name\n    cluster {\n      ...ClusterMinimal\n      __typename\n    }\n    __typename\n  }\n  serviceComponent {\n    id\n    name\n    service {\n      id\n      name\n      cluster {\n        ...ClusterMinimal\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  stack {\n    id\n    name\n    type\n    __typename\n  }\n  stackRun {\n    id\n    message\n    type\n    stack {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  alert {\n    id\n    title\n    message\n    __typename\n  }\n  __typename\n}\n\nfragment AiInsightEvidence on AiInsightEvidence {\n  id\n  type\n  logs {\n    ...LogsEvidence\n    __typename\n  }\n  pullRequest {\n    ...PullRequestEvidence\n    __typename\n  }\n  alert {\n    ...AlertEvidence\n    __typename\n  }\n  knowledge {\n    ...KnowledgeEvidence\n    __typename\n  }\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment LogsEvidence on LogsEvidence {\n  clusterId\n  serviceId\n  line\n  lines {\n    ...LogLine\n    __typename\n  }\n  __typename\n}\n\nfragment LogLine on LogLine {\n  facets {\n    ...LogFacet\n    __typename\n  }\n  log\n  timestamp\n  __typename\n}\n\nfragment LogFacet on LogFacet {\n  key\n  value\n  __typename\n}\n\nfragment PullRequestEvidence on PullRequestEvidence {\n  contents\n  filename\n  patch\n  repo\n  sha\n  title\n  url\n  __typename\n}\n\nfragment AlertEvidence on AlertEvidence {\n  alertId\n  title\n  resolution\n  __typename\n}\n\nfragment KnowledgeEvidence on KnowledgeEvidence {\n  name\n  observations\n  type\n  __typename\n}\n\nfragment ClusterMinimal on Cluster {\n  id\n  name\n  handle\n  provider {\n    name\n    cloud\n    __typename\n  }\n  distro\n  __typename\n}"
      },
      "sha256:69bf503939bfa48def24b0cbeeeb974df8bd4accb8cbb66f5cf243d7601b4148": {
         "type": "subscription",
         "name": "LogsDelta",
         "body": "subscription LogsDelta($id: ID!) {\n  runLogsDelta(stepId: $id) {\n    delta\n    payload {\n      id\n      logs\n      insertedAt\n      updatedAt\n      __typename\n    }\n    __typename\n  }\n}"
      },
      "sha256:4a85e346ba2ab54c4de1303939f21fef3675261eb71273eeecdd8d594dd0eeaf": {
         "type": "query",
         "name": "AccessTokens",
         "body": "query AccessTokens {\n  accessTokens(first: 500) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...AccessToken\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment AccessToken on AccessToken {\n  id\n  insertedAt\n  updatedAt\n  scopes {\n    api\n    apis\n    identifier\n    ids\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:e6e3c3562ac14208e3b0383d3fa70262b8e143866ba6a42496cb3ecc6feb6696": {
         "type": "query",
         "name": "TokenAudits",
         "body": "query TokenAudits($id: ID!, $cursor: String) {\n  accessToken(id: $id) {\n    id\n    audits(first: 500, after: $cursor) {\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      edges {\n        node {\n          ...AccessTokenAudit\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment AccessTokenAudit on AccessTokenAudit {\n  id\n  city\n  count\n  country\n  insertedAt\n  ip\n  latitude\n  longitude\n  timestamp\n  updatedAt\n  __typename\n}"
      },
      "sha256:f7f373fefe15ce11b4ff0e722d7994922c31c8c33ac95f6c13d55e36042b92c1": {
         "type": "mutation",
         "name": "CreateAccessToken",
         "body": "mutation CreateAccessToken($scopes: [ScopeAttributes]) {\n  createAccessToken(scopes: $scopes) {\n    ...AccessToken\n    token\n    __typename\n  }\n}\n\nfragment AccessToken on AccessToken {\n  id\n  insertedAt\n  updatedAt\n  scopes {\n    api\n    apis\n    identifier\n    ids\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:19dc1a4e9f8f528bdf3dc37ac81baf41ba911f725d2f2a44defc81d97b11c76f": {
         "type": "mutation",
         "name": "DeleteAccessToken",
         "body": "mutation DeleteAccessToken($id: ID!) {\n  deleteAccessToken(id: $id) {\n    ...AccessToken\n    __typename\n  }\n}\n\nfragment AccessToken on AccessToken {\n  id\n  insertedAt\n  updatedAt\n  scopes {\n    api\n    apis\n    identifier\n    ids\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a327afe201a7d25ed39d963b1febebff0d9fe3b3ce6b7e07ec76e64aff8a7541": {
         "type": "mutation",
         "name": "ShareSecret",
         "body": "mutation ShareSecret($attributes: SharedSecretAttributes!) {\n  shareSecret(attributes: $attributes) {\n    ...SharedSecret\n    __typename\n  }\n}\n\nfragment SharedSecret on SharedSecret {\n  secret\n  handle\n  name\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:4a250668eba1b4a11e9c39f64a71a9d413398b2ee13d9bbc500b085da6ebb2bd": {
         "type": "mutation",
         "name": "ConsumeSecret",
         "body": "mutation ConsumeSecret($handle: String!) {\n  consumeSecret(handle: $handle) {\n    ...SharedSecret\n    __typename\n  }\n}\n\nfragment SharedSecret on SharedSecret {\n  secret\n  handle\n  name\n  insertedAt\n  updatedAt\n  __typename\n}"
      },
      "sha256:d1099891202f182f71249178617fa24221dc119c4ffabd238c6f67fd3442c145": {
         "type": "query",
         "name": "Users",
         "body": "query Users($q: String, $after: String) {\n  users(q: $q, first: 20, after: $after) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...User\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:ba0a88e7031e5511031822ffad0d2afc91759a88c1fabc7f9803933e374d0608": {
         "type": "query",
         "name": "SearchUsers",
         "body": "query SearchUsers($q: String, $cursor: String) {\n  users(q: $q, after: $cursor, first: 5) {\n    pageInfo {\n      ...PageInfo\n      __typename\n    }\n    edges {\n      node {\n        ...User\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:57c150f4e9d92f07f7d0ce92673724a77985d6372035b94605cc8574114e3d86": {
         "type": "mutation",
         "name": "UpdateUser",
         "body": "mutation UpdateUser($id: ID, $attributes: UserAttributes!) {\n  updateUser(id: $id, attributes: $attributes) {\n    ...User\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:33a50b1c0732c7de7275b8a21b8372e946f1cb8b23d7705378f3edac5be88ea5": {
         "type": "mutation",
         "name": "DeleteUser",
         "body": "mutation DeleteUser($id: ID!) {\n  deleteUser(id: $id) {\n    ...User\n    __typename\n  }\n}\n\nfragment User on User {\n  id\n  pluralId\n  name\n  email\n  emailSettings {\n    digest\n    __typename\n  }\n  profile\n  backgroundColor\n  readTimestamp\n  roles {\n    admin\n    __typename\n  }\n  personas {\n    ...Persona\n    __typename\n  }\n  __typename\n}\n\nfragment Persona on Persona {\n  id\n  name\n  description\n  bindings {\n    ...PolicyBinding\n    __typename\n  }\n  configuration {\n    ...PersonaConfiguration\n    __typename\n  }\n  __typename\n}\n\nfragment PolicyBinding on PolicyBinding {\n  id\n  user {\n    id\n    name\n    email\n    __typename\n  }\n  group {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment PersonaConfiguration on PersonaConfiguration {\n  all\n  deployments {\n    addOns\n    clusters\n    pipelines\n    providers\n    repositories\n    services\n    __typename\n  }\n  home {\n    manager\n    security\n    __typename\n  }\n  sidebar {\n    audits\n    kubernetes\n    pullRequests\n    settings\n    backups\n    stacks\n    __typename\n  }\n  services {\n    configuration\n    secrets\n    __typename\n  }\n  ai {\n    pr\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:459356d71dfe78afd740bb13aaf9555bb4aa7ff50587a4e5f0f02027a03f542b": {
         "type": "mutation",
         "name": "CreateInvite",
         "body": "mutation CreateInvite($attributes: InviteAttributes!) {\n  createInvite(attributes: $attributes) {\n    ...Invite\n    __typename\n  }\n}\n\nfragment Invite on Invite {\n  secureId\n  __typename\n}"
      },
      "sha256:01e4871ede03ca33d25902db4acd6aac4fc6abfe1ee0004941130a5954f02b97": {
         "type": "query",
         "name": "VulnerabilityReports",
         "body": "query VulnerabilityReports($clusters: [ID], $namespaces: [String], $q: String, $grade: VulnReportGrade, $first: Int, $after: String) {\n  vulnerabilityReports(\n    clusters: $clusters\n    namespaces: $namespaces\n    q: $q\n    grade: $grade\n    first: $first\n    after: $after\n  ) {\n    ...VulnerabilityReportConnection\n    __typename\n  }\n}\n\nfragment VulnerabilityReportConnection on VulnerabilityReportConnection {\n  pageInfo {\n    ...PageInfo\n    __typename\n  }\n  edges {\n    node {\n      ...VulnerabilityReportTiny\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n  hasPreviousPage\n  startCursor\n  __typename\n}\n\nfragment VulnerabilityReportTiny on VulnerabilityReport {\n  id\n  artifactUrl\n  services {\n    service {\n      name\n      __typename\n    }\n    __typename\n  }\n  namespaces {\n    namespace\n    __typename\n  }\n  summary {\n    criticalCount\n    highCount\n    mediumCount\n    lowCount\n    unknownCount\n    noneCount\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:a56edc852b3be9e8d8dbeb5b447d586ebd0536c949ecc1e9f89769e9d7b17715": {
         "type": "query",
         "name": "VulnerabilityReport",
         "body": "query VulnerabilityReport($id: ID!) {\n  vulnerabilityReport(id: $id) {\n    ...VulnerabilityReport\n    __typename\n  }\n}\n\nfragment VulnerabilityReport on VulnerabilityReport {\n  ...VulnerabilityReportTiny\n  vulnerabilities {\n    ...Vulnerability\n    __typename\n  }\n  __typename\n}\n\nfragment VulnerabilityReportTiny on VulnerabilityReport {\n  id\n  artifactUrl\n  services {\n    service {\n      name\n      __typename\n    }\n    __typename\n  }\n  namespaces {\n    namespace\n    __typename\n  }\n  summary {\n    criticalCount\n    highCount\n    mediumCount\n    lowCount\n    unknownCount\n    noneCount\n    __typename\n  }\n  __typename\n}\n\nfragment Vulnerability on Vulnerability {\n  id\n  title\n  description\n  severity\n  score\n  primaryLink\n  links\n  target\n  class\n  packageType\n  pkgPath\n  publishedDate\n  installedVersion\n  fixedVersion\n  lastModifiedDate\n  cvss {\n    ...CvssBundle\n    __typename\n  }\n  cvssSource\n  resource\n  insertedAt\n  updatedAt\n  __typename\n}\n\nfragment CvssBundle on CvssBundle {\n  attackComplexity\n  attackVector\n  availability\n  confidentiality\n  integrity\n  privilegesRequired\n  userInteraction\n  nvidia {\n    v2Score\n    v2Vector\n    v3Score\n    v3Vector\n    v40Score\n    v40Vector\n    __typename\n  }\n  redhat {\n    v2Score\n    v2Vector\n    v3Score\n    v3Vector\n    v40Score\n    v40Vector\n    __typename\n  }\n  __typename\n}"
      },
      "sha256:31df5a43f4f42d497b4f3f5b57530027765d148c3005099ff59df1993ec7b42b": {
         "type": "query",
         "name": "VulnerabilityStatistics",
         "body": "query VulnerabilityStatistics($clusters: [ID], $namespaces: [String], $q: String) {\n  vulnerabilityStatistics(clusters: $clusters, namespaces: $namespaces, q: $q) {\n    ...VulnerabilityStatistic\n    __typename\n  }\n}\n\nfragment VulnerabilityStatistic on VulnerabilityStatistic {\n  count\n  grade\n  __typename\n}"
      },
      "sha256:951f3c296c2149819c32741501b655a56e78ec0cf3a7a8f53a3a2cf47c39be78": {
         "type": "query",
         "name": "ClusterVulnerabilityAggregate",
         "body": "query ClusterVulnerabilityAggregate($grade: VulnReportGrade!) {\n  clusterVulnerabilityAggregate(grade: $grade) {\n    ...ClusterVulnAggregate\n    __typename\n  }\n}\n\nfragment ClusterVulnAggregate on ClusterVulnAggregate {\n  cluster {\n    id\n    name\n    handle\n    project {\n      name\n      __typename\n    }\n    __typename\n  }\n  count\n  __typename\n}"
      }
   }
}