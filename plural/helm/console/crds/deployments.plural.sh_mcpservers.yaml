---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: mcpservers.deployments.plural.sh
spec:
  group: deployments.plural.sh
  names:
    kind: MCPServer
    listKind: MCPServerList
    plural: mcpservers
    singular: mcpserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: MCP server URL
      jsonPath: .spec.url
      name: URL
      type: string
    - description: Requires confirmation
      jsonPath: .spec.confirm
      name: Confirm
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          MCPServer represents a Model Context Protocol server for AI tool
          integration within the Plural Console environment. MCP servers enable
          large language models to execute functions, access external APIs,
          and interact with various systems.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MCPServerSpec defines the desired state of an MCP (Model
              Context Protocol) server.
            properties:
              authentication:
                description: |-
                  Authentication specifies the authentication configuration for accessing this MCP server.
                  Different authentication methods are supported including built-in Plural JWT
                  and custom HTTP headers for integration with various authentication systems.
                properties:
                  headers:
                    additionalProperties:
                      type: string
                    description: |-
                      Headers specify custom HTTP headers required for authentication with this MCP server.
                      This allows integration with servers that use API keys, bearer tokens, or other
                      header-based authentication schemes. Common examples include "Authorization",
                      "X-API-Key", or custom authentication headers.
                    type: object
                  plural:
                    description: |-
                      Plural enables built-in Plural JWT authentication for this MCP server.
                      When true, the server will receive a valid Plural JWT token in requests,
                      allowing it to authenticate and authorize operations within the Plural ecosystem.
                    type: boolean
                type: object
              bindings:
                description: |-
                  Bindings define the read and write access policies for this MCP server.
                  These control which users and groups can view, modify, or execute tools
                  provided by this server, enabling fine-grained access control.
                properties:
                  read:
                    description: Read bindings.
                    items:
                      description: Binding represents a policy binding.
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                  write:
                    description: Write bindings.
                    items:
                      description: Binding represents a policy binding.
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                type: object
              confirm:
                description: |-
                  Confirm determines whether tool calls against this server require explicit user confirmation.
                  When true, users must approve each tool execution before it proceeds, providing
                  an additional safety mechanism for sensitive operations. Defaults to false.
                type: boolean
              name:
                description: |-
                  Name specifies the name for this MCP server.
                  If not provided, the name from the resource metadata will be used.
                  This name is used for identification and referencing in AI workflows.
                type: string
              url:
                description: |-
                  URL is the HTTP endpoint where the MCP server is hosted.
                  This must be a valid HTTP or HTTPS URL that the AI system can reach
                  to execute tool calls and interact with the server's capabilities.
                type: string
            required:
            - url
            type: object
          status:
            description: MCPServerStatus defines the observed state of an MCP server.
            properties:
              conditions:
                description: Represents the observations of a PrAutomation's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              id:
                description: ID of the resource in the Console API.
                type: string
              sha:
                description: SHA of last applied configuration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
