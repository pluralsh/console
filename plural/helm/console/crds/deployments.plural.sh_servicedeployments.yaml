---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: servicedeployments.deployments.plural.sh
spec:
  group: deployments.plural.sh
  names:
    kind: ServiceDeployment
    listKind: ServiceDeploymentList
    plural: servicedeployments
    singular: servicedeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Console repo Id
      jsonPath: .status.id
      name: Id
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ServiceDeployment provides a GitOps-driven approach to deploy and manage Kubernetes applications from Git repositories.
          It represents a reference to a service deployed from a Git repo into a Cluster, enabling complete GitOps workflows
          with full auditability and automated synchronization. The operator manages the deployment lifecycle by fetching
          manifests from Git repositories and applying them to target clusters with support for Helm, Kustomize, and raw YAML.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServiceSpec defines the desired state of a ServiceDeployment.
            properties:
              agentId:
                description: |-
                  AgentId represents agent session ID that created this service.
                  It is used for UI linking and otherwise ignored.
                type: string
              bindings:
                description: Bindings contain read and write policies controlling
                  access to this service.
                properties:
                  read:
                    description: Read bindings.
                    items:
                      description: Binding represents a policy binding.
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                  write:
                    description: Write bindings.
                    items:
                      description: Binding represents a policy binding.
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                type: object
              clusterRef:
                description: ClusterRef references the target Cluster where this service
                  will be deployed.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              configuration:
                additionalProperties:
                  type: string
                description: Configuration contains non-secret key-value pairs for
                  lightweight templating of manifests.
                type: object
              configurationRef:
                description: ConfigurationRef is a secret reference containing service
                  configuration for templating.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              contexts:
                description: Contexts reference ServiceContext names to inject additional
                  configuration.
                items:
                  type: string
                type: array
              dependencies:
                description: Dependencies specify services that must be healthy before
                  this service can be deployed.
                items:
                  properties:
                    name:
                      description: The name of a service on the same cluster this
                        service depends on
                      type: string
                  required:
                  - name
                  type: object
                type: array
              detach:
                description: Detach when true, detaches the service on deletion instead
                  of destroying it.
                type: boolean
              docsPath:
                description: DocsPath specifies the path to documentation within the
                  Git repository.
                type: string
              flowRef:
                description: FlowRef provides contextual linkage to a broader application
                  Flow this service belongs within.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              git:
                description: Git reference within the repository where the service
                  manifests are located.
                properties:
                  files:
                    description: Optional files to add to the manifests for this service
                    items:
                      type: string
                    type: array
                  folder:
                    description: Folder is the folder in the Git repository where
                      the manifests are located.
                    type: string
                  ref:
                    description: Ref is the Git reference (branch, tag, or commit)
                      to use.
                    type: string
                required:
                - folder
                - ref
                type: object
              helm:
                description: Helm configuration for deploying Helm charts, including
                  values and repository settings.
                properties:
                  chart:
                    description: Chart is the name of the Helm chart to use.
                    type: string
                  git:
                    description: Git contains a reference to a Git folder and ref
                      where the Helm chart is located.
                    properties:
                      files:
                        description: Optional files to add to the manifests for this
                          service
                        items:
                          type: string
                        type: array
                      folder:
                        description: Folder is the folder in the Git repository where
                          the manifests are located.
                        type: string
                      ref:
                        description: Ref is the Git reference (branch, tag, or commit)
                          to use.
                        type: string
                    required:
                    - folder
                    - ref
                    type: object
                  ignoreCrds:
                    description: |-
                      IgnoreCrds indicates whether to not include the CRDs in the /crds folder of the chart.
                      It is useful if you want to avoid installing CRDs that are already present in the cluster.
                    type: boolean
                  ignoreHooks:
                    description: IgnoreHooks indicates whether to completely ignore
                      Helm hooks when actualizing this service.
                    type: boolean
                  luaFile:
                    description: |-
                      LuaFile to use to generate Helm configuration.
                      This can ultimately return a Lua table with keys "values" and "valuesFiles"
                      to supply overlays for either dynamically based on Git state or other metadata.
                    type: string
                  luaFolder:
                    description: a folder of lua files to include in the final script
                      used
                    type: string
                  luaScript:
                    description: |-
                      LuaScript to use to generate Helm configuration.
                      This can ultimately return a lua table with keys "values" and "valuesFiles"
                      to supply overlays for either dynamically based on git state or other metadata.
                    type: string
                  release:
                    description: Release contains the name of the Helm release to
                      use when applying this service.
                    type: string
                  repository:
                    description: Repository is a pointer to the FluxCD Helm repository
                      to use.
                    properties:
                      name:
                        description: Name is a resource name.
                        type: string
                      namespace:
                        description: Namespace is a resource namespace.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  repositoryRef:
                    description: |-
                      RepositoryRef contains a reference to a GitRepository to source the Helm chart from.
                      This is useful for using a multi-source configuration for values files.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  url:
                    type: string
                  values:
                    description: Values contains arbitrary YAML values to overlay.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  valuesConfigMapRef:
                    description: Selects a key from a ConfigMap.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must
                          be defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  valuesFiles:
                    description: ' ValuesFiles contains individual values files to
                      overlay.'
                    items:
                      type: string
                    type: array
                  valuesFrom:
                    description: |-
                      ValuesFrom is a reference to a Kubernetes Secret containing Helm values.
                      It will consider any key with YAML data as a values file and merge them iteratively.
                      This allows you to store Helm values in a secret and reference them here.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  version:
                    description: Version of the Helm chart to use.
                    type: string
                type: object
              imports:
                description: Imports enable importing outputs from InfrastructureStack
                  resources for use in templating.
                items:
                  properties:
                    stackRef:
                      description: StackRef is a reference to an InfrastructureStack
                        resource that provides outputs to import.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - stackRef
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Imports are immutable
                  rule: self == oldSelf
              kustomize:
                description: Kustomize configuration for applying Kustomize transformations
                  to manifests.
                properties:
                  enableHelm:
                    description: |-
                      EnableHelm indicates whether to enable Helm for this Kustomize deployment.
                      Used for inflating Helm charts.
                    type: boolean
                  path:
                    description: Path to the kustomization file to use.
                    type: string
                required:
                - path
                type: object
              name:
                description: |-
                  Name of this service.
                  If not provided, the name from ServiceDeployment.ObjectMeta will be used.
                type: string
              namespace:
                description: |-
                  Namespace where this service will be deployed.
                  If not provided, deploys to the ServiceDeployment namespace.
                type: string
              protect:
                description: Protect when true, prevents deletion of this service
                  to avoid accidental removal.
                type: boolean
              renderers:
                description: Renderers define how to process and render manifests
                  using different engines (Helm, Kustomize, etc.).
                items:
                  properties:
                    helm:
                      properties:
                        release:
                          description: Release is a Helm release name to use when
                            rendering this Helm chart.
                          type: string
                        values:
                          description: Values a Helm values file to use when rendering
                            this Helm chart.
                          type: string
                        valuesFiles:
                          description: ValuesFiles a list of relative paths to values
                            files to use for Helm chart templating.
                          items:
                            type: string
                          type: array
                      type: object
                    path:
                      type: string
                    type:
                      enum:
                      - AUTO
                      - RAW
                      - HELM
                      - KUSTOMIZE
                      type: string
                  required:
                  - path
                  - type
                  type: object
                type: array
              repositoryRef:
                description: RepositoryRef references the GitRepository CRD containing
                  the service source code.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              sources:
                description: Sources specify additional Git repositories to source
                  manifests from for multi-source deployments.
                items:
                  properties:
                    git:
                      description: Git contains a location in a Git repository to
                        use.
                      properties:
                        files:
                          description: Optional files to add to the manifests for
                            this service
                          items:
                            type: string
                          type: array
                        folder:
                          description: Folder is the folder in the Git repository
                            where the manifests are located.
                          type: string
                        ref:
                          description: Ref is the Git reference (branch, tag, or commit)
                            to use.
                          type: string
                      required:
                      - folder
                      - ref
                      type: object
                    path:
                      description: Path the subdirectory this source will live in
                        the final tarball
                      type: string
                    repositoryRef:
                      description: RepositoryRef the reference of the Git repository
                        to source from.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                type: array
              syncConfig:
                description: SyncConfig contains advanced configuration for how manifests
                  are synchronized to the cluster.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  createNamespace:
                    description: Whether to auto-create the namespace for this service
                      (specifying labels and annotations will also add those to the
                      created namespace)
                    type: boolean
                  deleteNamespace:
                    description: Whether to delete the namespace for this service
                      upon deletion
                    type: boolean
                  diffNormalizers:
                    description: DiffNormalizers a list of diff normalizers to apply
                      to the service which controls how drift detection works.
                    items:
                      properties:
                        backfill:
                          description: |-
                            Backfill indicates whether to backfill the given pointers with the current live value
                            or otherwise ignore it entirely.
                          type: boolean
                        jsonPointers:
                          description: JSONPointers contains a list of JSON patches
                            to apply to the service, which controls how drift detection
                            works.
                          items:
                            type: string
                          type: array
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                    type: array
                  enforceNamespace:
                    description: Whether to enforce all created resources are placed
                      in the service namespace
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  requireOwnership:
                    description: Whether to require all resources are owned by this
                      service and fail if they are owned by another. Default is true.
                    type: boolean
                type: object
              templated:
                description: Templated enables Liquid templating for raw YAML files,
                  defaults to true.
                type: boolean
              version:
                description: Version specifies the semantic version of this ServiceDeployment.
                type: string
            required:
            - clusterRef
            type: object
          status:
            properties:
              components:
                items:
                  properties:
                    group:
                      description: Group is a Kubernetes resource group, e.g. "apps"
                        or "batch".
                      type: string
                    id:
                      type: string
                    kind:
                      description: Kind is the Kubernetes resource kind, e.g. "Deployment"
                        or "Job".
                      type: string
                    name:
                      description: Name is the name of the Kubernetes resource, e.g.
                        "test-deployment" or "test-job".
                      type: string
                    namespace:
                      description: Namespace is the Kubernetes namespace where this
                        component is deployed.
                      type: string
                    state:
                      description: |-
                        State specifies the component state.
                        One of RUNNING, PENDING, FAILED.
                      enum:
                      - RUNNING
                      - PENDING
                      - FAILED
                      type: string
                    synced:
                      description: Synced indicates whether this component is in sync
                        with the desired state.
                      type: boolean
                    version:
                      description: Version is the Kubernetes resource version, e.g.
                        "v1" or "v1beta1".
                      type: string
                  required:
                  - id
                  - kind
                  - name
                  - synced
                  type: object
                type: array
              conditions:
                description: Represents the observations of a PrAutomation's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              errors:
                items:
                  properties:
                    message:
                      type: string
                    source:
                      type: string
                  required:
                  - message
                  - source
                  type: object
                type: array
              id:
                description: ID of the resource in the Console API.
                type: string
              sha:
                description: SHA of last applied configuration.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
