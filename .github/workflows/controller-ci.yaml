name: CI / Controller
on:
  push:
    branches:
      - "master"
    paths:
      - ".github/workflows/controller.yaml"
      - "go/controller/**"
  pull_request:
    branches:
      - "**"
#    paths:
#      - ".github/workflows/controller.yaml"
#      - "go/controller/**"
permissions:
  contents: read
env:
  GOPATH: /home/runner/go/
  GOPROXY: "https://proxy.golang.org"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: go/controller
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: go/controller/go.mod
          cache: true
      - name: Download dependencies
        run: go mod download
      - name: Download tools
        run: PATH=$PATH:$GOPATH/bin make --directory=.. tools
      - run: PATH=$PATH:$GOPATH/bin make build
  unit-test:
    name: Unit tests
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: go/controller
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version-file: go/controller/go.mod
          cache: true
      - name: Download dependencies
        run: go mod download
      - name: Download tools
        run: PATH=$PATH:$GOPATH/bin make --directory=.. tools
      - name: Test
        run: PATH=$PATH:$GOPATH/bin make test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: go/controller/go.mod
          check-latest: true
      - uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3.7.0
        with:
          version: v1.61.0
          working-directory: go/controller
          args: --timeout=30m
  verify-docs:
    name: Verify docs
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: go/controller
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go/controller/go.mod
          cache: true
      - name: Download dependencies
        run: go mod download
      - name: Download tools
        run: PATH=$PATH:$GOPATH/bin make --directory=.. tools
      - name: Regenerate docs
        run: PATH=$PATH:$GOPATH/bin make codegen-crd-docs
      - name: Check git diff
        id: diff
        run: |
          git --no-pager diff
          if [[ $(git --no-pager diff | head -c1 | wc -c) -ne 0 ]]; then exit 1; fi
      - name: Fail if CRD docs are outdated
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}
        run: |
          echo "CRD docs are outdated. Please run `make codegen-crd-docs` and commit the changes."
          echo "Changed files: $CHANGED_FILES"
          exit 1
