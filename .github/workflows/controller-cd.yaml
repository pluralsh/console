name: CD / Controller
on:
  pull_request:
    branches:
      - 'master'
    paths:
      - 'go/controller/**'
      - '.github/workflows/controller-cd.yaml'
  push:
    tags:
      - 'v*.*.*'
permissions:
  contents: read
env:
  GOPATH: /home/runner/go
  GOBIN: /home/runner/go/bin
  GOPROXY: "https://proxy.golang.org"
  REGISTRY_IMAGE: ghcr.io/pluralsh/deployment-controller
  DOCKER_METADATA_PR_HEAD_SHA: 'true'
jobs:
  test:
    name: Unit test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: go/controller
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go/controller/go.mod
          cache: true
      - name: Download dependencies
        run: go mod download
      - name: Test
        run: PATH=$PATH:$GOPATH/bin make test
  build-image:
    name: Build controller image
    needs: [ test ]
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    strategy:
      fail-fast: false
      matrix:
        platforms:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.platforms.runner }}
    defaults:
      run:
        shell: bash
        working-directory: go/controller
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prepare
        run: |
          platform=${{ matrix.platforms.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/${{ secrets.GOOGLE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
          service_account: 'terraform@pluralsh.iam.gserviceaccount.com'
          token_format: 'access_token'
          create_credentials_file: true
      - uses: google-github-actions/setup-gcloud@v1.0.1
      - name: Login to GCR
        run: gcloud auth configure-docker -q
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: mjgpluralsh
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: "./go"
          file: "./go/controller/Dockerfile"
          tags: ${{ env.REGISTRY_IMAGE }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platforms.platform }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT_COMMIT=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version }}
      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
  publish-image:
    name: Publish image
    needs: [ build-image ]
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    strategy:
      fail-fast: false
      matrix:
        images:
          - ghcr.io/pluralsh/deployment-controller
          - gcr.io/pluralsh/deployment-controller
          - docker.io/pluralsh/deployment-controller
    runs-on: ubuntu-latest
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/${{ secrets.GOOGLE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
          service_account: 'terraform@pluralsh.iam.gserviceaccount.com'
          token_format: 'access_token'
          create_credentials_file: true
      - uses: google-github-actions/setup-gcloud@v1.0.1
      - name: Login to GCR
        run: gcloud auth configure-docker -q
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: mjgpluralsh
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.images }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ matrix.images }}:${{ steps.meta.outputs.version }}
