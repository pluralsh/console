defmodule Console.AI.File.EditorTest do
  use Console.DataCase, async: true
  alias Console.AI.File.Editor

  @new " - name: kibana\n \n # Reference to ECK-managed Elasticsearch instance, ideally from {{ \"elasticsearch.fullname\" }}\n #\n elasticsearchRef:\n name: elasticsearch\n\n config:\n server:\n publicBaseUrl: \"https://kibana.boot-aws.onplural.sh\"\n\n http:\n tls:\n selfSignedCertificate:\n disabled: true\n\n ingress:\n enabled: true\n pathType: Prefix\n className: nginx\n annotations:\n cert-manager.io/cluster-issuer: plural\n nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'\n\n hosts:\n - host: \"kibana.boot-aws.onplural.sh\"\n path: \"/\"\n tls:\n enabled: true\n hosts:\n - kibana.boot-aws.onplural.sh\n\n nodeSets:\n - name: default\n count: 3\n podTemplate:\n spec:\n containers:\n - name: kibana\n resources:\n requests:\n memory: \"620Mi\"\n cpu: \"70m\"\n initContainers:\n - name: sysctl\n securityContext:\n privileged: true\n runAsUser: 0\n command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']\n tolerations:\n - key: \"dedicated\"\n operator: \"Equal\"\n value: \"data\""
  @old " - name: kibana\n \n # Reference to ECK-managed Elasticsearch instance, ideally from {{ \"elasticsearch.fullname\" }}\n #\n elasticsearchRef:\n name: elasticsearch\n\n config:\n server:\n publicBaseUrl: \"https://kibana.boot-aws.onplural.sh\"\n\n http:\n tls:\n selfSignedCertificate:\n disabled: true\n\n ingress:\n enabled: true\n pathType: Prefix\n className: nginx\n annotations:\n cert-manager.io/cluster-issuer: plural\n nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'\n\n hosts:\n - host: \"kibana.boot-aws.onplural.sh\"\n path: \"/\"\n tls:\n enabled: true\n hosts:\n - kibana.boot-aws.onplural.sh"
  @content "eck-elasticsearch:\n  enabled: true\n\n  fullnameOverride: elasticsearch  \n\n  auth:\n    fileRealm:\n    - secretName: plrl-elastic-user\n\n  http:\n    tls:\n      selfSignedCertificate:\n        disabled: true\n\n  ingress:\n    enabled: true\n    annotations:\n      cert-manager.io/cluster-issuer: plural\n      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'\n\n    className: nginx\n    pathType: Prefix\n    hosts:\n    - host: \"elastic.boot-aws.onplural.sh\"\n      path: \"/\"\n    tls:\n      enabled: true\n      hosts:\n      - elastic.boot-aws.onplural.sh\n      secretName: elastic-tls\n\n\n  nodeSets:\n  - name: default\n    count: 3\n    podTemplate:\n      spec:\n        initContainers:\n        - name: sysctl\n          securityContext:\n            privileged: true\n            runAsUser: 0\n          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']\n        tolerations:\n        - key: \"dedicated\"\n          operator: \"Equal\"\n          value: \"data\"\n          effect: \"NoSchedule\"\n    volumeClaimTemplates:\n    - metadata:\n        name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.\n      spec:\n        accessModes:\n        - ReadWriteOnce\n        storageClassName: resizeable\n        resources:\n          requests:\n            storage: 250Gi\n\n    config:\n      # node.store.allow_mmap: false\n      # Enable anonymous access to allow GCLB health probes to succeed\n      xpack.security.authc:\n        anonymous:\n          username: anon\n          roles: monitoring_user\n\neck-kibana:\n  enabled: true\n\n  # Name of the Kibana instance.\n  #\n  fullnameOverride: kibana\n  \n  # Reference to ECK-managed Elasticsearch instance, ideally from {{ \"elasticsearch.fullname\" }}\n  #\n  elasticsearchRef:\n    name: elasticsearch\n\n  config:\n    server:\n      publicBaseUrl: \"https://kibana.boot-aws.onplural.sh\"\n\n  http:\n    tls:\n      selfSignedCertificate:\n        disabled: true\n\n  ingress:\n    enabled: true\n    pathType: Prefix\n    className: nginx\n    annotations:\n      cert-manager.io/cluster-issuer: plural\n      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'\n\n    hosts:\n    - host: \"kibana.boot-aws.onplural.sh\"\n      path: \"/\"\n    tls:\n      enabled: true\n      hosts:\n      - kibana.boot-aws.onplural.sh"

  describe "#replace/3" do
    @tag :skip
    test "it can replace a file" do
      {:ok, f} = Briefly.create()
      File.write!(f, @content)

      :ok = Editor.replace(f, @old, @new)
    end
  end
end
