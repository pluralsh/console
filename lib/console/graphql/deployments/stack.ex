defmodule Console.GraphQl.Deployments.Stack do
  use Console.GraphQl.Schema.Base
  alias Console.Schema.{Stack, RunStep}
  alias Console.GraphQl.Resolvers.{Deployments, User}

  ecto_enum :stack_status, Stack.Status
  ecto_enum :stack_type, Stack.Type
  ecto_enum :step_status, RunStep.Status
  ecto_enum :step_stage, RunStep.Stage

  input_object :stack_attributes do
    field :name,           non_null(:string), description: "the name of the stack"
    field :type,           non_null(:stack_type), description: "A type for the stack, specifies the tool to use to apply it"
    field :repository_id,  non_null(:id), description: "The repository to source IaC from"
    field :cluster_id,     non_null(:id), description: "The cluster on which the terraform will be applied"
    field :git,            non_null(:git_ref_attributes), description: "reference w/in the repository where the IaC lives"
    field :job_spec,       :gate_job_attributes, description: "optional k8s job configuration for the job that will apply this stack"
    field :configuration,  non_null(:stack_configuration_attributes), description: "version/image config for the tool you're using"
    field :approval,       :boolean, description: "whether to require approval"
    field :read_bindings,  list_of(:policy_binding_attributes)
    field :write_bindings, list_of(:policy_binding_attributes)

    field :files,       list_of(:stack_file_attributes)
    field :environemnt, list_of(:stack_environment_attributes)
  end

  input_object :stack_configuration_attributes do
    field :image,   :string, description: "optional custom image you might want to use"
    field :version, non_null(:string), description: "the semver of the tool you wish to use"
  end

  input_object :stack_run_attributes do
    field :status, non_null(:stack_status), description: "The status of this run"
    field :state,  :stack_state_attributes, description: "the state from this runs plan or apply"
    field :output, list_of(:stack_output_attributes), description: "output generated by this run"
    field :errors, list_of(:service_error_attributes), description: "Any errors detected when trying to run this stack"
  end

  input_object :run_step_attributes do
    field :status, non_null(:step_status)
  end

  input_object :run_log_attributes do
    field :logs, non_null(:string)
  end

  input_object :stack_output_attributes do
    field :name,   non_null(:string)
    field :value,  non_null(:string)
    field :secret, :boolean
  end

  input_object :stack_environment_attributes do
    field :name,   non_null(:string)
    field :value,  non_null(:string)
    field :secret, :boolean
  end

  input_object :stack_file_attributes do
    field :path,    non_null(:string)
    field :content, non_null(:string)
  end

  input_object :stack_state_attributes do
    field :plan,  :string
    field :state, list_of(:stack_state_resource_attributes)
  end

  input_object :stack_state_resource_attributes do
    field :identifier,    non_null(:string), description: "a string identifier for this resource, different tools will have different conventions"
    field :resource,      non_null(:string), description: "a string name of the resource type"
    field :name,          non_null(:string), description: "the name of the resource within that type"
    field :configuration, :json, description: "arbitrary configuration used to create the resource"
    field :links,         list_of(:string), description: "identifiers this resource is linked to for graphing in the UI"
  end

  object :infrastructure_stack do
    field :id,             :id
    field :name,           non_null(:string), description: "the name of the stack"
    field :type,           non_null(:stack_type), description: "A type for the stack, specifies the tool to use to apply it"
    field :git,            non_null(:git_ref), description: "reference w/in the repository where the IaC lives"
    field :job_spec,       :job_gate_spec, description: "optional k8s job configuration for the job that will apply this stack"
    field :configuration,  non_null(:stack_configuration), description: "version/image config for the tool you're using"
    field :approval,       :boolean, description: "whether to require approval"

    connection field :runs, node_type: :stack_run do
      resolve &Deployments.list_stack_runs/3
    end

    field :files, list_of(:stack_file), resolve: dataloader(Deployments), description: "files bound to a run of this stack"
    field :environment, list_of(:stack_environment), resolve: dataloader(Deployments), description: "environment variables for this stack"

    field :output, list_of(:stack_output), resolve: dataloader(Deployments), description: "the most recent output for this stack"
    field :state,  :stack_state, resolve: dataloader(Deployments), description: "the most recent state of this stack"

    field :cluster,         :cluster, resolve: dataloader(Deployments), description: "the cluster this stack runs on"
    field :repository,      :git_repository, resolve: dataloader(Deployments), description: "the git repository you're sourcing IaC from"

    field :read_bindings,  list_of(:policy_binding), resolve: dataloader(Deployments)
    field :write_bindings, list_of(:policy_binding), resolve: dataloader(Deployments)

    timestamps()
  end

  object :stack_configuration do
    field :image,   :string, description: "optional custom image you might want to use"
    field :version, non_null(:string), description: "the semver of the tool you wish to use"
  end

  object :stack_run do
    field :id,             non_null(:id)
    field :status,         non_null(:stack_status), description: "The status of this run"
    field :name,           non_null(:string), description: "the name of the stack"
    field :type,           non_null(:stack_type), description: "A type for the stack, specifies the tool to use to apply it"
    field :git,            non_null(:git_ref), description: "reference w/in the repository where the IaC lives"
    field :job_spec,       :job_gate_spec, description: "optional k8s job configuration for the job that will apply this stack"
    field :configuration,  non_null(:stack_configuration), description: "version/image config for the tool you're using"
    field :approval,       :boolean, description: "whether to require approval"
    field :approved_at,    :datetime, description: "when this run was approved"

    field :tarball, non_null(:string), resolve: &Deployments.stack_tarball/3, description: "https url to fetch the latest tarball of stack IaC"

    field :approver, :user, resolve: dataloader(User), description: "the approver of this job"

    field :steps, list_of(:run_step), resolve: dataloader(Deployments), description: "The steps to perform when running this stack"

    field :files, list_of(:stack_file), resolve: dataloader(Deployments), description: "files bound to a run of this stack"
    field :environment, list_of(:stack_environment), resolve: dataloader(Deployments), description: "environment variables for this stack"

    field :output, list_of(:stack_output), resolve: dataloader(Deployments), description: "the most recent output for this stack"
    field :state,  :stack_state, resolve: dataloader(Deployments), description: "the most recent state of this stack"
    field :errors, list_of(:service_error),
      resolve: dataloader(Deployments),
      description: "a list of errors generated by the deployment operator"

    field :cluster,         :cluster, resolve: dataloader(Deployments), description: "the cluster this stack runs on"
    field :repository,      :git_repository, resolve: dataloader(Deployments), description: "the git repository you're sourcing IaC from"

    timestamps()
  end

  object :run_step do
    field :id,     non_null(:id)
    field :status, non_null(:step_status)
    field :stage,  non_null(:step_stage)
    field :name,   non_null(:string)
    field :cmd,    non_null(:string)
    field :args,   list_of(non_null(:string))
    field :index,  non_null(:integer)

    field :logs, list_of(:run_logs), resolve: dataloader(Deployments)

    timestamps()
  end

  object :run_logs do
    field :id,   non_null(:id)
    field :logs, non_null(:string)

    timestamps()
  end

  object :stack_output do
    field :name,   non_null(:string)
    field :value,  non_null(:string)
    field :secret, :boolean
  end

  object :stack_environment do
    field :name,   non_null(:string)
    field :value,  non_null(:string)
    field :secret, :boolean
  end

  object :stack_file do
    field :path,    non_null(:string)
    field :content, non_null(:string)
  end

  object :stack_state do
    field :id,    non_null(:id)
    field :plan,  :string
    field :state, list_of(:stack_state_resource)
  end

  object :stack_state_resource do
    field :identifier,    non_null(:string), description: "a string identifier for this resource, different tools will have different conventions"
    field :resource,      non_null(:string), description: "a string name of the resource type"
    field :name,          non_null(:string), description: "the name of the resource within that type"
    field :configuration, :json, description: "arbitrary configuration used to create the resource"
    field :links,         list_of(:string), description: "identifiers this resource is linked to for graphing in the UI"
  end

  connection node_type: :infrastructure_stack
  connection node_type: :stack_run

  object :public_stack_queries do
    connection field :cluster_stack_runs, node_type: :stack_run do
      middleware ClusterAuthenticated

      resolve &Deployments.stack_runs_for_cluster/2
    end

    field :stack_run, :stack_run do
      middleware Authenticated, :cluster
      arg :id, non_null(:id)

      resolve &Deployments.resolve_stack_run/2
    end
  end

  object :public_stack_mutations do
    field :update_stack_run, :stack_run do
      middleware Authenticated, :cluster
      arg :id,         non_null(:id)
      arg :attributes, non_null(:stack_run_attributes)

      resolve &Deployments.update_stack_run/2
    end

    field :complete_stack_run, :stack_run do
      middleware Authenticated, :cluster
      arg :id,         non_null(:id)
      arg :attributes, non_null(:stack_run_attributes)

      resolve &Deployments.complete_stack_run/2
    end

    field :update_run_step, :run_step do
      middleware ClusterAuthenticated
      arg :id,         non_null(:id)
      arg :attributes, non_null(:run_step_attributes)

      resolve &Deployments.update_run_step/2
    end

    field :add_run_logs, :run_logs do
      middleware ClusterAuthenticated
      arg :step_id,    non_null(:id)
      arg :attributes, non_null(:run_log_attributes)

      resolve &Deployments.add_run_logs/2
    end
  end

  object :stack_queries do
    field :infrastructure_stack, :infrastructure_stack do
      middleware Authenticated
      arg :id, non_null(:id)

      resolve &Deployments.resolve_stack/2
    end

    connection field :infrastructure_stacks, node_type: :infrastructure_stack do
      middleware Authenticated

      resolve &Deployments.list_stacks/2
    end
  end

  object :stack_mutations do
    field :create_stack, :infrastructure_stack do
      middleware Authenticated
      arg :attributes, non_null(:stack_attributes)

      resolve &Deployments.create_stack/2
    end

    field :update_stack, :infrastructure_stack do
      middleware Authenticated
      arg :id,         non_null(:id)
      arg :attributes, non_null(:stack_attributes)

      resolve &Deployments.update_stack/2
    end

    field :delete_stack, :infrastructure_stack do
      middleware Authenticated
      arg :id, non_null(:id)

      resolve &Deployments.delete_stack/2
    end

    field :approve_stack_run, :stack_run do
      middleware Authenticated
      arg :id, non_null(:id)

      resolve &Deployments.approve_stack_run/2
    end
  end
end
