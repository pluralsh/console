---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: helmrepositories.deployments.plural.sh
spec:
  group: deployments.plural.sh
  names:
    kind: HelmRepository
    listKind: HelmRepositoryList
    plural: helmrepositories
    singular: helmrepository
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: ID of the Helm repository in the Console API.
      jsonPath: .status.id
      name: ID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          HelmRepository is a Kubernetes custom resource that represents a Helm chart repository
          for use with the Plural Console deployment system. It enables integration with various
          Helm repository providers including public repositories, private cloud-hosted repositories,
          and on-premises solutions with comprehensive authentication support.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec defines the desired state of the HelmRepository, including the repository URL
              and authentication configuration. The URL is immutable once set to ensure consistency
              across deployments and prevent accidental repository changes.
            properties:
              auth:
                description: |-
                  Auth contains the authentication configuration for accessing the Helm repository.
                  The specific authentication method used depends on the Provider field.
                  Only one authentication method should be configured per repository.
                properties:
                  aws:
                    description: |-
                      Aws specifies AWS-specific authentication for Amazon ECR and other AWS-hosted repositories.
                      Supports both static credentials and IAM role-based authentication for secure access
                      to private repositories hosted in Amazon Web Services.
                    properties:
                      accessKey:
                        description: |-
                          AccessKey specifies the AWS access key ID for authentication.
                          When using static credentials, this should be set along with the secret access key.
                          For enhanced security, consider using IAM roles instead of static credentials.
                        type: string
                      assumeRoleArn:
                        description: |-
                          AssumeRoleArn specifies an AWS IAM role ARN to assume for repository access.
                          This enables cross-account access and role-based authentication, providing
                          enhanced security and flexibility in AWS environments.
                        type: string
                      secretAccessKeySecretKeyRef:
                        description: |-
                          SecretAccessKeySecretKeyRef references a specific key within a Kubernetes Secret containing the secret access key.
                          This is the preferred method for storing AWS credentials as it allows multiple
                          credential sets to be organized within a single secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secretAccessKeySecretRef:
                        description: |-
                          SecretAccessKeySecretRef references a Kubernetes Secret containing the AWS secret access key.
                          The entire secret content will be used as the secret access key.
                          This approach is deprecated in favor of SecretAccessKeySecretKeyRef for better secret management.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  azure:
                    description: |-
                      Azure specifies Azure-specific authentication for Azure Container Registry (ACR).
                      Supports service principal authentication and managed identity for secure access
                      to private repositories hosted in Microsoft Azure.
                    properties:
                      clientId:
                        description: |-
                          ClientID specifies the Azure service principal client ID.
                          This is used in conjunction with the client secret to authenticate with Azure services.
                        type: string
                      clientSecretSecretKeyRef:
                        description: |-
                          ClientSecretSecretKeyRef references a specific key within a Kubernetes Secret containing the client secret.
                          This is the preferred method for storing Azure credentials as it allows proper
                          secret organization and key-based access control.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      clientSecretSecretRef:
                        description: |-
                          ClientSecretSecretRef references a Kubernetes Secret containing the Azure service principal client secret.
                          The entire secret content will be used as the client secret.
                          This approach is deprecated in favor of ClientSecretSecretKeyRef for better secret management.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      subscriptionId:
                        description: |-
                          SubscriptionID specifies the Azure subscription ID.
                          This identifies the Azure subscription containing the resources
                          and may be required for certain repository access scenarios.
                        type: string
                      tenantId:
                        description: |-
                          TenantID specifies the Azure Active Directory tenant ID.
                          This identifies the Azure AD instance that contains the service principal
                          and is required for proper authentication scope.
                        type: string
                    type: object
                  basic:
                    description: |-
                      Basic specifies username/password authentication for repositories that support HTTP Basic Auth.
                      Commonly used with private Helm repositories, Harbor registries, and other traditional
                      repository managers that implement standard HTTP authentication.
                    properties:
                      passwordSecretKeyRef:
                        description: |-
                          PasswordSecretKeyRef references a specific key within a Kubernetes Secret that contains the password.
                          This is the preferred method for password storage as it allows multiple credentials
                          to be stored in a single secret with proper key-based access.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      passwordSecretRef:
                        description: |-
                          PasswordSecretRef references a Kubernetes Secret containing the password for Basic authentication.
                          The entire secret content will be used as the password.
                          This approach is deprecated in favor of PasswordSecretKeyRef for better secret management.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      username:
                        description: |-
                          Username specifies the username for HTTP Basic authentication.
                          This is typically a user account or service account name configured
                          in the target repository system.
                        type: string
                    required:
                    - username
                    type: object
                  bearer:
                    description: |-
                      Bearer specifies token-based authentication for repositories that support Bearer tokens.
                      Used with modern container registries and repositories that implement OAuth2 or similar
                      token-based authentication schemes.
                    properties:
                      tokenSecretKeyRef:
                        description: |-
                          TokenSecretKeyRef references a specific key within a Kubernetes Secret that contains the bearer token.
                          This is the preferred method for token storage as it allows multiple tokens
                          to be stored in a single secret with proper key-based access.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      tokenSecretRef:
                        description: |-
                          TokenSecretRef references a Kubernetes Secret containing the bearer token.
                          The entire secret content will be used as the authentication token.
                          This approach is deprecated in favor of TokenSecretKeyRef for better secret management.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  gcp:
                    description: |-
                      Gcp specifies Google Cloud-specific authentication for Google Artifact Registry.
                      Supports service account key authentication for secure access to private
                      repositories hosted in Google Cloud Platform.
                    properties:
                      applicationCredentialsSecretKeyRef:
                        description: |-
                          ApplicationCredentialsSecretKeyRef references a specific key within a Kubernetes Secret containing the service account JSON.
                          This is the preferred method for storing GCP credentials as it allows multiple
                          service account keys to be organized within a single secret with proper access control.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      applicationCredentialsSecretRef:
                        description: |-
                          ApplicationCredentialsSecretRef references a Kubernetes Secret containing the GCP service account key JSON.
                          The entire secret content will be used as the service account credentials.
                          This approach is deprecated in favor of ApplicationCredentialsSecretKeyRef for better secret management.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                type: object
              provider:
                description: |-
                  Provider specifies the authentication provider type for this Helm repository.
                  This determines which authentication method will be used when accessing the repository.
                  Different providers support different authentication mechanisms optimized for their platforms.
                enum:
                - BASIC
                - BEARER
                - GCP
                - AZURE
                - AWS
                example: AWS
                type: string
              reconciliation:
                description: |-
                  Reconciliation settings for this resource.
                  Controls drift detection and reconciliation intervals.
                properties:
                  driftDetection:
                    default: true
                    description: |-
                      DriftDetection enables drift detection for this resource.
                      It is destined to detect changes made to the related
                      resources that are not referenced with owner ref.
                      Use with Interval to set how often drift detection runs.
                    example: false
                    type: boolean
                  interval:
                    default: 30m
                    description: Interval for DriftDetection mechanism.
                    example: 5m30s
                    type: string
                type: object
              url:
                description: |-
                  URL specifies the HTTP/HTTPS URL of the Helm repository.
                  This field is immutable once set to prevent accidental changes that could break
                  existing service deployments that depend on this repository.
                  Supported formats include standard Helm repository URLs and OCI registry URLs.
                type: string
                x-kubernetes-validations:
                - message: URL is immutable
                  rule: self == oldSelf
            required:
            - url
            type: object
          status:
            description: |-
              Status represents the current state of this HelmRepository resource, including
              synchronization status with the Console API and any error conditions.
            properties:
              conditions:
                description: Represents the observations of a PrAutomation's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              id:
                description: ID of the resource in the Console API.
                type: string
              sha:
                description: SHA of last applied configuration.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
