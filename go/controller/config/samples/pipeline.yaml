apiVersion: deployments.plural.sh/v1alpha1
kind: Provider
metadata:
  name: gcp
spec:
  cloud: gcp
  name: gcp
---
apiVersion: deployments.plural.sh/v1alpha1
kind: Cluster
metadata:
  name: dev
  namespace: default
spec:
  handle: cd-demo
  cloud: gcp
---
apiVersion: deployments.plural.sh/v1alpha1
kind: Cluster
metadata:
  name: prod
  namespace: default
spec:
  handle: cd-demo-workload-1
  cloud: gcp
---
apiVersion: deployments.plural.sh/v1alpha1
kind: GitRepository
metadata:
  name: guestbook
spec:
  url: https://github.com/argoproj/argocd-example-apps.git
---
apiVersion: deployments.plural.sh/v1alpha1
kind: ServiceDeployment
metadata:
  name: guestbook-dev
  namespace: default
spec:
  version: 0.0.1
  git:
    folder: guestbook
    ref: master
  repositoryRef:
    kind: GitRepository
    name: guestbook
    namespace: default
  clusterRef:
    kind: Cluster
    name: dev
    namespace: default
---
apiVersion: deployments.plural.sh/v1alpha1
kind: ServiceDeployment
metadata:
  name: guestbook-prod
  namespace: default
spec:
  version: 0.0.1
  git:
    folder: guestbook
    ref: master
  repositoryRef:
    kind: GitRepository
    name: guestbook
    namespace: default
  clusterRef:
    kind: Cluster
    name: prod
    namespace: default
---
apiVersion: deployments.plural.sh/v1alpha1
kind: Pipeline
metadata:
  name: test
  namespace: default
spec:
  stages:
    - name: dev
      services:
        - serviceRef:
            name: guestbook-dev
            namespace: default
    - name: prod
      services:
        - serviceRef:
            name: guestbook-prod
            namespace: default
          criteria:
            serviceRef:
              name: guestbook-dev
              namespace: default
            secrets:
              - test-secret
  edges:
    - from: dev
      to: prod
      gates:
        - name: job-gate
          type: JOB
          clusterRef:
            name: dev
            namespace: default
          spec:
            job:
              namespace: default
              labels:
                test: test
              annotations:
                plural.sh/annotation: test
              serviceAccount: default
              containers:
                - image: alpine:3.7
                  args:
                    - /bin/sh
                    - -c
                    - sleep 40
                  env:
                    - name: TEST_ENV_VAR
                      value: pipeline
        - name: approval-gate
          type: APPROVAL