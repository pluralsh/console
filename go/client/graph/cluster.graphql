fragment ClusterFragment on Cluster {
    id
    name
    handle
    self
    version
    insertedAt
    pingedAt
    protect
    currentVersion
    kasUrl
    deletedAt
    metadata
    distro
    tags { ...ClusterTags }
    provider { ...ClusterProviderFragment }
    nodePools { ...NodePoolFragment }
    status { ...ClusterStatusFragment }
    project {...TinyProjectFragment }
    writeBindings {
        ...PolicyBindingFragment
    }
    readBindings {
        ...PolicyBindingFragment
    }

}

fragment TinyClusterFragment on Cluster {
    id
    name
    handle
    self
    deletedAt
    project {...TinyProjectFragment }
}

fragment ClusterTags on Tag {
    name
    value
}

fragment ClusterProviderFragment on ClusterProvider {
    id
    name
    namespace
    cloud
    editable
    deletedAt
    repository {
        ...GitRepositoryFragment
    }
    service {
        ...ServiceDeploymentFragment
    }
    credentials {
        ...ProviderCredentialFragment
    }
}

fragment NodePoolFragment on NodePool {
    id
    name
    minSize
    maxSize
    instanceType
    labels
    taints {
        ...NodePoolTaintFragment
    }
}

fragment NodePoolTaintFragment on Taint {
    key
    value
    effect
}

fragment ClusterStatusFragment on ClusterStatus {
    conditions { ...ClusterConditionFragment }
}

fragment ClusterConditionFragment on ClusterCondition {
    status
    type
    message
    reason
}

mutation CreateCluster($attributes: ClusterAttributes!) {
    createCluster(attributes: $attributes) {
        deployToken
        ... ClusterFragment
    }
}

mutation UpdateCluster($id: ID!, $attributes: ClusterUpdateAttributes!) {
    updateCluster(id: $id, attributes: $attributes){
        ... ClusterFragment
    }
}

mutation DeleteCluster($id: ID!) {
    deleteCluster(id: $id) {
        id
    }
}

mutation DetachCluster($id: ID!) {
    detachCluster(id: $id) {
        id
    }
}

mutation CreateClusterProvider($attributes: ClusterProviderAttributes!) {
    createClusterProvider(attributes: $attributes) {
        ...ClusterProviderFragment
    }
}

mutation UpdateClusterProvider($id: ID!, $attributes: ClusterProviderUpdateAttributes!) {
    updateClusterProvider(id: $id, attributes: $attributes) {
        ...ClusterProviderFragment
    }
}

mutation DeleteClusterProvider($id: ID!) {
    deleteClusterProvider(id: $id) {
        ...ClusterProviderFragment
    }
}

mutation PingCluster($attributes: ClusterPing!) {
    pingCluster(attributes: $attributes) {
        id
        name
    }
}

mutation RegisterRuntimeServices($services: [RuntimeServiceAttributes], $layout: OperationalLayoutAttributes, $deprecated: [DeprecatedCustomResourceAttributes], $serviceId: ID) {
    registerRuntimeServices(services: $services, layout: $layout, deprecated: $deprecated, serviceId: $serviceId)
}

query ListClusters($cursor: String, $before: String, $last: Int) {
    clusters(after: $cursor, first: 100, before: $before, last: $last) {
        edges { ...ClusterEdgeFragment }
    }
}

query ListClustersWithParameters($after: String, $first: Int, $before: String, $last: Int, $projectId: ID, $tagQuery: TagQuery) {
    clusters(after: $after, first: $first, before: $before, last: $last, projectId: $projectId, tagQuery: $tagQuery) {
        pageInfo { ...PageInfoFragment}
        edges { ...ClusterEdgeFragment }
    }
}

query GetCluster($id: ID) {
    cluster(id: $id) {
        ...ClusterFragment
    }
}

query GetTinyCluster($id: ID) {
    cluster(id: $id) {
        ...TinyClusterFragment
    }
}

query GetAgentUrl($id: ID!) {
    cluster(id: $id) { agentUrl }
}

query GetClusterWithToken($id: ID, $handle: String) {
    cluster(id: $id, handle: $handle) {
        ...ClusterFragment
        deployToken
    }
}

query GetClusterByHandle($handle: String) {
    cluster(handle: $handle) {
        ...ClusterFragment
    }
}

query GetClusterProvider($id: ID!) {
    clusterProvider(id: $id) {
        ...ClusterProviderFragment
    }
}

query GetClusterProviderByCloud($cloud: String!) {
    clusterProvider(cloud: $cloud) {
        ...ClusterProviderFragment
    }
}

query ListClusterServices {
    clusterServices {
        ...ServiceDeploymentBaseFragment
    }
}

query ListServiceDeployments($cursor: String, $before: String, $last: Int)  {
    serviceDeployments(after: $cursor, first: 100, before: $before, last: $last) {
        edges { node { ...ServiceDeploymentFragment } }
    }
}

query MyCluster {
    myCluster {
        ...{
            id
            name
            distro
            restore {... ClusterRestoreFragment }
        }
    }
}

mutation UpsertVirtualCluster($parentID: ID!, $attributes: ClusterAttributes!) {
    upsertVirtualCluster(parentId: $parentID, attributes: $attributes) {
        deployToken
        ...ClusterFragment
    }
}
