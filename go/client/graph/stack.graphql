fragment InfrastructureStackEdgeFragment on InfrastructureStackEdge {
    node { ...InfrastructureStackFragment}
}

fragment StackRunEdgeFragment on StackRunEdge {
    node { ...StackRunFragment}
}

fragment InfrastructureStackFragment on InfrastructureStack {
    id
    name
    type
    git { ...GitRefFragment }
    jobSpec { ...JobSpecFragment}
    configuration { ...StackConfigurationFragment}
    cluster { ...TinyClusterFragment }
    project {...TinyProjectFragment }
    approval
    workdir
    manageState
    deletedAt
    files { ...StackFileFragment}
    environment { ...StackEnvironmentFragment}
    output { ...StackOutputFragment}
    state { ...StackStateFragment}
    repository { ...GitRepositoryFragment}
    writeBindings { ...PolicyBindingFragment }
    readBindings { ...PolicyBindingFragment }
}

fragment StackRunFragment on StackRun {
    ...StackRunBaseFragment
    approver { ...UserFragment}
}

fragment StackRunBaseFragment on StackRun {
    id
    type
    status
    approval
    approvedAt
    tarball
    workdir
    manageState
    stateUrls {
        terraform {
            address
            lock
            unlock
        }
    }
    pluralCreds {
        url
        token
    }
    actor { ...UserFragment }
    stack { ...InfrastructureStackFragment }
    state { ...StackStateFragment}
    steps { ...RunStepFragment}
    files { ...StackFileFragment}
    git { ...GitRefFragment }
    repository { ...GitRepositoryFragment}
    jobSpec { ...JobSpecFragment}
    configuration { ...StackConfigurationFragment}
    environment { ...StackEnvironmentFragment}
    output { ...StackOutputFragment}
    errors { ...ServiceErrorFragment}
}

fragment ServiceErrorFragment on ServiceError {
    source
    message
}

fragment StackOutputFragment on StackOutput {
    name
    value
    secret
}

fragment StackStateFragment on StackState {
    id
    plan
    state { ...StackStateResourceFragment}
}

fragment StackStateResourceFragment on StackStateResource {
    identifier
    resource
    name
    configuration
    links
}

fragment StackEnvironmentFragment on StackEnvironment {
    name
    value
    secret
}

fragment StackFileFragment on StackFile {
    path
    content
}

fragment RunStepFragment on RunStep {
    id
    status
    stage
    name
    cmd
    args
    requireApproval
    index
}

fragment StackConfigurationFragment on StackConfiguration {
    image
    version
    tag
    hooks {...StackHookFragment}
}

fragment StackHookFragment on StackHook {
    cmd
    args
    afterStage
}

fragment CustomStackRunFragment on CustomStackRun {
    id
    name
    stack {
        id
    }
    documentation
    commands { ...StackCommandFragment}
    configuration { ...PrConfigurationFragment}
}

fragment StackCommandFragment on StackCommand {
    cmd
    args
    dir
}

fragment PrConfigurationFragment on PrConfiguration {
    type
    name
    default
    documentation
    longform
    placeholder
    optional
    condition { ...PrConfigurationConditionFragment}
}

fragment PrConfigurationConditionFragment on PrConfigurationCondition {
    operation
    field
    value
}

query ListClusterStacks($after: String, $first: Int, $before: String, $last: Int) {
    clusterStackRuns(after: $after, first: $first, before: $before, last: $last) {
        pageInfo { ...PageInfoFragment}
        edges {
            ...StackRunEdgeFragment
        }
    }
}

query ListInfrastructureStacks($after: String, $first: Int, $before: String, $last: Int) {
    infrastructureStacks(after: $after, first: $first, before: $before, last: $last) {
        pageInfo { ...PageInfoFragment}
        edges {
            ...InfrastructureStackEdgeFragment
        }
    }
}

query GetStackRun($id: ID!) {
    stackRun(id: $id) {
        ...StackRunFragment
    }
}

query GetStackRunBase($id: ID!) {
    stackRun(id: $id) {
        ...StackRunBaseFragment
    }
}

mutation UpdateStackRun($id: ID!, $attributes: StackRunAttributes!) {
    updateStackRun(id: $id, attributes: $attributes) {
        ...StackRunBaseFragment
    }
}

mutation ApproveStackRun($id: ID!) {
    approveStackRun(id: $id) {
        ...StackRunBaseFragment
    }
}

mutation CreateStack($attributes: StackAttributes!) {
    createStack(attributes: $attributes) {
        ...InfrastructureStackFragment
    }
}

mutation UpdateStack($id: ID!, $attributes: StackAttributes!) {
    updateStack(id: $id, attributes: $attributes) {
        ...InfrastructureStackFragment
    }
}

mutation DetachStack($id: ID!) {
    detachStack(id: $id){
        ...InfrastructureStackFragment
    }
}

mutation DeleteStack($id: ID!) {
    deleteStack(id: $id){
        ...InfrastructureStackFragment
    }
}

query GetInfrastructureStack($id: ID, $name: String) {
    infrastructureStack(id: $id, name: $name) {
        ...InfrastructureStackFragment
    }
}

mutation CompletesStackRun($id: ID!, $attributes: StackRunAttributes!) {
    completeStackRun(id: $id, attributes: $attributes) {
        ...StackRunBaseFragment
    }
}

mutation AddStackRunLogs($id: ID!, $attributes: RunLogAttributes!) {
    addRunLogs(stepId: $id, attributes: $attributes) {
        updatedAt
    }
}

mutation UpdateStackRunStep($id: ID!, $attributes: RunStepAttributes!) {
    updateRunStep(id: $id, attributes: $attributes) {
        ...RunStepFragment
    }
}

mutation UpdateCustomStackRun($id: ID!, $attributes: CustomStackRunAttributes!) {
    updateCustomStackRun(id: $id, attributes: $attributes) {
        ...CustomStackRunFragment
    }
}

mutation CreateCustomStackRun($attributes: CustomStackRunAttributes!) {
    createCustomStackRun(attributes: $attributes) {
        ...CustomStackRunFragment
    }
}

mutation DeleteCustomStackRun($id: ID!) {
    deleteCustomStackRun(id: $id) {
        ...CustomStackRunFragment
    }
}

query GetCustomStackRun($id: ID!) {
    customStackRun(id: $id) {
        ...CustomStackRunFragment
    }
}

query ListStackRuns($id: ID!, $after: String, $before: String, $first: Int, $last: Int) {
    infrastructureStack(id: $id) {
        runs(after: $after, before: $before, first: $first, last: $last) {
            pageInfo {
                ...PageInfoFragment
            }
            edges {
                node {
                    ...StackRunFragment
                }
            }
        }
    }
}

mutation TriggerRun($id: ID!) {
    triggerRun(id: $id) {
        ...StackRunBaseFragment
    }
}
