//go:build !ignore_autogenerated

/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchCredentials) DeepCopyInto(out *ElasticsearchCredentials) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchCredentials.
func (in *ElasticsearchCredentials) DeepCopy() *ElasticsearchCredentials {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchCredentials) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchCredentialsList) DeepCopyInto(out *ElasticsearchCredentialsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ElasticsearchCredentials, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchCredentialsList.
func (in *ElasticsearchCredentialsList) DeepCopy() *ElasticsearchCredentialsList {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchCredentialsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchCredentialsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchCredentialsSpec) DeepCopyInto(out *ElasticsearchCredentialsSpec) {
	*out = *in
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	in.PasswordSecretKeyRef.DeepCopyInto(&out.PasswordSecretKeyRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchCredentialsSpec.
func (in *ElasticsearchCredentialsSpec) DeepCopy() *ElasticsearchCredentialsSpec {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchCredentialsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchILMPolicy) DeepCopyInto(out *ElasticsearchILMPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchILMPolicy.
func (in *ElasticsearchILMPolicy) DeepCopy() *ElasticsearchILMPolicy {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchILMPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchILMPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchILMPolicyList) DeepCopyInto(out *ElasticsearchILMPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ElasticsearchILMPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchILMPolicyList.
func (in *ElasticsearchILMPolicyList) DeepCopy() *ElasticsearchILMPolicyList {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchILMPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchILMPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchILMPolicySpec) DeepCopyInto(out *ElasticsearchILMPolicySpec) {
	*out = *in
	out.CredentialsRef = in.CredentialsRef
	in.Definition.DeepCopyInto(&out.Definition)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchILMPolicySpec.
func (in *ElasticsearchILMPolicySpec) DeepCopy() *ElasticsearchILMPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchILMPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchIndexTemplate) DeepCopyInto(out *ElasticsearchIndexTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchIndexTemplate.
func (in *ElasticsearchIndexTemplate) DeepCopy() *ElasticsearchIndexTemplate {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchIndexTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchIndexTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchIndexTemplateDefinition) DeepCopyInto(out *ElasticsearchIndexTemplateDefinition) {
	*out = *in
	if in.IndexPatterns != nil {
		in, out := &in.IndexPatterns, &out.IndexPatterns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Template.DeepCopyInto(&out.Template)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchIndexTemplateDefinition.
func (in *ElasticsearchIndexTemplateDefinition) DeepCopy() *ElasticsearchIndexTemplateDefinition {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchIndexTemplateDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchIndexTemplateList) DeepCopyInto(out *ElasticsearchIndexTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ElasticsearchIndexTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchIndexTemplateList.
func (in *ElasticsearchIndexTemplateList) DeepCopy() *ElasticsearchIndexTemplateList {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchIndexTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchIndexTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchIndexTemplateSpec) DeepCopyInto(out *ElasticsearchIndexTemplateSpec) {
	*out = *in
	out.CredentialsRef = in.CredentialsRef
	in.Definition.DeepCopyInto(&out.Definition)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchIndexTemplateSpec.
func (in *ElasticsearchIndexTemplateSpec) DeepCopy() *ElasticsearchIndexTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchIndexTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchRole) DeepCopyInto(out *ElasticsearchRole) {
	*out = *in
	if in.ClusterPermissions != nil {
		in, out := &in.ClusterPermissions, &out.ClusterPermissions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IndexPermissions != nil {
		in, out := &in.IndexPermissions, &out.IndexPermissions
		*out = make([]IndexPermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchRole.
func (in *ElasticsearchRole) DeepCopy() *ElasticsearchRole {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchUser) DeepCopyInto(out *ElasticsearchUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchUser.
func (in *ElasticsearchUser) DeepCopy() *ElasticsearchUser {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchUserDefinition) DeepCopyInto(out *ElasticsearchUserDefinition) {
	*out = *in
	in.PasswordSecretKeyRef.DeepCopyInto(&out.PasswordSecretKeyRef)
	in.Role.DeepCopyInto(&out.Role)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchUserDefinition.
func (in *ElasticsearchUserDefinition) DeepCopy() *ElasticsearchUserDefinition {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchUserDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchUserList) DeepCopyInto(out *ElasticsearchUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ElasticsearchUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchUserList.
func (in *ElasticsearchUserList) DeepCopy() *ElasticsearchUserList {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchUserSpec) DeepCopyInto(out *ElasticsearchUserSpec) {
	*out = *in
	out.CredentialsRef = in.CredentialsRef
	in.Definition.DeepCopyInto(&out.Definition)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchUserSpec.
func (in *ElasticsearchUserSpec) DeepCopy() *ElasticsearchUserSpec {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexPermission) DeepCopyInto(out *IndexPermission) {
	*out = *in
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexPermission.
func (in *IndexPermission) DeepCopy() *IndexPermission {
	if in == nil {
		return nil
	}
	out := new(IndexPermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedName) DeepCopyInto(out *NamespacedName) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedName.
func (in *NamespacedName) DeepCopy() *NamespacedName {
	if in == nil {
		return nil
	}
	out := new(NamespacedName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Status) DeepCopyInto(out *Status) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SHA != nil {
		in, out := &in.SHA, &out.SHA
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Status.
func (in *Status) DeepCopy() *Status {
	if in == nil {
		return nil
	}
	out := new(Status)
	in.DeepCopyInto(out)
	return out
}
