// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import (
	esapi "github.com/elastic/go-elasticsearch/v9/esapi"
	mock "github.com/stretchr/testify/mock"
)

// ElasticsearchClientMock is an autogenerated mock type for the ElasticsearchClient type
type ElasticsearchClientMock struct {
	mock.Mock
}

type ElasticsearchClientMock_Expecter struct {
	mock *mock.Mock
}

func (_m *ElasticsearchClientMock) EXPECT() *ElasticsearchClientMock_Expecter {
	return &ElasticsearchClientMock_Expecter{mock: &_m.Mock}
}

// ClusterHealth provides a mock function with no fields
func (_m *ElasticsearchClientMock) ClusterHealth() (*esapi.Response, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ClusterHealth")
	}

	var r0 *esapi.Response
	var r1 error
	if rf, ok := ret.Get(0).(func() (*esapi.Response, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *esapi.Response); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*esapi.Response)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ElasticsearchClientMock_ClusterHealth_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ClusterHealth'
type ElasticsearchClientMock_ClusterHealth_Call struct {
	*mock.Call
}

// ClusterHealth is a helper method to define mock.On call
func (_e *ElasticsearchClientMock_Expecter) ClusterHealth() *ElasticsearchClientMock_ClusterHealth_Call {
	return &ElasticsearchClientMock_ClusterHealth_Call{Call: _e.mock.On("ClusterHealth")}
}

func (_c *ElasticsearchClientMock_ClusterHealth_Call) Run(run func()) *ElasticsearchClientMock_ClusterHealth_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ElasticsearchClientMock_ClusterHealth_Call) Return(_a0 *esapi.Response, _a1 error) *ElasticsearchClientMock_ClusterHealth_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ElasticsearchClientMock_ClusterHealth_Call) RunAndReturn(run func() (*esapi.Response, error)) *ElasticsearchClientMock_ClusterHealth_Call {
	_c.Call.Return(run)
	return _c
}

// NewElasticsearchClientMock creates a new instance of ElasticsearchClientMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewElasticsearchClientMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *ElasticsearchClientMock {
	mock := &ElasticsearchClientMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
