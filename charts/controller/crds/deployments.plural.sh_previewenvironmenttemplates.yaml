---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: previewenvironmenttemplates.deployments.plural.sh
spec:
  group: deployments.plural.sh
  names:
    kind: PreviewEnvironmentTemplate
    listKind: PreviewEnvironmentTemplateList
    plural: previewenvironmenttemplates
    singular: previewenvironmenttemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: ID of the PreviewEnvironmentTemplate in the Console API
      jsonPath: .status.id
      name: ID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          PreviewEnvironmentTemplate automates the creation of temporary preview environments for pull requests.
          It defines how to clone and customize existing services when pull requests are opened, enabling
          developers to test changes in isolated environments before merging. This is particularly useful
          for feature branches, bug fixes, or any changes that need validation in a running environment.
          Common use cases include creating preview environments for web applications, API services,
          or microservices where visual or functional testing is needed before code review approval.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec defines the desired state of the PreviewEnvironmentTemplate, including the reference service
              to clone, customization template, and integration settings for pull request workflows.
            properties:
              commentTemplate:
                description: |-
                  CommentTemplate provides a liquid template for generating custom PR comments.
                  This template can include dynamic information about the preview environment such as
                  URLs, deployment status, or custom instructions for reviewers. Variables from the
                  service template and environment can be interpolated into the comment.
                type: string
              flowRef:
                description: |-
                  FlowRef references the flow that owns and manages this preview environment template.
                  The flow defines the overall workflow and permissions for creating and managing
                  preview environments based on this template.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              name:
                description: |-
                  Name specifies the name for this preview environment template.
                  If not provided, the name from the resource metadata will be used.
                type: string
              referenceServiceRef:
                description: |-
                  ReferenceServiceRef specifies the existing service deployment to use as a template.
                  This service will be cloned and customized according to the Template configuration
                  to create preview environments. The referenced service should be a stable, working
                  deployment that represents the base configuration for preview environments.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              scmConnectionRef:
                description: |-
                  ScmConnectionRef references the source control management connection to use for PR operations.
                  This connection is used to post comments on pull requests with preview environment information
                  and to trigger environment creation based on PR events.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              template:
                description: |-
                  Template defines the service configuration overrides and customizations to apply
                  when cloning the reference service for preview environments. This includes
                  namespace changes, configuration overrides, and any other modifications needed
                  to create isolated preview environments.
                properties:
                  configuration:
                    additionalProperties:
                      type: string
                    description: |-
                      Configuration provides a set of non-secret service-specific configuration values.
                      These key-value pairs are useful for templating and can be referenced
                      in manifest templates for environment-specific customization.
                    type: object
                  configurationRef:
                    description: |-
                      ConfigurationRef references a Kubernetes Secret containing service-specific configuration.
                      This secret should contain key-value pairs that will be made available
                      to the service for runtime configuration and secrets management.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  contexts:
                    description: |-
                      Contexts specifies a list of context names to add to this service.
                      Contexts provide reusable configuration bundles that can be shared
                      across multiple services for consistent environment setup.
                    items:
                      type: string
                    type: array
                  dependencies:
                    description: |-
                      Dependencies specify other services that must be healthy before this service is deployed.
                      This ensures proper deployment ordering and dependency resolution
                      within the managed namespace.
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  git:
                    description: |-
                      Git defines Git-specific settings for sourcing service manifests.
                      This includes repository references, branch/tag specifications,
                      and subdirectory paths within the Git repository.
                    properties:
                      files:
                        description: Optional files to add to the manifests for this
                          service
                        items:
                          type: string
                        type: array
                      folder:
                        description: Folder is the folder in the Git repository where
                          the manifests are located.
                        type: string
                      ref:
                        description: Ref is the Git reference (branch, tag, or commit)
                          to use.
                        type: string
                    required:
                    - folder
                    - ref
                    type: object
                  helm:
                    description: |-
                      Helm defines Helm-specific settings for deploying Helm charts as part of this service.
                      This includes chart specifications, values files, repository references,
                      and Helm-specific deployment options.
                    properties:
                      chart:
                        description: Chart is the name of the Helm chart to use.
                        type: string
                      git:
                        description: Git contains a reference to a Git folder and
                          ref where the Helm chart is located.
                        properties:
                          files:
                            description: Optional files to add to the manifests for
                              this service
                            items:
                              type: string
                            type: array
                          folder:
                            description: Folder is the folder in the Git repository
                              where the manifests are located.
                            type: string
                          ref:
                            description: Ref is the Git reference (branch, tag, or
                              commit) to use.
                            type: string
                        required:
                        - folder
                        - ref
                        type: object
                      ignoreCrds:
                        description: |-
                          IgnoreCrds indicates whether to not include the CRDs in the /crds folder of the chart.
                          It is useful if you want to avoid installing CRDs that are already present in the cluster.
                        type: boolean
                      ignoreHooks:
                        description: IgnoreHooks indicates whether to completely ignore
                          Helm hooks when actualizing this service.
                        type: boolean
                      luaFile:
                        description: |-
                          LuaFile to use to generate Helm configuration.
                          This can ultimately return a Lua table with keys "values" and "valuesFiles"
                          to supply overlays for either dynamically based on Git state or other metadata.
                        type: string
                      luaFolder:
                        description: a folder of lua files to include in the final
                          script used
                        type: string
                      luaScript:
                        description: |-
                          LuaScript to use to generate Helm configuration.
                          This can ultimately return a lua table with keys "values" and "valuesFiles"
                          to supply overlays for either dynamically based on git state or other metadata.
                        type: string
                      release:
                        description: Release contains the name of the Helm release
                          to use when applying this service.
                        type: string
                      repository:
                        description: Repository is a pointer to the FluxCD Helm repository
                          to use.
                        properties:
                          name:
                            description: Name is a resource name.
                            type: string
                          namespace:
                            description: Namespace is a resource namespace.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      repositoryRef:
                        description: |-
                          RepositoryRef contains a reference to a GitRepository to source the Helm chart from.
                          This is useful for using a multi-source configuration for values files.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      url:
                        type: string
                      values:
                        description: Values contains arbitrary YAML values to overlay.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      valuesConfigMapRef:
                        description: Selects a key from a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      valuesFiles:
                        description: ' ValuesFiles contains individual values files
                          to overlay.'
                        items:
                          type: string
                        type: array
                      valuesFrom:
                        description: |-
                          ValuesFrom is a reference to a Kubernetes Secret containing Helm values.
                          It will consider any key with YAML data as a values file and merge them iteratively.
                          This allows you to store Helm values in a secret and reference them here.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      version:
                        description: Version of the Helm chart to use.
                        type: string
                    type: object
                  kustomize:
                    description: |-
                      Kustomize defines Kustomize-specific settings for manifest customization.
                      This enables sophisticated YAML manipulation and configuration overlay
                      capabilities for complex deployment scenarios.
                    properties:
                      enableHelm:
                        description: |-
                          EnableHelm indicates whether to enable Helm for this Kustomize deployment.
                          Used for inflating Helm charts.
                        type: boolean
                      path:
                        description: Path to the kustomization file to use.
                        type: string
                    required:
                    - path
                    type: object
                  name:
                    description: |-
                      Name specifies the name for the service deployment.
                      For managed namespaces, this is optional and can be auto-generated
                      if not explicitly provided.
                    type: string
                  namespace:
                    description: |-
                      Namespace specifies the namespace for the service deployment.
                      For managed namespaces, this is typically auto-populated with
                      the managed namespace name if not explicitly provided.
                    type: string
                  protect:
                    description: |-
                      Protect indicates whether to protect this service from deletion.
                      Protected services are not automatically deleted during namespace cleanup
                      or cluster deletion operations, providing safety for critical workloads.
                    type: boolean
                  renderers:
                    description: |-
                      Renderers specify how manifests should be processed and rendered.
                      This includes options for Helm chart rendering, Kustomize processing,
                      and other manifest transformation workflows.
                    items:
                      properties:
                        helm:
                          properties:
                            release:
                              description: Release is a Helm release name to use when
                                rendering this Helm chart.
                              type: string
                            values:
                              description: Values a Helm values file to use when rendering
                                this Helm chart.
                              type: string
                            valuesFiles:
                              description: ValuesFiles a list of relative paths to
                                values files to use for Helm chart templating.
                              items:
                                type: string
                              type: array
                          type: object
                        path:
                          type: string
                        type:
                          enum:
                          - AUTO
                          - RAW
                          - HELM
                          - KUSTOMIZE
                          type: string
                      required:
                      - path
                      - type
                      type: object
                    type: array
                  repositoryRef:
                    description: |-
                      RepositoryRef references a GitRepository resource containing the service manifests.
                      This provides the source location for Kubernetes YAML files, Helm charts,
                      or other deployment artifacts needed for the service.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sources:
                    description: |-
                      Sources specify additional Git repositories or locations to source manifests from.
                      This enables multi-repository deployments and complex source composition
                      for sophisticated application architectures.
                    items:
                      properties:
                        git:
                          description: Git contains a location in a Git repository
                            to use.
                          properties:
                            files:
                              description: Optional files to add to the manifests
                                for this service
                              items:
                                type: string
                              type: array
                            folder:
                              description: Folder is the folder in the Git repository
                                where the manifests are located.
                              type: string
                            ref:
                              description: Ref is the Git reference (branch, tag,
                                or commit) to use.
                              type: string
                          required:
                          - folder
                          - ref
                          type: object
                        path:
                          description: Path the subdirectory this source will live
                            in the final tarball
                          type: string
                        repositoryRef:
                          description: RepositoryRef the reference of the Git repository
                            to source from.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type: array
                  syncConfig:
                    description: |-
                      SyncConfig defines advanced synchronization settings for the service deployment.
                      This includes options for namespace management, drift detection configuration,
                      and deployment behavior customization.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      createNamespace:
                        description: Whether to auto-create the namespace for this
                          service (specifying labels and annotations will also add
                          those to the created namespace)
                        type: boolean
                      deleteNamespace:
                        description: Whether to delete the namespace for this service
                          upon deletion
                        type: boolean
                      diffNormalizers:
                        description: DiffNormalizers a list of diff normalizers to
                          apply to the service which controls how drift detection
                          works.
                        items:
                          properties:
                            backfill:
                              description: |-
                                Backfill indicates whether to backfill the given pointers with the current live value
                                or otherwise ignore it entirely.
                              type: boolean
                            jsonPointers:
                              description: JSONPointers contains a list of JSON patches
                                to apply to the service, which controls how drift
                                detection works.
                              items:
                                type: string
                              type: array
                            kind:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                        type: array
                      enforceNamespace:
                        description: Whether to enforce all created resources are
                          placed in the service namespace
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      requireOwnership:
                        description: Whether to require all resources are owned by
                          this service and fail if they are owned by another. Default
                          is true.
                        type: boolean
                    type: object
                  templated:
                    description: |-
                      Templated indicates whether to apply liquid templating to raw YAML files.
                      When enabled, allows for dynamic configuration injection and
                      environment-specific customization of service manifests.
                    type: boolean
                type: object
            required:
            - flowRef
            - referenceServiceRef
            - template
            type: object
          status:
            description: |-
              Status represents the current state of this PreviewEnvironmentTemplate resource, including
              synchronization status with the Console API and any deployment information.
            properties:
              conditions:
                description: Represents the observations of a PrAutomation's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              id:
                description: ID of the resource in the Console API.
                type: string
              sha:
                description: SHA of last applied configuration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
