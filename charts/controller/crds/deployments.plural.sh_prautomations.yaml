---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: prautomations.deployments.plural.sh
spec:
  group: deployments.plural.sh
  names:
    kind: PrAutomation
    listKind: PrAutomationList
    plural: prautomations
    singular: prautomation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: ID of the PrAutomation in the Console API.
      jsonPath: .status.id
      name: ID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          PrAutomation provides a self-service mechanism for generating pull requests against IaC repositories.
          It enables teams to create standardized, templated PRs for common operations like cluster
          upgrades, service deployments, and configuration changes. Each automation defines the files to modify,
          the changes to make (via regex replacement, YAML overlays, or file creation), and provides a UI wizard
          for users to configure parameters before generating the PR.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Spec defines the desired state of the PrAutomation, including the operations
              to perform, target repository, and user interface configuration.
            properties:
              addon:
                description: Addon links this automation to a specific add-on name.
                type: string
              bindings:
                description: Bindings containing read and write policies of PR automation.
                properties:
                  create:
                    description: Create bindings.
                    items:
                      description: Binding represents a policy binding.
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                  write:
                    description: Write bindings.
                    items:
                      description: Binding represents a policy binding.
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                type: object
              branch:
                description: |-
                  Branch specifies the base branch this PR will be created from. If not provided,
                  defaults to the repository's main branch (usually 'main' or 'master').
                type: string
              catalogRef:
                description: |-
                  CatalogRef references the catalog this automation belongs to for
                  organizational purposes and discoverability in the service catalog.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              clusterRef:
                description: ClusterRef references a specific cluster that this PR
                  operates on.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              configuration:
                description: |-
                  Configuration defines the self-service UI form fields that users fill out
                  to customize the generated PR. Each field can be templated into the PR content.
                items:
                  description: PrAutomationConfiguration defines a single input field
                    in the self-service UI form.
                  properties:
                    condition:
                      description: |-
                        Condition defines when this field should be displayed based on the values
                        of other fields, enabling dynamic forms that adapt to user input.
                      properties:
                        field:
                          type: string
                        operation:
                          enum:
                          - NOT
                          - GT
                          - LT
                          - EQ
                          - GTE
                          - LTE
                          - PREFIX
                          - SUFFIX
                          type: string
                        value:
                          type: string
                      required:
                      - field
                      - operation
                      type: object
                    default:
                      description: Default provides a default value for this field.
                      type: string
                    displayName:
                      description: |-
                        DisplayName provides a human-readable label for this field in the UI.
                        If not provided, the Name field is used as the display label.
                      type: string
                    documentation:
                      description: Documentation provides help text or description
                        for this field to guide users in providing the correct input.
                      type: string
                    longform:
                      description: Longform provides extended documentation or detailed
                        explanation for complex configuration fields.
                      type: string
                    name:
                      description: |-
                        Name is the identifier for this configuration field, used as a template variable
                        and as the form field name in the UI.
                      type: string
                    optional:
                      description: |-
                        Optional indicates whether this field is required (false) or optional (true) for PR generation.
                        Required fields must be filled by the user.
                      type: boolean
                    placeholder:
                      description: Placeholder text to show in the input field to
                        guide users on the expected format or content.
                      type: string
                    type:
                      description: |-
                        Type specifies the input type for this field, determining how it's rendered
                        in the UI and what validation is applied.
                      enum:
                      - STRING
                      - INT
                      - BOOL
                      - PASSWORD
                      - ENUM
                      - CLUSTER
                      - PROJECT
                      - GROUP
                      - USER
                      - FLOW
                      type: string
                    validation:
                      description: Validation defines additional validation rules
                        to apply to user input before allowing PR generation.
                      properties:
                        json:
                          description: Whether the string value is supposed to be
                            json-encoded
                          type: boolean
                        regex:
                          description: A regex to match string-valued configuration
                            items
                          type: string
                        uniqBy:
                          description: How to determine uniquenss for this field
                          properties:
                            scope:
                              enum:
                              - PROJECT
                              - CLUSTER
                              type: string
                          required:
                          - scope
                          type: object
                      type: object
                    values:
                      description: Values provides the list of allowed values for
                        ENUM type fields, creating a dropdown selection in the UI.
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  - type
                  type: object
                type: array
              confirmation:
                description: |-
                  Confirmation specifies additional verification steps or information to present
                  to users before they can generate the PR, ensuring prerequisites are met.
                properties:
                  checklist:
                    description: Checklist to present to confirm each prerequisite
                      is satisfied.
                    items:
                      description: A checkbox to render to confirm a PR prerequisite
                        is satisfied
                      properties:
                        label:
                          description: The label of this checkbox
                          type: string
                      required:
                      - label
                      type: object
                    type: array
                  text:
                    description: Text in Markdown to explain this PR.
                    type: string
                type: object
              creates:
                description: |-
                  Creates defines specifications for generating new files from templates,
                  allowing the automation to add new configuration files to the repository.
                properties:
                  git:
                    description: Git location to source external files from.
                    properties:
                      files:
                        description: Optional files to add to the manifests for this
                          service
                        items:
                          type: string
                        type: array
                      folder:
                        description: Folder is the folder in the Git repository where
                          the manifests are located.
                        type: string
                      ref:
                        description: Ref is the Git reference (branch, tag, or commit)
                          to use.
                        type: string
                    required:
                    - folder
                    - ref
                    type: object
                  templates:
                    description: Template files to use to generate file content
                    items:
                      description: PrAutomationTemplate defines a single file template
                        for creating new files in the target repository.
                      properties:
                        condition:
                          description: Condition string that will be evaluated to
                            determine if source files should be copied or not.
                          type: string
                        context:
                          description: Additional context overrides to apply to this
                            template, will be merged into the user-provided configuration
                            options
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        destination:
                          description: The destination to write the file to
                          type: string
                        external:
                          description: Whether it is being sourced from an external
                            git repository
                          type: boolean
                        source:
                          description: The source file to use for templating
                          type: string
                      required:
                      - destination
                      - external
                      type: object
                    type: array
                type: object
              darkIcon:
                description: |-
                  DarkIcon provides a URL to a dark-mode variant of the icon for improved
                  visibility in dark-themed user interfaces.
                type: string
              deletes:
                description: |-
                  Deletes specifies files and folders to remove from the repository as part
                  of the PR, useful for cleanup or migration scenarios.
                properties:
                  files:
                    description: Individual files to delete.
                    items:
                      type: string
                    type: array
                  folders:
                    description: Entire folders to delete.
                    items:
                      type: string
                    type: array
                type: object
              documentation:
                description: |-
                  Documentation provides detailed explanation of what this automation does,
                  when to use it, and any prerequisites or considerations.
                type: string
              icon:
                description: |-
                  Icon provides a URL to an icon image to visually represent this automation
                  in the user interface and catalogs.
                type: string
              identifier:
                description: |-
                  Identifier specifies the target repository in the format "organization/repository-name"
                  for GitHub, or equivalent formats for other SCM providers.
                type: string
              message:
                description: |-
                  Message defines the commit message template that will be used in the generated PR.
                  Can include templated variables from user input.
                type: string
              name:
                description: |-
                  Name specifies the display name for this automation in the Console API.
                  If not provided, defaults to the Kubernetes resource name.
                type: string
              patch:
                description: |-
                  Patch determines whether to generate a patch for this PR instead of
                  creating a full pull request.
                type: boolean
              projectRef:
                description: |-
                  ProjectRef references the project this automation belongs to, enabling
                  project-scoped organization and access control.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              repositoryRef:
                description: RepositoryRef references a Git repository resource this
                  automation uses.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              role:
                enum:
                - CLUSTER
                - SERVICE
                - PIPELINE
                - UPDATE
                - UPGRADE
                - COST
                type: string
              scmConnectionRef:
                description: ScmConnectionRef references the SCM connection to use
                  for authentication when creating pull requests.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              secrets:
                description: |-
                  Configuration for setting a secret as part of this pr.  This will usually be used by k8s manifests defined and is
                  securely handled by our api with RBAC validation.
                properties:
                  cluster:
                    description: The cluster handle that will hold this secret
                    type: string
                  entries:
                    description: The entries of the secret
                    items:
                      properties:
                        autogenerate:
                          description: Whether to autogenerate the secret entry
                          type: boolean
                        documentation:
                          description: The documentation of the secret entry
                          type: string
                        name:
                          description: The name of the secret entry
                          type: string
                      required:
                      - documentation
                      - name
                      type: object
                    type: array
                  name:
                    description: The name of the secret
                    type: string
                  namespace:
                    description: The k8s namespace to place the secret in
                    type: string
                required:
                - cluster
                - entries
                - name
                - namespace
                type: object
              serviceRef:
                description: ServiceRef references a specific service that this PR
                  automation acts upon.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              title:
                description: |-
                  Title defines the template for the pull request title. Can include variables
                  that will be replaced with user-provided configuration values.
                type: string
              updates:
                description: |-
                  Updates specifies how to modify existing files using regex replacements
                  or YAML overlays, enabling precise changes to infrastructure code.
                properties:
                  files:
                    description: Files to update.
                    items:
                      type: string
                    type: array
                  matchStrategy:
                    description: MatchStrategy, see enum for behavior.
                    type: string
                  regexReplacements:
                    description: Full regex + replacement structs in case there is
                      different behavior per regex
                    items:
                      description: RegexReplacement defines a specific find-and-replace
                        operation using regular expressions.
                      properties:
                        file:
                          description: File this replacement will work on.
                          type: string
                        regex:
                          description: Regex to match a substring on.
                          type: string
                        replacement:
                          description: Replacement to be substituted for the match
                            in the regex.
                          type: string
                        templated:
                          description: Templated indicates whether you want to apply
                            templating to the regex before compiling.
                          type: boolean
                      required:
                      - file
                      - regex
                      - replacement
                      type: object
                    type: array
                  regexes:
                    description: Regexes to apply on each file.
                    items:
                      type: string
                    type: array
                  replaceTemplate:
                    description: ReplaceTemplate is a template to use when replacing
                      a regex.
                    type: string
                  yamlOverlays:
                    description: Replacement via overlaying a yaml structure on an
                      existing yaml file
                    items:
                      description: YamlOverlay defines a YAML merge operation to modify
                        existing YAML files.
                      properties:
                        file:
                          description: File to execute the overlay on.
                          type: string
                        listMerge:
                          description: ListMerge defines how you want list merge to
                            be performed, defaults to OVERWRITE.
                          enum:
                          - OVERWRITE
                          - APPEND
                          type: string
                        templated:
                          description: Templated indicates whether you want to apply
                            templating to the YAML blob before overlaying.
                          type: boolean
                        yaml:
                          description: Yaml (possibly templated) to use as the overlayed
                            YAML blob written to the file.
                          type: string
                      required:
                      - file
                      - yaml
                      type: object
                    type: array
                  yq:
                    description: Yq (unused so far)
                    type: string
                type: object
            required:
            - scmConnectionRef
            type: object
          status:
            description: Status represents the current state of this PrAutomation
              resource.
            properties:
              conditions:
                description: Represents the observations of a PrAutomation's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              id:
                description: ID of the resource in the Console API.
                type: string
              sha:
                description: SHA of last applied configuration.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
