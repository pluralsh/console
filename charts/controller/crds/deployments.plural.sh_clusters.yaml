---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: clusters.deployments.plural.sh
spec:
  group: deployments.plural.sh
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current Kubernetes version
      jsonPath: .status.currentVersion
      name: CurrentVersion
      type: string
    - description: Console ID
      jsonPath: .status.id
      name: Id
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Cluster represents a Kubernetes cluster managed by the Plural Console for continuous deployment.
          Clusters serve as deployment targets for services and can be either management clusters (hosting
          the Plural Console and operators) or workload clusters (running application workloads). The Console
          tracks cluster health, versions, and coordinates service deployments across the fleet.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ClusterSpec defines the desired state of a Cluster.
              Configures cluster properties including cloud provider settings, node pools, and access controls
              for continuous deployment workflows across the Plural fleet management architecture.
            properties:
              bindings:
                description: |-
                  Bindings contain read and write access policies for this cluster.
                  Controls which users and groups can view or manage this cluster through RBAC.
                properties:
                  read:
                    description: Read bindings.
                    items:
                      description: Binding represents a policy binding.
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                  write:
                    description: Write bindings.
                    items:
                      description: Binding represents a policy binding.
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                type: object
              cloud:
                description: |-
                  Cloud specifies the cloud provider to use for this cluster.
                  Determines the infrastructure platform where the cluster will be provisioned and managed.
                  For BYOK clusters, this field is set to "byok" and no cloud provider is required.
                enum:
                - aws
                - azure
                - gcp
                - byok
                example: azure
                type: string
                x-kubernetes-validations:
                - message: Cloud is immutable
                  rule: self == oldSelf
              cloudSettings:
                description: CloudSettings contains cloud provider-specific configuration
                  for this cluster.
                properties:
                  aws:
                    description: AWS contains Amazon Web Services specific cluster
                      configuration.
                    properties:
                      region:
                        description: |-
                          Region in AWS to deploy this cluster to.
                          Determines data residency, latency characteristics, and available AWS services.
                        type: string
                    required:
                    - region
                    type: object
                  azure:
                    description: Azure contains Microsoft Azure specific cluster configuration.
                    properties:
                      location:
                        description: Location specifies the Azure region where this
                          cluster will be deployed.
                        example: eastus
                        type: string
                      network:
                        description: Network specifies the Azure virtual network name
                          for cluster networking.
                        example: mynetwork
                        type: string
                      resourceGroup:
                        description: ResourceGroup specifies the Azure resource group
                          name for organizing cluster resources.
                        example: myresourcegroup
                        type: string
                      subscriptionId:
                        description: SubscriptionId is the GUID of the Azure subscription
                          that will contain this cluster.
                        type: string
                    required:
                    - location
                    - network
                    - resourceGroup
                    - subscriptionId
                    type: object
                  gcp:
                    description: GCP contains Google Cloud Platform specific cluster
                      configuration.
                    properties:
                      network:
                        description: Network specifies the GCP VPC network name for
                          cluster networking.
                        type: string
                      project:
                        description: Project specifies the GCP project ID where this
                          cluster will be deployed.
                        type: string
                      region:
                        description: Region specifies the GCP region where this cluster
                          will be deployed.
                        type: string
                    required:
                    - network
                    - project
                    - region
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              handle:
                description: |-
                  Handle is a short, unique human-readable name used to identify this cluster.
                  Does not necessarily map to the cloud resource name.
                  This has to be specified to adopt the existing cluster.
                example: myclusterhandle
                type: string
              metadata:
                description: |-
                  Metadata contains arbitrary JSON metadata for storing cluster-specific configuration.
                  Used for custom cluster properties and integration with external systems.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              nodePools:
                description: NodePools defines the worker node configurations managed
                  by this cluster.
                items:
                  description: ClusterNodePool defines the configuration for a group
                    of worker nodes in the cluster.
                  properties:
                    cloudSettings:
                      description: CloudSettings contains cloud provider-specific
                        configuration for this node pool.
                      properties:
                        aws:
                          description: AWS contains Amazon Web Services specific node
                            pool configuration.
                          properties:
                            launchTemplateId:
                              description: LaunchTemplateId specifies a custom EC2
                                launch template ID for node provisioning.
                              type: string
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    instanceType:
                      description: InstanceType specifies the cloud provider instance
                        type for nodes in this pool.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are key-value pairs applied to nodes for
                        workload scheduling and organization.
                      type: object
                    maxSize:
                      description: MaxSize is the maximum number of nodes that can
                        be running in this pool.
                      format: int64
                      minimum: 1
                      type: integer
                    minSize:
                      description: MinSize is the minimum number of nodes that must
                        be running in this pool.
                      format: int64
                      minimum: 1
                      type: integer
                    name:
                      description: Name is the unique identifier for this node pool
                        within the cluster.
                      type: string
                    taints:
                      description: Taints are restrictions applied to nodes to control
                        which pods can be scheduled.
                      items:
                        description: Taint represents a Kubernetes taint.
                        properties:
                          effect:
                            description: Effect specifies the effect for the taint.
                            enum:
                            - NoSchedule
                            - NoExecute
                            - PreferNoSchedule
                            type: string
                          key:
                            description: Key is the key of the taint.
                            type: string
                          value:
                            description: Value is the value of the taint.
                            type: string
                        required:
                        - effect
                        - key
                        - value
                        type: object
                      type: array
                  required:
                  - instanceType
                  - maxSize
                  - minSize
                  - name
                  type: object
                type: array
              projectRef:
                description: |-
                  ProjectRef references the project this cluster belongs to for multi-tenancy and access control.
                  If not provided, the cluster will be assigned to the default project.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              protect:
                description: |-
                  Protect prevents accidental deletion of this cluster.
                  When enabled, the cluster cannot be deleted through the Console UI or API.
                example: false
                type: boolean
              providerRef:
                description: |-
                  ProviderRef references the cloud provider to use for this cluster.
                  Can be skipped only for BYOK clusters where infrastructure is externally provisioned.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              tags:
                additionalProperties:
                  type: string
                description: |-
                  Tags are key-value pairs used to categorize and filter clusters in fleet management.
                  Used for organizing clusters by environment, team, or other operational criteria.
                type: object
              version:
                description: |-
                  Version specifies the Kubernetes version to use for this cluster.
                  Can be skipped only for BYOK (Bring Your Own Kubernetes) clusters where a version is externally managed.
                example: 1.25.11
                type: string
            type: object
          status:
            description: ClusterStatus represents the observed state of a Cluster.
            properties:
              conditions:
                description: Represents the observations of a PrAutomation's current
                  state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentVersion:
                description: CurrentVersion contains the actual Kubernetes version
                  currently running on this cluster.
                type: string
              id:
                description: ID of the resource in the Console API.
                type: string
              kasURL:
                description: |-
                  KasURL contains the Kubernetes API Server URL for accessing this cluster.
                  Used by the Console and deployment operators for cluster communication.
                type: string
              pingedAt:
                description: PingedAt contains the timestamp of the last successful
                  cluster health check.
                type: string
              sha:
                description: SHA of last applied configuration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
