---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clusters.deployments.plural.sh
spec:
  group: deployments.plural.sh
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current Kubernetes version
      jsonPath: .status.currentVersion
      name: CurrentVersion
      type: string
    - description: Console ID
      jsonPath: .status.id
      name: Id
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bindings:
                description: Bindings contain read and write policies of this cluster
                properties:
                  read:
                    description: Read bindings.
                    items:
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                  write:
                    description: Write bindings.
                    items:
                      properties:
                        UserID:
                          type: string
                        groupID:
                          type: string
                        groupName:
                          type: string
                        id:
                          type: string
                        userEmail:
                          type: string
                      type: object
                    type: array
                type: object
              cloud:
                description: Cloud provider to use for this cluster.
                enum:
                - aws
                - azure
                - gcp
                - byok
                example: azure
                type: string
                x-kubernetes-validations:
                - message: Cloud is immutable
                  rule: self == oldSelf
              cloudSettings:
                description: CloudSettings contains cloud-specific settings for this
                  cluster.
                properties:
                  aws:
                    description: AWS cluster customizations.
                    properties:
                      region:
                        description: Region in AWS to deploy this cluster to.
                        type: string
                    required:
                    - region
                    type: object
                  azure:
                    description: Azure cluster customizations.
                    properties:
                      location:
                        description: Location in Azure to deploy this cluster to.
                        example: eastus
                        type: string
                      network:
                        description: Network is a name for the Azure virtual network
                          for this cluster.
                        example: mynetwork
                        type: string
                      resourceGroup:
                        description: ResourceGroup is a name for the Azure resource
                          group for this cluster.
                        example: myresourcegroup
                        type: string
                      subscriptionId:
                        description: SubscriptionId is GUID of the Azure subscription
                          to hold this cluster.
                        type: string
                    required:
                    - location
                    - network
                    - resourceGroup
                    - subscriptionId
                    type: object
                  gcp:
                    description: GCP cluster customizations.
                    properties:
                      network:
                        description: Network in GCP to use when creating the cluster.
                        type: string
                      project:
                        description: Project in GCP to deploy cluster to.
                        type: string
                      region:
                        description: Region in GCP to deploy cluster to.
                        type: string
                    required:
                    - network
                    - project
                    - region
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              handle:
                description: Handle is a short, unique human-readable name used to
                  identify this cluster. Does not necessarily map to the cloud resource
                  name. This has to be specified in order to adopt existing cluster.
                example: myclusterhandle
                type: string
              nodePools:
                description: NodePools contains specs of node pools managed by this
                  cluster.
                items:
                  properties:
                    cloudSettings:
                      description: CloudSettings contains cloud-specific settings
                        for this node pool.
                      properties:
                        aws:
                          description: AWS node pool customizations.
                          properties:
                            launchTemplateId:
                              description: LaunchTemplateId is an ID of custom launch
                                template for your nodes. Useful for Golden AMI setups.
                              type: string
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    instanceType:
                      description: InstanceType contains the type of node to use.
                        Usually cloud-specific.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels to apply to the nodes in this pool. Useful
                        for node selectors.
                      type: object
                    maxSize:
                      description: MaxSize is maximum number of instances in this
                        node pool.
                      format: int64
                      minimum: 1
                      type: integer
                    minSize:
                      description: MinSize is minimum number of instances in this
                        node pool.
                      format: int64
                      minimum: 1
                      type: integer
                    name:
                      description: Name of the node pool. Must be unique.
                      type: string
                    taints:
                      description: Taints you'd want to apply to a node, i.e. for
                        preventing scheduling on spot instances.
                      items:
                        description: Taint represents a Kubernetes taint.
                        properties:
                          effect:
                            description: Effect specifies the effect for the taint.
                            enum:
                            - NoSchedule
                            - NoExecute
                            - PreferNoSchedule
                            type: string
                          key:
                            description: Key is the key of the taint.
                            type: string
                          value:
                            description: Value is the value of the taint.
                            type: string
                        required:
                        - effect
                        - key
                        - value
                        type: object
                      type: array
                  required:
                  - instanceType
                  - maxSize
                  - minSize
                  - name
                  type: object
                type: array
              protect:
                description: Protect cluster from being deleted.
                example: false
                type: boolean
              providerRef:
                description: ProviderRef references provider to use for this cluster.
                  Can be skipped only for BYOK.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              tags:
                additionalProperties:
                  type: string
                description: Tags used to filter clusters.
                type: object
              version:
                description: Version of Kubernetes to use for this cluster. Can be
                  skipped only for BYOK.
                example: 1.25.11
                type: string
            type: object
          status:
            properties:
              conditions:
                description: Represents the observations of a Cluster current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentVersion:
                description: CurrentVersion contains current Kubernetes version this
                  cluster is using.
                type: string
              id:
                description: ID from Console.
                type: string
              kasURL:
                description: KasURL contains KAS URL.
                type: string
              pingedAt:
                description: PingedAt contains timestamp of last successful cluster
                  ping.
                type: string
              sha:
                description: SHA of last applied configuration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
