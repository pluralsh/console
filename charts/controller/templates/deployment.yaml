{{ $consoleUrl := .Values.consoleUrl | default (printf "http://console.%s:4000" .Release.Namespace) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "controller.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/part-of: plural-deployment-controller
  {{- include "controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/part-of: plural-deployment-controller
    {{- include "controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: manager
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/part-of: plural-deployment-controller
      {{- include "controller.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.controllerManager.kubeRbacProxy.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag | default (printf "v%s" .Chart.AppVersion) }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent
          10 }}
        securityContext: {{- toYaml .Values.controllerManager.kubeRbacProxy.containerSecurityContext
          | nindent 10 }}
      - args:
        {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        - --console-url={{ $consoleUrl }}/gql
        - --console-token=$(CONSOLE_TOKEN)
        command:
        - /manager
        env:
        - name: CONSOLE_TOKEN
          valueFrom:
            secretKeyRef: {{- toYaml .Values.tokenSecretRef | nindent 14 }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default (printf "v%s" .Chart.AppVersion) }}
        imagePullPolicy: {{ .Values.controllerManager.manager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "controller.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10